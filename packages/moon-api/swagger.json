{
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"AavePoolAPIResponse_any_": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"data": {}
				},
				"required": [
					"success",
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"AavePoolTransaction": {
				"properties": {
					"data": {
						"type": "string"
					},
					"value": {
						"type": "string"
					},
					"to": {
						"type": "string"
					},
					"from": {
						"type": "string"
					},
					"gasPrice": {
						"type": "string"
					},
					"gasLimit": {
						"type": "string"
					},
					"maxPriorityFeePerGas": {
						"type": "string"
					},
					"maxFeePerGas": {
						"type": "string"
					},
					"nonce": {
						"type": "number",
						"format": "double"
					},
					"type": {
						"type": "number",
						"format": "double"
					},
					"chainId": {
						"type": "string"
					}
				},
				"required": [
					"data",
					"value",
					"to",
					"from",
					"nonce",
					"chainId"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Tx": {
				"properties": {
					"type": {
						"type": "number",
						"format": "double"
					},
					"chain_id": {
						"type": "number",
						"format": "double"
					},
					"data": {
						"type": "string"
					},
					"gas": {
						"type": "string"
					},
					"gas_price": {
						"type": "string"
					},
					"gas_tip_cap": {
						"type": "string",
						"nullable": true
					},
					"gas_fee_cap": {
						"type": "string",
						"nullable": true
					},
					"value": {
						"type": "string"
					},
					"nonce": {
						"type": "number",
						"format": "double"
					},
					"from": {
						"type": "string"
					},
					"to": {
						"type": "string",
						"nullable": true
					},
					"blob_gas": {
						"type": "string",
						"nullable": true
					},
					"blob_gas_fee_cap": {
						"type": "string",
						"nullable": true
					},
					"blob_hashes": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"nullable": true
					},
					"v": {
						"type": "string"
					},
					"r": {
						"type": "string"
					},
					"s": {
						"type": "string"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"TransactionRequest": {
				"properties": {
					"nonce": {
						"type": "string"
					},
					"data": {
						"type": "string"
					},
					"value": {
						"type": "string"
					},
					"to": {
						"type": "string"
					},
					"from": {
						"type": "string"
					},
					"maxFeePerGas": {
						"type": "string"
					},
					"maxPriorityFeePerGas": {
						"type": "string"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"TransactionData": {
				"properties": {
					"moon_scan_url": {
						"type": "string"
					},
					"transaction_hash": {
						"type": "string"
					},
					"signed_transaction": {
						"type": "string"
					},
					"signed_message": {
						"type": "string"
					},
					"raw_transaction": {
						"type": "string"
					},
					"signature": {
						"type": "string"
					},
					"transaction": {
						"$ref": "#/components/schemas/Tx"
					},
					"userOps": {
						"items": {
							"$ref": "#/components/schemas/TransactionRequest"
						},
						"type": "array"
					},
					"userop_transaction": {
						"type": "string"
					}
				},
				"required": [
					"transaction_hash",
					"signed_transaction"
				],
				"type": "object",
				"additionalProperties": false
			},
			"BroadCastRawTransactionResponse": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"data": {
						"type": "string"
					}
				},
				"required": [
					"success",
					"message",
					"data"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Transaction": {
				"properties": {
					"transaction_hash": {
						"type": "string"
					},
					"signed_transaction": {
						"type": "string"
					},
					"raw_transaction": {
						"type": "string"
					},
					"data": {
						"type": "string",
						"nullable": true
					},
					"transactions": {
						"items": {
							"$ref": "#/components/schemas/TransactionData"
						},
						"type": "array"
					},
					"moon_scan_url": {
						"type": "string"
					},
					"signature": {
						"type": "string"
					},
					"transaction": {
						"$ref": "#/components/schemas/Tx"
					},
					"userOps": {
						"items": {
							"$ref": "#/components/schemas/TransactionRequest"
						},
						"type": "array"
					},
					"userop_transaction": {
						"type": "string"
					},
					"user_op": {
						"type": "string"
					},
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"broadcasted": {
						"$ref": "#/components/schemas/BroadCastRawTransactionResponse"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"AavePoolExecuteFunctionResult": {
				"properties": {
					"broadcasted": {
						"$ref": "#/components/schemas/BroadCastRawTransactionResponse"
					},
					"message": {
						"type": "string"
					},
					"success": {
						"type": "boolean"
					},
					"user_op": {
						"type": "string"
					},
					"data": {
						"$ref": "#/components/schemas/Transaction"
					},
					"params": {
						"items": {},
						"type": "array"
					},
					"function": {
						"type": "string"
					},
					"transaction": {
						"$ref": "#/components/schemas/AavePoolTransaction"
					}
				},
				"required": [
					"params",
					"function",
					"transaction"
				],
				"type": "object"
			},
			"AavePoolAPIResponse_AavePoolExecuteFunctionResult_": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"data": {
						"$ref": "#/components/schemas/AavePoolExecuteFunctionResult"
					}
				},
				"required": [
					"success",
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"AccessTuple": {
				"properties": {
					"address": {
						"type": "string"
					},
					"storageKeys": {
						"items": {
							"type": "string"
						},
						"type": "array"
					}
				},
				"required": [
					"address",
					"storageKeys"
				],
				"type": "object",
				"additionalProperties": false
			},
			"TokenAmount": {
				"properties": {
					"tokenAddress": {
						"type": "string"
					},
					"amount": {
						"type": "string"
					}
				},
				"required": [
					"tokenAddress",
					"amount"
				],
				"type": "object",
				"additionalProperties": false
			},
			"TokenProportion": {
				"properties": {
					"tokenAddress": {
						"type": "string"
					},
					"proportion": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"tokenAddress",
					"proportion"
				],
				"type": "object",
				"additionalProperties": false
			},
			"AavePoolInputBody": {
				"properties": {
					"to": {
						"type": "string"
					},
					"data": {
						"type": "string"
					},
					"value": {
						"type": "string"
					},
					"gasLimit": {
						"type": "string"
					},
					"nonce": {
						"type": "string"
					},
					"gas": {
						"type": "string"
					},
					"gasPrice": {
						"type": "string"
					},
					"maxFeePerGas": {
						"type": "string"
					},
					"maxPriorityFeePerGas": {
						"type": "string"
					},
					"chain_id": {
						"type": "string"
					},
					"encoding": {
						"type": "string"
					},
					"type": {
						"type": "number",
						"format": "double"
					},
					"accessList": {
						"items": {
							"$ref": "#/components/schemas/AccessTuple"
						},
						"type": "array"
					},
					"blobGas": {
						"type": "string"
					},
					"blobGasFeeCap": {
						"type": "string"
					},
					"blobHashes": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"dryrun": {
						"type": "boolean"
					},
					"input": {
						"type": "string"
					},
					"EOA": {
						"type": "boolean"
					},
					"contract_address": {
						"type": "string"
					},
					"token_id": {
						"type": "string"
					},
					"token_ids": {
						"type": "string"
					},
					"approved": {
						"type": "boolean"
					},
					"broadcast": {
						"type": "boolean"
					},
					"alwaysIncrementNonce": {
						"type": "boolean"
					},
					"asset": {
						"type": "string"
					},
					"amount": {
						"type": "string"
					},
					"interestRateMode": {
						"type": "number",
						"format": "double"
					},
					"referralCode": {
						"type": "number",
						"format": "double"
					},
					"onBehalfOf": {
						"type": "string"
					},
					"receiverAddress": {
						"type": "string"
					},
					"assets": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"amounts": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"modes": {
						"items": {
							"type": "number",
							"format": "double"
						},
						"type": "array"
					},
					"params": {
						"type": "string"
					},
					"rateMode": {
						"type": "number",
						"format": "double"
					},
					"useAsCollateral": {
						"type": "boolean"
					},
					"collateralAsset": {
						"type": "string"
					},
					"debtAsset": {
						"type": "string"
					},
					"user": {
						"type": "string"
					},
					"debtToCover": {
						"type": "string"
					},
					"receiveAToken": {
						"type": "boolean"
					},
					"inputTokens": {
						"items": {
							"$ref": "#/components/schemas/TokenAmount"
						},
						"type": "array"
					},
					"outputTokens": {
						"items": {
							"$ref": "#/components/schemas/TokenProportion"
						},
						"type": "array"
					},
					"slippageLimitPercent": {
						"type": "number",
						"format": "double"
					},
					"minHealthFactor": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "number",
								"format": "double"
							}
						]
					},
					"premiums": {
						"anyOf": [
							{
								"items": {
									"type": "string"
								},
								"type": "array"
							},
							{
								"items": {
									"type": "number",
									"format": "double"
								},
								"type": "array"
							}
						]
					},
					"initiator": {
						"type": "string"
					},
					"role": {
						"type": "string"
					},
					"account": {
						"type": "string"
					},
					"initialDeposit": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "number",
								"format": "double"
							}
						]
					},
					"borrowAmount": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "number",
								"format": "double"
							}
						]
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"PoolAddressProviderAPIResponse_string_": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"data": {
						"type": "string"
					}
				},
				"required": [
					"success",
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"PoolAddressProviderTransaction": {
				"properties": {
					"data": {
						"type": "string"
					},
					"value": {
						"type": "string"
					},
					"to": {
						"type": "string"
					},
					"from": {
						"type": "string"
					},
					"gasPrice": {
						"type": "string"
					},
					"gasLimit": {
						"type": "string"
					},
					"maxPriorityFeePerGas": {
						"type": "string"
					},
					"maxFeePerGas": {
						"type": "string"
					},
					"nonce": {
						"type": "number",
						"format": "double"
					},
					"type": {
						"type": "number",
						"format": "double"
					},
					"chainId": {
						"type": "string"
					}
				},
				"required": [
					"data",
					"value",
					"to",
					"from",
					"nonce",
					"chainId"
				],
				"type": "object",
				"additionalProperties": false
			},
			"PoolAddressProviderExecuteFunctionResult": {
				"properties": {
					"broadcasted": {
						"$ref": "#/components/schemas/BroadCastRawTransactionResponse"
					},
					"message": {
						"type": "string"
					},
					"success": {
						"type": "boolean"
					},
					"user_op": {
						"type": "string"
					},
					"data": {
						"$ref": "#/components/schemas/Transaction"
					},
					"params": {
						"items": {},
						"type": "array"
					},
					"function": {
						"type": "string"
					},
					"transaction": {
						"$ref": "#/components/schemas/PoolAddressProviderTransaction"
					}
				},
				"required": [
					"params",
					"function",
					"transaction"
				],
				"type": "object"
			},
			"PoolAddressProviderAPIResponse_PoolAddressProviderExecuteFunctionResult_": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"data": {
						"$ref": "#/components/schemas/PoolAddressProviderExecuteFunctionResult"
					}
				},
				"required": [
					"success",
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"PoolAddressProviderInputBody": {
				"properties": {
					"to": {
						"type": "string"
					},
					"data": {
						"type": "string"
					},
					"value": {
						"type": "string"
					},
					"gasLimit": {
						"type": "string"
					},
					"nonce": {
						"type": "string"
					},
					"gas": {
						"type": "string"
					},
					"gasPrice": {
						"type": "string"
					},
					"maxFeePerGas": {
						"type": "string"
					},
					"maxPriorityFeePerGas": {
						"type": "string"
					},
					"chain_id": {
						"type": "string"
					},
					"encoding": {
						"type": "string"
					},
					"type": {
						"type": "number",
						"format": "double"
					},
					"accessList": {
						"items": {
							"$ref": "#/components/schemas/AccessTuple"
						},
						"type": "array"
					},
					"blobGas": {
						"type": "string"
					},
					"blobGasFeeCap": {
						"type": "string"
					},
					"blobHashes": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"dryrun": {
						"type": "boolean"
					},
					"input": {
						"type": "string"
					},
					"EOA": {
						"type": "boolean"
					},
					"contract_address": {
						"type": "string"
					},
					"token_id": {
						"type": "string"
					},
					"token_ids": {
						"type": "string"
					},
					"approved": {
						"type": "boolean"
					},
					"broadcast": {
						"type": "boolean"
					},
					"alwaysIncrementNonce": {
						"type": "boolean"
					},
					"asset": {
						"type": "string"
					},
					"amount": {
						"type": "string"
					},
					"interestRateMode": {
						"type": "number",
						"format": "double"
					},
					"referralCode": {
						"type": "number",
						"format": "double"
					},
					"onBehalfOf": {
						"type": "string"
					},
					"receiverAddress": {
						"type": "string"
					},
					"assets": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"amounts": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"modes": {
						"items": {
							"type": "number",
							"format": "double"
						},
						"type": "array"
					},
					"params": {
						"type": "string"
					},
					"rateMode": {
						"type": "number",
						"format": "double"
					},
					"useAsCollateral": {
						"type": "boolean"
					},
					"collateralAsset": {
						"type": "string"
					},
					"debtAsset": {
						"type": "string"
					},
					"user": {
						"type": "string"
					},
					"debtToCover": {
						"type": "string"
					},
					"receiveAToken": {
						"type": "boolean"
					},
					"inputTokens": {
						"items": {
							"$ref": "#/components/schemas/TokenAmount"
						},
						"type": "array"
					},
					"outputTokens": {
						"items": {
							"$ref": "#/components/schemas/TokenProportion"
						},
						"type": "array"
					},
					"slippageLimitPercent": {
						"type": "number",
						"format": "double"
					},
					"minHealthFactor": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "number",
								"format": "double"
							}
						]
					},
					"premiums": {
						"anyOf": [
							{
								"items": {
									"type": "string"
								},
								"type": "array"
							},
							{
								"items": {
									"type": "number",
									"format": "double"
								},
								"type": "array"
							}
						]
					},
					"initiator": {
						"type": "string"
					},
					"role": {
						"type": "string"
					},
					"account": {
						"type": "string"
					},
					"initialDeposit": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "number",
								"format": "double"
							}
						]
					},
					"borrowAmount": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "number",
								"format": "double"
							}
						]
					},
					"newAddress": {
						"type": "string"
					},
					"newMarketId": {
						"type": "string"
					},
					"newImplementationAddress": {
						"type": "string"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"PoolAddressProviderRegistryAPIResponse_string_": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"data": {
						"type": "string"
					}
				},
				"required": [
					"success",
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"PoolAddressProviderRegistryAPIResponse_any-Array_": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"data": {
						"items": {},
						"type": "array"
					}
				},
				"required": [
					"success",
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"AAVEv3RewardsAPIResponse_string-Array_": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"data": {
						"items": {
							"type": "string"
						},
						"type": "array"
					}
				},
				"required": [
					"success",
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"AAVEv3RewardsAPIResponse_string_": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"data": {
						"type": "string"
					}
				},
				"required": [
					"success",
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"AAVEv3RewardsTransaction": {
				"properties": {
					"data": {
						"type": "string"
					},
					"value": {
						"type": "string"
					},
					"to": {
						"type": "string"
					},
					"from": {
						"type": "string"
					},
					"gasPrice": {
						"type": "string"
					},
					"gasLimit": {
						"type": "string"
					},
					"maxPriorityFeePerGas": {
						"type": "string"
					},
					"maxFeePerGas": {
						"type": "string"
					},
					"nonce": {
						"type": "number",
						"format": "double"
					},
					"type": {
						"type": "number",
						"format": "double"
					},
					"chainId": {
						"type": "string"
					}
				},
				"required": [
					"data",
					"value",
					"to",
					"from",
					"nonce",
					"chainId"
				],
				"type": "object",
				"additionalProperties": false
			},
			"AAVEv3RewardsExecuteFunctionResult": {
				"properties": {
					"broadcasted": {
						"$ref": "#/components/schemas/BroadCastRawTransactionResponse"
					},
					"message": {
						"type": "string"
					},
					"success": {
						"type": "boolean"
					},
					"user_op": {
						"type": "string"
					},
					"data": {
						"$ref": "#/components/schemas/Transaction"
					},
					"params": {
						"items": {},
						"type": "array"
					},
					"function": {
						"type": "string"
					},
					"transaction": {
						"$ref": "#/components/schemas/AAVEv3RewardsTransaction"
					}
				},
				"required": [
					"params",
					"function",
					"transaction"
				],
				"type": "object"
			},
			"AAVEv3RewardsAPIResponse_AAVEv3RewardsExecuteFunctionResult_": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"data": {
						"$ref": "#/components/schemas/AAVEv3RewardsExecuteFunctionResult"
					}
				},
				"required": [
					"success",
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"AAVEv3RewardsInputBody": {
				"properties": {
					"to": {
						"type": "string"
					},
					"data": {
						"type": "string"
					},
					"value": {
						"type": "string"
					},
					"gasLimit": {
						"type": "string"
					},
					"nonce": {
						"type": "string"
					},
					"gas": {
						"type": "string"
					},
					"gasPrice": {
						"type": "string"
					},
					"maxFeePerGas": {
						"type": "string"
					},
					"maxPriorityFeePerGas": {
						"type": "string"
					},
					"chain_id": {
						"type": "string"
					},
					"encoding": {
						"type": "string"
					},
					"type": {
						"type": "number",
						"format": "double"
					},
					"accessList": {
						"items": {
							"$ref": "#/components/schemas/AccessTuple"
						},
						"type": "array"
					},
					"blobGas": {
						"type": "string"
					},
					"blobGasFeeCap": {
						"type": "string"
					},
					"blobHashes": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"dryrun": {
						"type": "boolean"
					},
					"input": {
						"type": "string"
					},
					"EOA": {
						"type": "boolean"
					},
					"contract_address": {
						"type": "string"
					},
					"token_id": {
						"type": "string"
					},
					"token_ids": {
						"type": "string"
					},
					"approved": {
						"type": "boolean"
					},
					"broadcast": {
						"type": "boolean"
					},
					"alwaysIncrementNonce": {
						"type": "boolean"
					},
					"asset": {
						"type": "string"
					},
					"amount": {
						"type": "string"
					},
					"interestRateMode": {
						"type": "number",
						"format": "double"
					},
					"referralCode": {
						"type": "number",
						"format": "double"
					},
					"onBehalfOf": {
						"type": "string"
					},
					"receiverAddress": {
						"type": "string"
					},
					"assets": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"amounts": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"modes": {
						"items": {
							"type": "number",
							"format": "double"
						},
						"type": "array"
					},
					"params": {
						"type": "string"
					},
					"rateMode": {
						"type": "number",
						"format": "double"
					},
					"useAsCollateral": {
						"type": "boolean"
					},
					"collateralAsset": {
						"type": "string"
					},
					"debtAsset": {
						"type": "string"
					},
					"user": {
						"type": "string"
					},
					"debtToCover": {
						"type": "string"
					},
					"receiveAToken": {
						"type": "boolean"
					},
					"inputTokens": {
						"items": {
							"$ref": "#/components/schemas/TokenAmount"
						},
						"type": "array"
					},
					"outputTokens": {
						"items": {
							"$ref": "#/components/schemas/TokenProportion"
						},
						"type": "array"
					},
					"slippageLimitPercent": {
						"type": "number",
						"format": "double"
					},
					"minHealthFactor": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "number",
								"format": "double"
							}
						]
					},
					"premiums": {
						"anyOf": [
							{
								"items": {
									"type": "string"
								},
								"type": "array"
							},
							{
								"items": {
									"type": "number",
									"format": "double"
								},
								"type": "array"
							}
						]
					},
					"initiator": {
						"type": "string"
					},
					"role": {
						"type": "string"
					},
					"account": {
						"type": "string"
					},
					"initialDeposit": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "number",
								"format": "double"
							}
						]
					},
					"borrowAmount": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "number",
								"format": "double"
							}
						]
					},
					"reward": {
						"type": "string"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"BigNumber": {},
			"RewardInfo": {
				"properties": {
					"rewardTokenSymbol": {
						"type": "string"
					},
					"rewardTokenAddress": {
						"type": "string"
					},
					"rewardOracleAddress": {
						"type": "string"
					},
					"emissionPerSecond": {
						"$ref": "#/components/schemas/BigNumber"
					},
					"incentivesLastUpdateTimestamp": {
						"$ref": "#/components/schemas/BigNumber"
					},
					"tokenIncentivesIndex": {
						"$ref": "#/components/schemas/BigNumber"
					},
					"emissionEndTimestamp": {
						"$ref": "#/components/schemas/BigNumber"
					},
					"rewardPriceFeed": {
						"$ref": "#/components/schemas/BigNumber"
					},
					"rewardTokenDecimals": {
						"type": "number",
						"format": "double"
					},
					"precision": {
						"type": "number",
						"format": "double"
					},
					"priceFeedDecimals": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"rewardTokenSymbol",
					"rewardTokenAddress",
					"rewardOracleAddress",
					"emissionPerSecond",
					"incentivesLastUpdateTimestamp",
					"tokenIncentivesIndex",
					"emissionEndTimestamp",
					"rewardPriceFeed",
					"rewardTokenDecimals",
					"precision",
					"priceFeedDecimals"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IncentiveData": {
				"properties": {
					"tokenAddress": {
						"type": "string"
					},
					"incentiveControllerAddress": {
						"type": "string"
					},
					"rewardsTokenInformation": {
						"items": {
							"$ref": "#/components/schemas/RewardInfo"
						},
						"type": "array"
					}
				},
				"required": [
					"tokenAddress",
					"incentiveControllerAddress",
					"rewardsTokenInformation"
				],
				"type": "object",
				"additionalProperties": false
			},
			"AggregatedReserveIncentiveData": {
				"properties": {
					"underlyingAsset": {
						"type": "string"
					},
					"aIncentiveData": {
						"$ref": "#/components/schemas/IncentiveData"
					},
					"vIncentiveData": {
						"$ref": "#/components/schemas/IncentiveData"
					},
					"sIncentiveData": {
						"$ref": "#/components/schemas/IncentiveData"
					}
				},
				"required": [
					"underlyingAsset",
					"aIncentiveData",
					"vIncentiveData",
					"sIncentiveData"
				],
				"type": "object",
				"additionalProperties": false
			},
			"UserRewardInfo": {
				"properties": {
					"rewardTokenSymbol": {
						"type": "string"
					},
					"rewardOracleAddress": {
						"type": "string"
					},
					"rewardTokenAddress": {
						"type": "string"
					},
					"userUnclaimedRewards": {
						"$ref": "#/components/schemas/BigNumber"
					},
					"tokenIncentivesUserIndex": {
						"$ref": "#/components/schemas/BigNumber"
					},
					"rewardPriceFeed": {
						"$ref": "#/components/schemas/BigNumber"
					},
					"priceFeedDecimals": {
						"type": "number",
						"format": "double"
					},
					"rewardTokenDecimals": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"rewardTokenSymbol",
					"rewardOracleAddress",
					"rewardTokenAddress",
					"userUnclaimedRewards",
					"tokenIncentivesUserIndex",
					"rewardPriceFeed",
					"priceFeedDecimals",
					"rewardTokenDecimals"
				],
				"type": "object",
				"additionalProperties": false
			},
			"UserIncentiveData": {
				"properties": {
					"tokenAddress": {
						"type": "string"
					},
					"incentiveControllerAddress": {
						"type": "string"
					},
					"userRewardsInformation": {
						"items": {
							"$ref": "#/components/schemas/UserRewardInfo"
						},
						"type": "array"
					}
				},
				"required": [
					"tokenAddress",
					"incentiveControllerAddress",
					"userRewardsInformation"
				],
				"type": "object",
				"additionalProperties": false
			},
			"UserReserveIncentiveData": {
				"properties": {
					"underlyingAsset": {
						"type": "string"
					},
					"aTokenIncentivesUserData": {
						"$ref": "#/components/schemas/UserIncentiveData"
					},
					"vTokenIncentivesUserData": {
						"$ref": "#/components/schemas/UserIncentiveData"
					},
					"sTokenIncentivesUserData": {
						"$ref": "#/components/schemas/UserIncentiveData"
					}
				},
				"required": [
					"underlyingAsset",
					"aTokenIncentivesUserData",
					"vTokenIncentivesUserData",
					"sTokenIncentivesUserData"
				],
				"type": "object",
				"additionalProperties": false
			},
			"FullReservesIncentiveData": {
				"properties": {
					"reservesIncentiveData": {
						"items": {
							"$ref": "#/components/schemas/AggregatedReserveIncentiveData"
						},
						"type": "array"
					},
					"userReserveIncentiveData": {
						"items": {
							"$ref": "#/components/schemas/UserReserveIncentiveData"
						},
						"type": "array"
					}
				},
				"required": [
					"reservesIncentiveData",
					"userReserveIncentiveData"
				],
				"type": "object",
				"additionalProperties": false
			},
			"AAVEv3UiIncentiveDataProviderAPIResponse_FullReservesIncentiveData_": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"data": {
						"$ref": "#/components/schemas/FullReservesIncentiveData"
					}
				},
				"required": [
					"success",
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"AAVEv3UiIncentiveDataProviderAPIResponse_AggregatedReserveIncentiveData-Array_": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"data": {
						"items": {
							"$ref": "#/components/schemas/AggregatedReserveIncentiveData"
						},
						"type": "array"
					}
				},
				"required": [
					"success",
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"AAVEv3UiIncentiveDataProviderAPIResponse_UserReserveIncentiveData-Array_": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"data": {
						"items": {
							"$ref": "#/components/schemas/UserReserveIncentiveData"
						},
						"type": "array"
					}
				},
				"required": [
					"success",
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"AAVEv3WalletBalanceProviderAPIResponse_string_": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"data": {
						"type": "string"
					}
				},
				"required": [
					"success",
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"AAVEv3WalletBalanceProviderAPIResponse_string-Array_": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"data": {
						"items": {
							"type": "string"
						},
						"type": "array"
					}
				},
				"required": [
					"success",
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"AAVEv3WalletBalanceProviderAPIResponse__tokens-string-Array--balances-string-Array--__": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"data": {
						"properties": {
							"balances": {
								"items": {
									"type": "string"
								},
								"type": "array"
							},
							"tokens": {
								"items": {
									"type": "string"
								},
								"type": "array"
							}
						},
						"required": [
							"balances",
							"tokens"
						],
						"type": "object"
					}
				},
				"required": [
					"success",
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"NonceResponse": {
				"properties": {
					"nonce": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"nonce"
				],
				"type": "object",
				"additionalProperties": false
			},
			"InputBody": {
				"properties": {
					"to": {
						"type": "string"
					},
					"data": {
						"type": "string"
					},
					"value": {
						"type": "string"
					},
					"gasLimit": {
						"type": "string"
					},
					"nonce": {
						"type": "string"
					},
					"gas": {
						"type": "string"
					},
					"gasPrice": {
						"type": "string"
					},
					"maxFeePerGas": {
						"type": "string"
					},
					"maxPriorityFeePerGas": {
						"type": "string"
					},
					"chain_id": {
						"type": "string"
					},
					"encoding": {
						"type": "string"
					},
					"type": {
						"type": "number",
						"format": "double"
					},
					"accessList": {
						"items": {
							"$ref": "#/components/schemas/AccessTuple"
						},
						"type": "array"
					},
					"blobGas": {
						"type": "string"
					},
					"blobGasFeeCap": {
						"type": "string"
					},
					"blobHashes": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"dryrun": {
						"type": "boolean"
					},
					"input": {
						"type": "string"
					},
					"EOA": {
						"type": "boolean"
					},
					"contract_address": {
						"type": "string"
					},
					"token_id": {
						"type": "string"
					},
					"token_ids": {
						"type": "string"
					},
					"approved": {
						"type": "boolean"
					},
					"broadcast": {
						"type": "boolean"
					},
					"alwaysIncrementNonce": {
						"type": "boolean"
					},
					"asset": {
						"type": "string"
					},
					"amount": {
						"type": "string"
					},
					"interestRateMode": {
						"type": "number",
						"format": "double"
					},
					"referralCode": {
						"type": "number",
						"format": "double"
					},
					"onBehalfOf": {
						"type": "string"
					},
					"receiverAddress": {
						"type": "string"
					},
					"assets": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"amounts": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"modes": {
						"items": {
							"type": "number",
							"format": "double"
						},
						"type": "array"
					},
					"params": {
						"type": "string"
					},
					"rateMode": {
						"type": "number",
						"format": "double"
					},
					"useAsCollateral": {
						"type": "boolean"
					},
					"collateralAsset": {
						"type": "string"
					},
					"debtAsset": {
						"type": "string"
					},
					"user": {
						"type": "string"
					},
					"debtToCover": {
						"type": "string"
					},
					"receiveAToken": {
						"type": "boolean"
					},
					"inputTokens": {
						"items": {
							"$ref": "#/components/schemas/TokenAmount"
						},
						"type": "array"
					},
					"outputTokens": {
						"items": {
							"$ref": "#/components/schemas/TokenProportion"
						},
						"type": "array"
					},
					"slippageLimitPercent": {
						"type": "number",
						"format": "double"
					},
					"minHealthFactor": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "number",
								"format": "double"
							}
						]
					},
					"premiums": {
						"anyOf": [
							{
								"items": {
									"type": "string"
								},
								"type": "array"
							},
							{
								"items": {
									"type": "number",
									"format": "double"
								},
								"type": "array"
							}
						]
					},
					"initiator": {
						"type": "string"
					},
					"role": {
						"type": "string"
					},
					"account": {
						"type": "string"
					},
					"initialDeposit": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "number",
								"format": "double"
							}
						]
					},
					"borrowAmount": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "number",
								"format": "double"
							}
						]
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"NonceAPIResponse": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"body": {
						"$ref": "#/components/schemas/InputBody"
					},
					"address": {
						"type": "string"
					},
					"data": {
						"$ref": "#/components/schemas/NonceResponse"
					}
				},
				"required": [
					"success",
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"BalanceResponse": {
				"properties": {
					"balance": {
						"type": "string"
					}
				},
				"required": [
					"balance"
				],
				"type": "object",
				"additionalProperties": false
			},
			"BalanceAPIResponse": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"body": {
						"$ref": "#/components/schemas/InputBody"
					},
					"address": {
						"type": "string"
					},
					"data": {
						"$ref": "#/components/schemas/BalanceResponse"
					}
				},
				"required": [
					"success",
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"TransactionAPIResponse": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"body": {
						"$ref": "#/components/schemas/InputBody"
					},
					"address": {
						"type": "string"
					},
					"transaction_hash": {},
					"signedTx": {},
					"data": {
						"$ref": "#/components/schemas/Transaction"
					},
					"broadcasted": {
						"$ref": "#/components/schemas/BroadCastRawTransactionResponse"
					},
					"transaction": {},
					"function": {
						"type": "string"
					},
					"params": {
						"items": {},
						"type": "array"
					}
				},
				"required": [
					"success",
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"SignMessageAPIResponse": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"body": {
						"$ref": "#/components/schemas/InputBody"
					},
					"address": {
						"type": "string"
					},
					"data": {
						"$ref": "#/components/schemas/TransactionData"
					}
				},
				"required": [
					"success",
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"SignMessage": {
				"properties": {
					"chain_id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"data": {
						"type": "string"
					},
					"encoding": {
						"type": "string"
					},
					"header": {
						"type": "boolean"
					},
					"signtype": {
						"type": "boolean"
					}
				},
				"required": [
					"data"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ExportAccountAPIResponse": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"body": {
						"$ref": "#/components/schemas/InputBody"
					},
					"address": {
						"type": "string"
					},
					"data": {
						"properties": {
							"public_key": {
								"type": "string"
							},
							"private_key": {
								"type": "string"
							},
							"address": {
								"type": "string"
							}
						},
						"required": [
							"public_key",
							"private_key",
							"address"
						],
						"type": "object"
					}
				},
				"required": [
					"success",
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"SignTypedData": {
				"properties": {
					"chain_id": {
						"type": "string"
					},
					"data": {
						"type": "string"
					}
				},
				"required": [
					"data"
				],
				"type": "object",
				"additionalProperties": false
			},
			"AccountData": {
				"properties": {
					"keys": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"address": {
						"type": "string"
					},
					"private_key": {
						"type": "string"
					},
					"public_key": {
						"type": "string"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"AccountResponse": {
				"properties": {
					"data": {
						"$ref": "#/components/schemas/AccountData"
					}
				},
				"required": [
					"data"
				],
				"type": "object",
				"additionalProperties": false
			},
			"AccountAPIResponse": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"body": {
						"$ref": "#/components/schemas/InputBody"
					},
					"address": {
						"type": "string"
					},
					"data": {
						"$ref": "#/components/schemas/AccountResponse"
					}
				},
				"required": [
					"success",
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CreateAccountInput": {
				"properties": {
					"private_key": {
						"type": "string"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"DeployInput": {
				"properties": {
					"chain_id": {
						"type": "string"
					},
					"abi": {
						"type": "string"
					},
					"bytecode": {
						"type": "string"
					},
					"constructor_args": {
						"type": "string"
					}
				},
				"required": [
					"abi",
					"bytecode"
				],
				"type": "object",
				"additionalProperties": false
			},
			"BroadCastRawTransactionAPIResponse": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"body": {
						"$ref": "#/components/schemas/InputBody"
					},
					"address": {
						"type": "string"
					},
					"data": {
						"$ref": "#/components/schemas/BroadCastRawTransactionResponse"
					}
				},
				"required": [
					"success",
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"BroadcastInput": {
				"properties": {
					"chainId": {
						"type": "string"
					},
					"rawTransaction": {
						"type": "string"
					}
				},
				"required": [
					"chainId",
					"rawTransaction"
				],
				"type": "object",
				"additionalProperties": false
			},
			"AbiEncodeOutput": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"body": {
						"$ref": "#/components/schemas/InputBody"
					},
					"address": {
						"type": "string"
					},
					"data": {
						"properties": {
							"encoded": {
								"type": "string"
							}
						},
						"required": [
							"encoded"
						],
						"type": "object"
					}
				},
				"required": [
					"success",
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"AbiEncodeInput": {
				"properties": {
					"abi": {},
					"functionName": {
						"type": "string"
					},
					"params": {
						"items": {},
						"type": "array"
					}
				},
				"required": [
					"abi",
					"functionName",
					"params"
				],
				"type": "object",
				"additionalProperties": false
			},
			"BitcoinInput": {
				"properties": {
					"network": {
						"type": "string"
					},
					"private_key": {
						"type": "string"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"BitcoinTransactionOutput": {
				"properties": {
					"signedTx": {
						"type": "string"
					},
					"transaction_hash": {
						"type": "string"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"SRC20InscriptionOutput": {
				"properties": {
					"transactions": {
						"type": "string"
					}
				},
				"required": [
					"transactions"
				],
				"type": "object",
				"additionalProperties": false
			},
			"BRC20TransactionOutput": {
				"properties": {
					"transaction": {
						"type": "string"
					}
				},
				"required": [
					"transaction"
				],
				"type": "object",
				"additionalProperties": false
			},
			"UnsignedPSBTOutput": {
				"properties": {
					"psbt_hex": {
						"type": "string"
					}
				},
				"required": [
					"psbt_hex"
				],
				"type": "object",
				"additionalProperties": false
			},
			"BitcoinAPIResponse": {
				"properties": {
					"data": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/BitcoinTransactionOutput"
							},
							{
								"$ref": "#/components/schemas/SRC20InscriptionOutput"
							},
							{
								"$ref": "#/components/schemas/BRC20TransactionOutput"
							},
							{
								"$ref": "#/components/schemas/UnsignedPSBTOutput"
							}
						]
					},
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					}
				},
				"required": [
					"success",
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"BitcoinTransactionInput": {
				"properties": {
					"to": {
						"type": "string"
					},
					"value": {
						"type": "number",
						"format": "double"
					},
					"network": {
						"type": "string"
					},
					"compress": {
						"type": "boolean"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"SRC20InscriptionInput": {
				"properties": {
					"network": {
						"type": "string"
					},
					"prev_outputs": {
						"type": "string"
					},
					"inscription_data": {
						"type": "string"
					},
					"commit_fee_rate": {
						"type": "number",
						"format": "double"
					},
					"reveal_out_value": {
						"type": "number",
						"format": "double"
					},
					"address": {
						"type": "string"
					}
				},
				"required": [
					"network",
					"prev_outputs",
					"inscription_data",
					"commit_fee_rate",
					"reveal_out_value",
					"address"
				],
				"type": "object",
				"additionalProperties": false
			},
			"BRC20TransactionInput": {
				"properties": {
					"network": {
						"type": "string"
					},
					"op": {
						"type": "string"
					},
					"tick": {
						"type": "string"
					},
					"amt": {
						"type": "string"
					},
					"input_txid": {
						"type": "string"
					},
					"input_vout": {
						"type": "number",
						"format": "double"
					},
					"input_amount": {
						"type": "string"
					},
					"output_address": {
						"type": "string"
					},
					"change_address": {
						"type": "string"
					}
				},
				"required": [
					"network",
					"op",
					"tick",
					"amt",
					"input_txid",
					"input_vout",
					"input_amount",
					"output_address",
					"change_address"
				],
				"type": "object",
				"additionalProperties": false
			},
			"UnsignedPSBTInput": {
				"properties": {
					"network": {
						"type": "string"
					},
					"inputs": {
						"type": "string"
					},
					"outputs": {
						"type": "string"
					}
				},
				"required": [
					"network",
					"inputs",
					"outputs"
				],
				"type": "object",
				"additionalProperties": false
			},
			"BitcoinCashAPIResponse_AccountResponse_": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"data": {
						"$ref": "#/components/schemas/AccountResponse"
					}
				},
				"required": [
					"success",
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"BitcoinCashInput": {
				"properties": {
					"network": {
						"type": "string"
					},
					"private_key": {
						"type": "string"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"BitcoinCashTransactionOutput": {
				"properties": {
					"signedTx": {
						"type": "string"
					},
					"transaction_hash": {
						"type": "string"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"BitcoinCashAPIResponse_BitcoinCashTransactionOutput_": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"data": {
						"$ref": "#/components/schemas/BitcoinCashTransactionOutput"
					}
				},
				"required": [
					"success",
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"BitcoinCashTransactionInput": {
				"properties": {
					"to": {
						"type": "string"
					},
					"value": {
						"type": "number",
						"format": "double"
					},
					"network": {
						"type": "string"
					},
					"compress": {
						"type": "boolean"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"BitcoinCashAPIResponse__signed_tx-string__": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"data": {
						"properties": {
							"signed_tx": {
								"type": "string"
							}
						},
						"required": [
							"signed_tx"
						],
						"type": "object"
					}
				},
				"required": [
					"success",
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"BitcoinCashAPIResponse__psbt_hex-string__": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"data": {
						"properties": {
							"psbt_hex": {
								"type": "string"
							}
						},
						"required": [
							"psbt_hex"
						],
						"type": "object"
					}
				},
				"required": [
					"success",
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"BitcoinCashAPIResponse__signed_psbt_hex-string__": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"data": {
						"properties": {
							"signed_psbt_hex": {
								"type": "string"
							}
						},
						"required": [
							"signed_psbt_hex"
						],
						"type": "object"
					}
				},
				"required": [
					"success",
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CosmosAccount": {
				"properties": {
					"address": {
						"type": "string"
					},
					"pubkey": {
						"type": "string"
					}
				},
				"required": [
					"address",
					"pubkey"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CosmosAccountListResponse": {
				"properties": {
					"data": {
						"properties": {
							"keys": {
								"items": {
									"$ref": "#/components/schemas/CosmosAccount"
								},
								"type": "array"
							}
						},
						"required": [
							"keys"
						],
						"type": "object"
					}
				},
				"required": [
					"data"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CosmosAccountListAPIResponse": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"data": {
						"$ref": "#/components/schemas/CosmosAccountListResponse"
					}
				},
				"required": [
					"success",
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CosmosAccountResponse": {
				"properties": {
					"data": {
						"properties": {
							"address": {
								"type": "string"
							}
						},
						"required": [
							"address"
						],
						"type": "object"
					}
				},
				"required": [
					"data"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CosmosAccountAPIResponse": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"data": {
						"$ref": "#/components/schemas/CosmosAccountResponse"
					}
				},
				"required": [
					"success",
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"BaseCosmosAPIResponse": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					}
				},
				"required": [
					"success",
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CosmosTransactionResponse": {
				"properties": {
					"signedTx": {
						"type": "string"
					},
					"txHash": {
						"type": "string"
					}
				},
				"required": [
					"signedTx",
					"txHash"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CosmosTransactionAPIResponse": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"data": {
						"$ref": "#/components/schemas/CosmosTransactionResponse"
					}
				},
				"required": [
					"success",
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CosmosTransferInput": {
				"properties": {
					"fromAddress": {
						"type": "string"
					},
					"toAddress": {
						"type": "string"
					},
					"amount": {
						"type": "string"
					},
					"denom": {
						"type": "string"
					},
					"chainId": {
						"type": "string"
					},
					"sequence": {
						"type": "number",
						"format": "double"
					},
					"accountNumber": {
						"type": "number",
						"format": "double"
					},
					"feeDenom": {
						"type": "string"
					},
					"feeAmount": {
						"type": "string"
					},
					"gasLimit": {
						"type": "number",
						"format": "double"
					},
					"memo": {
						"type": "string"
					},
					"timeoutHeight": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"fromAddress",
					"toAddress",
					"amount",
					"denom",
					"chainId",
					"sequence",
					"accountNumber",
					"feeDenom",
					"feeAmount",
					"gasLimit",
					"memo",
					"timeoutHeight"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CosmosSignedMessageResponse": {
				"properties": {
					"signedMessage": {
						"type": "string"
					}
				},
				"required": [
					"signedMessage"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CosmosSignedMessageAPIResponse": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"data": {
						"$ref": "#/components/schemas/CosmosSignedMessageResponse"
					}
				},
				"required": [
					"success",
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CosmosSignMessageInput": {
				"properties": {
					"message": {
						"type": "string"
					}
				},
				"required": [
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CosmosIBCTransferInput": {
				"properties": {
					"fromAddress": {
						"type": "string"
					},
					"toAddress": {
						"type": "string"
					},
					"amount": {
						"type": "string"
					},
					"denom": {
						"type": "string"
					},
					"chainId": {
						"type": "string"
					},
					"sequence": {
						"type": "number",
						"format": "double"
					},
					"accountNumber": {
						"type": "number",
						"format": "double"
					},
					"feeDenom": {
						"type": "string"
					},
					"feeAmount": {
						"type": "string"
					},
					"gasLimit": {
						"type": "number",
						"format": "double"
					},
					"memo": {
						"type": "string"
					},
					"timeoutHeight": {
						"type": "number",
						"format": "double"
					},
					"sourcePort": {
						"type": "string"
					},
					"sourceChannel": {
						"type": "string"
					},
					"timeoutTimestamp": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"fromAddress",
					"toAddress",
					"amount",
					"denom",
					"chainId",
					"sequence",
					"accountNumber",
					"feeDenom",
					"feeAmount",
					"gasLimit",
					"memo",
					"timeoutHeight",
					"sourcePort",
					"sourceChannel",
					"timeoutTimestamp"
				],
				"type": "object",
				"additionalProperties": false
			},
			"WalletBalanceAPIResponse": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"body": {
						"$ref": "#/components/schemas/InputBody"
					},
					"address": {
						"type": "string"
					},
					"data": {
						"items": {},
						"type": "array"
					}
				},
				"required": [
					"success",
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"EvmAddressJSON": {
				"type": "string"
			},
			"BigNumberJSON": {
				"type": "string"
			},
			"EvmInternalTransactionJSON": {
				"properties": {
					"transaction_hash": {
						"type": "string"
					},
					"block_number": {
						"type": "string"
					},
					"block_hash": {
						"type": "string"
					},
					"type": {
						"type": "string"
					},
					"from": {
						"type": "string"
					},
					"to": {
						"type": "string"
					},
					"value": {
						"type": "string"
					},
					"gas": {
						"type": "string"
					},
					"gas_used": {
						"type": "string"
					},
					"input": {
						"type": "string"
					},
					"output": {
						"type": "string"
					}
				},
				"required": [
					"transaction_hash",
					"block_number",
					"block_hash",
					"type",
					"from",
					"to",
					"value",
					"gas",
					"gas_used",
					"input",
					"output"
				],
				"type": "object",
				"additionalProperties": false
			},
			"EvmETransactionCategoryJSON": {
				"type": "string",
				"enum": [
					"send",
					"receive",
					"token send",
					"token receive",
					"nft send",
					"nft receive",
					"token swap",
					"deposit",
					"withdraw",
					"nft purchase",
					"nft sale",
					"airdrop",
					"mint",
					"burn",
					"borrow",
					"contract interaction"
				]
			},
			"EvmContractTokenDetailsJSON": {
				"properties": {
					"address": {
						"$ref": "#/components/schemas/EvmAddressJSON"
					},
					"address_label": {
						"type": "string"
					},
					"token_name": {
						"type": "string"
					},
					"token_logo": {
						"type": "string"
					},
					"token_symbol": {
						"type": "string"
					}
				},
				"required": [
					"address",
					"token_name",
					"token_logo",
					"token_symbol"
				],
				"type": "object",
				"additionalProperties": false
			},
			"EvmContractSpenderDetailsJSON": {
				"properties": {
					"address": {
						"$ref": "#/components/schemas/EvmAddressJSON"
					},
					"address_label": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"symbol": {
						"type": "string"
					},
					"logo": {
						"type": "string"
					}
				},
				"required": [
					"address"
				],
				"type": "object",
				"additionalProperties": false
			},
			"EvmCommonContractDataJSON": {
				"properties": {
					"value": {
						"type": "string"
					},
					"value_formatted": {
						"type": "string"
					},
					"token": {
						"$ref": "#/components/schemas/EvmContractTokenDetailsJSON"
					},
					"spender": {
						"$ref": "#/components/schemas/EvmContractSpenderDetailsJSON"
					}
				},
				"required": [
					"value",
					"token",
					"spender"
				],
				"type": "object",
				"additionalProperties": false
			},
			"EvmResolveContractInteractionResponseJSON": {
				"properties": {
					"approvals": {
						"items": {
							"$ref": "#/components/schemas/EvmCommonContractDataJSON"
						},
						"type": "array"
					},
					"revokes": {
						"items": {
							"$ref": "#/components/schemas/EvmCommonContractDataJSON"
						},
						"type": "array"
					},
					"approvalsAll": {
						"items": {
							"$ref": "#/components/schemas/EvmCommonContractDataJSON"
						},
						"type": "array"
					},
					"revokesAll": {
						"items": {
							"$ref": "#/components/schemas/EvmCommonContractDataJSON"
						},
						"type": "array"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"EvmNormalizedMetadataAttributeValueJSON": {
				"additionalProperties": false,
				"type": "object"
			},
			"EvmNormalizedMetadataAttributeJSON": {
				"properties": {
					"trait_type": {
						"type": "string"
					},
					"value": {
						"$ref": "#/components/schemas/EvmNormalizedMetadataAttributeValueJSON"
					},
					"display_type": {
						"type": "string"
					},
					"max_value": {
						"type": "number",
						"format": "double"
					},
					"trait_count": {
						"type": "number",
						"format": "double"
					},
					"order": {
						"type": "number",
						"format": "double"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"EvmNormalizedMetadataJSON": {
				"properties": {
					"name": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"image": {
						"type": "string"
					},
					"external_link": {
						"type": "string"
					},
					"animation_url": {
						"type": "string"
					},
					"attributes": {
						"items": {
							"$ref": "#/components/schemas/EvmNormalizedMetadataAttributeJSON"
						},
						"type": "array"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"EvmWalletHistoryNftTransferJSON": {
				"properties": {
					"token_address": {
						"$ref": "#/components/schemas/EvmAddressJSON"
					},
					"token_id": {
						"type": "string"
					},
					"from_address_entity": {
						"type": "string"
					},
					"from_address_entity_logo": {
						"type": "string"
					},
					"from_address": {
						"$ref": "#/components/schemas/EvmAddressJSON"
					},
					"from_address_label": {
						"type": "string"
					},
					"to_address_entity": {
						"type": "string"
					},
					"to_address_entity_logo": {
						"type": "string"
					},
					"to_address": {
						"$ref": "#/components/schemas/EvmAddressJSON"
					},
					"to_address_label": {
						"type": "string"
					},
					"value": {
						"type": "string"
					},
					"amount": {
						"type": "string"
					},
					"contract_type": {
						"type": "string"
					},
					"transaction_type": {
						"type": "string"
					},
					"log_index": {
						"type": "number",
						"format": "double"
					},
					"operator": {
						"type": "string"
					},
					"possible_spam": {
						"type": "boolean"
					},
					"verified_collection": {
						"type": "boolean"
					},
					"direction": {
						"type": "string"
					},
					"collection_logo": {
						"type": "string"
					},
					"collection_banner_image": {
						"type": "string"
					},
					"normalized_metadata": {
						"$ref": "#/components/schemas/EvmNormalizedMetadataJSON"
					}
				},
				"required": [
					"token_address",
					"token_id",
					"from_address",
					"value",
					"amount",
					"contract_type",
					"transaction_type",
					"log_index",
					"possible_spam",
					"direction"
				],
				"type": "object",
				"additionalProperties": false
			},
			"EvmWalletHistoryErc20TransferJSON": {
				"properties": {
					"token_name": {
						"type": "string"
					},
					"token_symbol": {
						"type": "string"
					},
					"token_logo": {
						"type": "string"
					},
					"token_decimals": {
						"type": "string"
					},
					"address": {
						"$ref": "#/components/schemas/EvmAddressJSON"
					},
					"block_timestamp": {
						"type": "string"
					},
					"to_address_entity": {
						"type": "string"
					},
					"to_address_entity_logo": {
						"type": "string"
					},
					"to_address": {
						"$ref": "#/components/schemas/EvmAddressJSON"
					},
					"to_address_label": {
						"type": "string"
					},
					"from_address_entity": {
						"type": "string"
					},
					"from_address_entity_logo": {
						"type": "string"
					},
					"from_address": {
						"$ref": "#/components/schemas/EvmAddressJSON"
					},
					"from_address_label": {
						"type": "string"
					},
					"value": {
						"type": "string"
					},
					"value_formatted": {
						"type": "string"
					},
					"log_index": {
						"type": "number",
						"format": "double"
					},
					"possible_spam": {
						"type": "boolean"
					},
					"verified_contract": {
						"type": "boolean"
					}
				},
				"required": [
					"token_name",
					"token_symbol",
					"token_logo",
					"token_decimals",
					"address",
					"from_address",
					"value",
					"value_formatted",
					"log_index",
					"possible_spam",
					"verified_contract"
				],
				"type": "object",
				"additionalProperties": false
			},
			"EvmNativeTransferJSON": {
				"properties": {
					"from_address_entity": {
						"type": "string"
					},
					"from_address_entity_logo": {
						"type": "string"
					},
					"from_address": {
						"$ref": "#/components/schemas/EvmAddressJSON"
					},
					"from_address_label": {
						"type": "string"
					},
					"to_address_entity": {
						"type": "string"
					},
					"to_address_entity_logo": {
						"type": "string"
					},
					"to_address": {
						"$ref": "#/components/schemas/EvmAddressJSON"
					},
					"to_address_label": {
						"type": "string"
					},
					"value": {
						"type": "string"
					},
					"value_formatted": {
						"type": "string"
					},
					"direction": {
						"type": "string"
					},
					"internal_transaction": {
						"type": "boolean"
					},
					"token_symbol": {
						"type": "string"
					},
					"token_logo": {
						"type": "string"
					}
				},
				"required": [
					"from_address",
					"value",
					"value_formatted",
					"internal_transaction",
					"token_symbol",
					"token_logo"
				],
				"type": "object",
				"additionalProperties": false
			},
			"EvmDecodedEventParamsItemJSON": {
				"properties": {
					"name": {
						"type": "string"
					},
					"value": {
						"type": "string"
					},
					"type": {
						"type": "string"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"EvmDecodedEventJSON": {
				"properties": {
					"signature": {
						"type": "string"
					},
					"label": {
						"type": "string"
					},
					"type": {
						"type": "string"
					},
					"params": {
						"items": {
							"$ref": "#/components/schemas/EvmDecodedEventParamsItemJSON"
						},
						"type": "array"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"EvmLogVerboseJSON": {
				"properties": {
					"log_index": {
						"type": "string"
					},
					"transaction_hash": {
						"type": "string"
					},
					"transaction_index": {
						"type": "string"
					},
					"address": {
						"$ref": "#/components/schemas/EvmAddressJSON"
					},
					"data": {
						"type": "string"
					},
					"topic0": {
						"type": "string"
					},
					"topic1": {
						"type": "string"
					},
					"topic2": {
						"type": "string"
					},
					"topic3": {
						"type": "string"
					},
					"block_timestamp": {
						"type": "string"
					},
					"block_number": {
						"$ref": "#/components/schemas/BigNumberJSON"
					},
					"block_hash": {
						"type": "string"
					},
					"decoded_event": {
						"$ref": "#/components/schemas/EvmDecodedEventJSON"
					}
				},
				"required": [
					"log_index",
					"transaction_hash",
					"transaction_index",
					"address",
					"data",
					"topic0",
					"block_timestamp",
					"block_number",
					"block_hash",
					"decoded_event"
				],
				"type": "object",
				"additionalProperties": false
			},
			"EvmWalletHistoryTransactionJSON": {
				"properties": {
					"hash": {
						"type": "string"
					},
					"nonce": {
						"type": "string"
					},
					"transaction_index": {
						"type": "string"
					},
					"from_address_entity": {
						"type": "string"
					},
					"from_address_entity_logo": {
						"type": "string"
					},
					"from_address": {
						"$ref": "#/components/schemas/EvmAddressJSON"
					},
					"from_address_label": {
						"type": "string"
					},
					"to_address_entity": {
						"type": "string"
					},
					"to_address_entity_logo": {
						"type": "string"
					},
					"to_address": {
						"$ref": "#/components/schemas/EvmAddressJSON"
					},
					"to_address_label": {
						"type": "string"
					},
					"value": {
						"type": "string"
					},
					"gas": {
						"type": "string"
					},
					"gas_price": {
						"type": "string"
					},
					"input": {
						"type": "string"
					},
					"receipt_cumulative_gas_used": {
						"type": "string"
					},
					"receipt_gas_used": {
						"type": "string"
					},
					"receipt_contract_address": {
						"type": "string"
					},
					"receipt_status": {
						"type": "string"
					},
					"transaction_fee": {
						"type": "string"
					},
					"block_timestamp": {
						"type": "string"
					},
					"block_number": {
						"$ref": "#/components/schemas/BigNumberJSON"
					},
					"block_hash": {
						"type": "string"
					},
					"internal_transactions": {
						"items": {
							"$ref": "#/components/schemas/EvmInternalTransactionJSON"
						},
						"type": "array"
					},
					"category": {
						"$ref": "#/components/schemas/EvmETransactionCategoryJSON"
					},
					"contract_interactions": {
						"$ref": "#/components/schemas/EvmResolveContractInteractionResponseJSON"
					},
					"possible_spam": {
						"type": "boolean"
					},
					"method_label": {
						"type": "string"
					},
					"summary": {
						"type": "string"
					},
					"nft_transfers": {
						"items": {
							"$ref": "#/components/schemas/EvmWalletHistoryNftTransferJSON"
						},
						"type": "array"
					},
					"erc20_transfers": {
						"items": {
							"$ref": "#/components/schemas/EvmWalletHistoryErc20TransferJSON"
						},
						"type": "array"
					},
					"native_transfers": {
						"items": {
							"$ref": "#/components/schemas/EvmNativeTransferJSON"
						},
						"type": "array"
					},
					"logs": {
						"items": {
							"$ref": "#/components/schemas/EvmLogVerboseJSON"
						},
						"type": "array"
					}
				},
				"required": [
					"hash",
					"nonce",
					"transaction_index",
					"from_address",
					"value",
					"gas_price",
					"receipt_cumulative_gas_used",
					"receipt_gas_used",
					"receipt_status",
					"block_timestamp",
					"block_number",
					"block_hash",
					"category",
					"summary",
					"nft_transfers",
					"erc20_transfers",
					"native_transfers"
				],
				"type": "object",
				"additionalProperties": false
			},
			"WalletHistoryAPIResponse": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"body": {
						"$ref": "#/components/schemas/InputBody"
					},
					"address": {
						"type": "string"
					},
					"data": {
						"items": {
							"$ref": "#/components/schemas/EvmWalletHistoryTransactionJSON"
						},
						"type": "array"
					}
				},
				"required": [
					"success",
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"DogeCoinInput": {
				"properties": {
					"network": {
						"type": "string"
					},
					"private_key": {
						"type": "string"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"DogeCoinTransactionOutput": {
				"properties": {
					"signedTx": {
						"type": "string"
					},
					"transaction_hash": {
						"type": "string"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"DogeCoinAPIResponse": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"body": {
						"$ref": "#/components/schemas/InputBody"
					},
					"address": {
						"type": "string"
					},
					"data": {
						"$ref": "#/components/schemas/DogeCoinTransactionOutput"
					}
				},
				"required": [
					"success",
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"DogeCoinTransactionInput": {
				"properties": {
					"to": {
						"type": "string"
					},
					"value": {
						"type": "number",
						"format": "double"
					},
					"network": {
						"type": "string"
					},
					"compress": {
						"type": "boolean"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"EnsResolveResponse": {
				"properties": {
					"address": {
						"type": "string"
					}
				},
				"required": [
					"address"
				],
				"type": "object",
				"additionalProperties": false
			},
			"EnsResolveAPIResponse": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"body": {
						"$ref": "#/components/schemas/InputBody"
					},
					"address": {
						"type": "string"
					},
					"data": {
						"$ref": "#/components/schemas/EnsResolveResponse"
					}
				},
				"required": [
					"success",
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"EnsResolveInput": {
				"properties": {
					"domain": {
						"type": "string"
					},
					"chain_id": {
						"type": "string"
					}
				},
				"required": [
					"domain",
					"chain_id"
				],
				"type": "object",
				"additionalProperties": false
			},
			"EosInput": {
				"properties": {
					"network": {
						"type": "string"
					},
					"private_key": {
						"type": "string"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"EosTransactionOutput": {
				"properties": {
					"signedTx": {
						"type": "string"
					},
					"transaction_hash": {
						"type": "string"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"EosAPIResponse": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"body": {
						"$ref": "#/components/schemas/InputBody"
					},
					"address": {
						"type": "string"
					},
					"data": {
						"$ref": "#/components/schemas/EosTransactionOutput"
					}
				},
				"required": [
					"success",
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"EosTransactionInput": {
				"properties": {
					"to": {
						"type": "string"
					},
					"value": {
						"type": "number",
						"format": "double"
					},
					"network": {
						"type": "string"
					},
					"compress": {
						"type": "boolean"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"Erc1155Request": {
				"properties": {
					"to": {
						"type": "string"
					},
					"data": {
						"type": "string"
					},
					"value": {
						"type": "string"
					},
					"gasLimit": {
						"type": "string"
					},
					"nonce": {
						"type": "string"
					},
					"gas": {
						"type": "string"
					},
					"gasPrice": {
						"type": "string"
					},
					"maxFeePerGas": {
						"type": "string"
					},
					"maxPriorityFeePerGas": {
						"type": "string"
					},
					"chain_id": {
						"type": "string"
					},
					"encoding": {
						"type": "string"
					},
					"type": {
						"type": "number",
						"format": "double"
					},
					"accessList": {
						"items": {
							"$ref": "#/components/schemas/AccessTuple"
						},
						"type": "array"
					},
					"blobGas": {
						"type": "string"
					},
					"blobGasFeeCap": {
						"type": "string"
					},
					"blobHashes": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"dryrun": {
						"type": "boolean"
					},
					"input": {
						"type": "string"
					},
					"EOA": {
						"type": "boolean"
					},
					"contract_address": {
						"type": "string"
					},
					"token_id": {
						"type": "string"
					},
					"token_ids": {
						"type": "string"
					},
					"approved": {
						"type": "boolean"
					},
					"broadcast": {
						"type": "boolean"
					},
					"alwaysIncrementNonce": {
						"type": "boolean"
					},
					"asset": {
						"type": "string"
					},
					"amount": {
						"type": "string"
					},
					"interestRateMode": {
						"type": "number",
						"format": "double"
					},
					"referralCode": {
						"type": "number",
						"format": "double"
					},
					"onBehalfOf": {
						"type": "string"
					},
					"receiverAddress": {
						"type": "string"
					},
					"assets": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"amounts": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"modes": {
						"items": {
							"type": "number",
							"format": "double"
						},
						"type": "array"
					},
					"params": {
						"type": "string"
					},
					"rateMode": {
						"type": "number",
						"format": "double"
					},
					"useAsCollateral": {
						"type": "boolean"
					},
					"collateralAsset": {
						"type": "string"
					},
					"debtAsset": {
						"type": "string"
					},
					"user": {
						"type": "string"
					},
					"debtToCover": {
						"type": "string"
					},
					"receiveAToken": {
						"type": "boolean"
					},
					"inputTokens": {
						"items": {
							"$ref": "#/components/schemas/TokenAmount"
						},
						"type": "array"
					},
					"outputTokens": {
						"items": {
							"$ref": "#/components/schemas/TokenProportion"
						},
						"type": "array"
					},
					"slippageLimitPercent": {
						"type": "number",
						"format": "double"
					},
					"minHealthFactor": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "number",
								"format": "double"
							}
						]
					},
					"premiums": {
						"anyOf": [
							{
								"items": {
									"type": "string"
								},
								"type": "array"
							},
							{
								"items": {
									"type": "number",
									"format": "double"
								},
								"type": "array"
							}
						]
					},
					"initiator": {
						"type": "string"
					},
					"role": {
						"type": "string"
					},
					"account": {
						"type": "string"
					},
					"initialDeposit": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "number",
								"format": "double"
							}
						]
					},
					"borrowAmount": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "number",
								"format": "double"
							}
						]
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"ERC20APIResponse_number_": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"data": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"success",
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ERC20APIResponse_string_": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"data": {
						"type": "string"
					}
				},
				"required": [
					"success",
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ERC20Transaction": {
				"properties": {
					"data": {
						"type": "string"
					},
					"value": {
						"type": "string"
					},
					"to": {
						"type": "string"
					},
					"from": {
						"type": "string"
					},
					"gasPrice": {
						"type": "string"
					},
					"gasLimit": {
						"type": "string"
					},
					"maxPriorityFeePerGas": {
						"type": "string"
					},
					"maxFeePerGas": {
						"type": "string"
					},
					"nonce": {
						"type": "number",
						"format": "double"
					},
					"type": {
						"type": "number",
						"format": "double"
					},
					"chainId": {
						"type": "string"
					}
				},
				"required": [
					"data",
					"value",
					"to",
					"from",
					"nonce",
					"chainId"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ERC20ExecuteFunctionResult": {
				"properties": {
					"broadcasted": {
						"$ref": "#/components/schemas/BroadCastRawTransactionResponse"
					},
					"message": {
						"type": "string"
					},
					"success": {
						"type": "boolean"
					},
					"user_op": {
						"type": "string"
					},
					"data": {
						"$ref": "#/components/schemas/Transaction"
					},
					"params": {
						"items": {},
						"type": "array"
					},
					"function": {
						"type": "string"
					},
					"transaction": {
						"$ref": "#/components/schemas/ERC20Transaction"
					}
				},
				"required": [
					"params",
					"function",
					"transaction"
				],
				"type": "object"
			},
			"ERC20APIResponse_ERC20ExecuteFunctionResult_": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"data": {
						"$ref": "#/components/schemas/ERC20ExecuteFunctionResult"
					}
				},
				"required": [
					"success",
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ERC20InputBody": {
				"properties": {
					"to": {
						"type": "string"
					},
					"data": {
						"type": "string"
					},
					"value": {
						"type": "string"
					},
					"gasLimit": {
						"type": "string"
					},
					"nonce": {
						"type": "string"
					},
					"gas": {
						"type": "string"
					},
					"gasPrice": {
						"type": "string"
					},
					"maxFeePerGas": {
						"type": "string"
					},
					"maxPriorityFeePerGas": {
						"type": "string"
					},
					"chain_id": {
						"type": "string"
					},
					"encoding": {
						"type": "string"
					},
					"type": {
						"type": "number",
						"format": "double"
					},
					"accessList": {
						"items": {
							"$ref": "#/components/schemas/AccessTuple"
						},
						"type": "array"
					},
					"blobGas": {
						"type": "string"
					},
					"blobGasFeeCap": {
						"type": "string"
					},
					"blobHashes": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"dryrun": {
						"type": "boolean"
					},
					"input": {
						"type": "string"
					},
					"EOA": {
						"type": "boolean"
					},
					"contract_address": {
						"type": "string"
					},
					"token_id": {
						"type": "string"
					},
					"token_ids": {
						"type": "string"
					},
					"approved": {
						"type": "boolean"
					},
					"broadcast": {
						"type": "boolean"
					},
					"alwaysIncrementNonce": {
						"type": "boolean"
					},
					"asset": {
						"type": "string"
					},
					"amount": {
						"type": "string"
					},
					"interestRateMode": {
						"type": "number",
						"format": "double"
					},
					"referralCode": {
						"type": "number",
						"format": "double"
					},
					"onBehalfOf": {
						"type": "string"
					},
					"receiverAddress": {
						"type": "string"
					},
					"assets": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"amounts": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"modes": {
						"items": {
							"type": "number",
							"format": "double"
						},
						"type": "array"
					},
					"params": {
						"type": "string"
					},
					"rateMode": {
						"type": "number",
						"format": "double"
					},
					"useAsCollateral": {
						"type": "boolean"
					},
					"collateralAsset": {
						"type": "string"
					},
					"debtAsset": {
						"type": "string"
					},
					"user": {
						"type": "string"
					},
					"debtToCover": {
						"type": "string"
					},
					"receiveAToken": {
						"type": "boolean"
					},
					"inputTokens": {
						"items": {
							"$ref": "#/components/schemas/TokenAmount"
						},
						"type": "array"
					},
					"outputTokens": {
						"items": {
							"$ref": "#/components/schemas/TokenProportion"
						},
						"type": "array"
					},
					"slippageLimitPercent": {
						"type": "number",
						"format": "double"
					},
					"minHealthFactor": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "number",
								"format": "double"
							}
						]
					},
					"premiums": {
						"anyOf": [
							{
								"items": {
									"type": "string"
								},
								"type": "array"
							},
							{
								"items": {
									"type": "number",
									"format": "double"
								},
								"type": "array"
							}
						]
					},
					"initiator": {
						"type": "string"
					},
					"role": {
						"type": "string"
					},
					"account": {
						"type": "string"
					},
					"initialDeposit": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "number",
								"format": "double"
							}
						]
					},
					"borrowAmount": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "number",
								"format": "double"
							}
						]
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"ERC4626APIResponse": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"data": {}
				},
				"required": [
					"success",
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ERC721APIResponse": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"data": {}
				},
				"required": [
					"success",
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Record_string.string_": {
				"properties": {},
				"type": "object",
				"description": "Construct a type with a set of properties K of type T"
			},
			"JupiterAPIResponse_Record_string.string__": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"data": {
						"$ref": "#/components/schemas/Record_string.string_"
					}
				},
				"required": [
					"success",
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"JupiterAPIResponse_any_": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"data": {}
				},
				"required": [
					"success",
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"JupiterAPIResponse_string-Array_": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"data": {
						"items": {
							"type": "string"
						},
						"type": "array"
					}
				},
				"required": [
					"success",
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"JupiterExecuteFunctionResult": {
				"properties": {
					"transaction": {},
					"function": {
						"type": "string"
					},
					"params": {
						"items": {},
						"type": "array"
					},
					"data": {},
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"jupiter": {},
					"transactionHash": {
						"type": "string"
					}
				},
				"required": [
					"function",
					"params"
				],
				"type": "object",
				"additionalProperties": false
			},
			"JupiterAPIResponse_JupiterExecuteFunctionResult_": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"data": {
						"$ref": "#/components/schemas/JupiterExecuteFunctionResult"
					}
				},
				"required": [
					"success",
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Pick_JupiterInputBody.Exclude_keyofJupiterInputBody.accountName__": {
				"properties": {
					"inputMint": {
						"type": "string"
					},
					"outputMint": {
						"type": "string"
					},
					"amount": {
						"type": "number",
						"format": "double"
					},
					"slippage": {
						"type": "number",
						"format": "double"
					},
					"feeBps": {
						"type": "number",
						"format": "double"
					},
					"dryrun": {
						"type": "boolean"
					},
					"broadcast": {
						"type": "boolean"
					}
				},
				"required": [
					"inputMint",
					"outputMint",
					"amount"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"Omit_JupiterInputBody.accountName_": {
				"$ref": "#/components/schemas/Pick_JupiterInputBody.Exclude_keyofJupiterInputBody.accountName__",
				"description": "Construct a type with the properties of T except for those in type K."
			},
			"LendingPoolAPIResponse_number_": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"data": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"success",
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"LendingPoolTransaction": {
				"properties": {
					"data": {
						"type": "string"
					},
					"value": {
						"type": "string"
					},
					"to": {
						"type": "string"
					},
					"from": {
						"type": "string"
					},
					"gasPrice": {
						"type": "string"
					},
					"gasLimit": {
						"type": "string"
					},
					"maxPriorityFeePerGas": {
						"type": "string"
					},
					"maxFeePerGas": {
						"type": "string"
					},
					"nonce": {
						"type": "number",
						"format": "double"
					},
					"type": {
						"type": "number",
						"format": "double"
					},
					"chainId": {
						"type": "string"
					}
				},
				"required": [
					"data",
					"value",
					"to",
					"from",
					"nonce",
					"chainId"
				],
				"type": "object",
				"additionalProperties": false
			},
			"LendingPoolExecuteFunctionResult": {
				"properties": {
					"broadcasted": {
						"$ref": "#/components/schemas/BroadCastRawTransactionResponse"
					},
					"message": {
						"type": "string"
					},
					"success": {
						"type": "boolean"
					},
					"user_op": {
						"type": "string"
					},
					"data": {
						"$ref": "#/components/schemas/Transaction"
					},
					"params": {
						"items": {},
						"type": "array"
					},
					"function": {
						"type": "string"
					},
					"transaction": {
						"$ref": "#/components/schemas/LendingPoolTransaction"
					}
				},
				"required": [
					"params",
					"function",
					"transaction"
				],
				"type": "object"
			},
			"LendingPoolAPIResponse_LendingPoolExecuteFunctionResult_": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"data": {
						"$ref": "#/components/schemas/LendingPoolExecuteFunctionResult"
					}
				},
				"required": [
					"success",
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"LendingPoolInputBody": {
				"properties": {
					"to": {
						"type": "string"
					},
					"data": {
						"type": "string"
					},
					"value": {
						"type": "string"
					},
					"gasLimit": {
						"type": "string"
					},
					"nonce": {
						"type": "string"
					},
					"gas": {
						"type": "string"
					},
					"gasPrice": {
						"type": "string"
					},
					"maxFeePerGas": {
						"type": "string"
					},
					"maxPriorityFeePerGas": {
						"type": "string"
					},
					"chain_id": {
						"type": "string"
					},
					"encoding": {
						"type": "string"
					},
					"type": {
						"type": "number",
						"format": "double"
					},
					"accessList": {
						"items": {
							"$ref": "#/components/schemas/AccessTuple"
						},
						"type": "array"
					},
					"blobGas": {
						"type": "string"
					},
					"blobGasFeeCap": {
						"type": "string"
					},
					"blobHashes": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"dryrun": {
						"type": "boolean"
					},
					"input": {
						"type": "string"
					},
					"EOA": {
						"type": "boolean"
					},
					"contract_address": {
						"type": "string"
					},
					"token_id": {
						"type": "string"
					},
					"token_ids": {
						"type": "string"
					},
					"approved": {
						"type": "boolean"
					},
					"broadcast": {
						"type": "boolean"
					},
					"alwaysIncrementNonce": {
						"type": "boolean"
					},
					"asset": {
						"type": "string"
					},
					"amount": {
						"type": "string"
					},
					"interestRateMode": {
						"type": "number",
						"format": "double"
					},
					"referralCode": {
						"type": "number",
						"format": "double"
					},
					"onBehalfOf": {
						"type": "string"
					},
					"receiverAddress": {
						"type": "string"
					},
					"assets": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"amounts": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"modes": {
						"items": {
							"type": "number",
							"format": "double"
						},
						"type": "array"
					},
					"params": {
						"type": "string"
					},
					"rateMode": {
						"type": "number",
						"format": "double"
					},
					"useAsCollateral": {
						"type": "boolean"
					},
					"collateralAsset": {
						"type": "string"
					},
					"debtAsset": {
						"type": "string"
					},
					"user": {
						"type": "string"
					},
					"debtToCover": {
						"type": "string"
					},
					"receiveAToken": {
						"type": "boolean"
					},
					"inputTokens": {
						"items": {
							"$ref": "#/components/schemas/TokenAmount"
						},
						"type": "array"
					},
					"outputTokens": {
						"items": {
							"$ref": "#/components/schemas/TokenProportion"
						},
						"type": "array"
					},
					"slippageLimitPercent": {
						"type": "number",
						"format": "double"
					},
					"minHealthFactor": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "number",
								"format": "double"
							}
						]
					},
					"premiums": {
						"anyOf": [
							{
								"items": {
									"type": "string"
								},
								"type": "array"
							},
							{
								"items": {
									"type": "number",
									"format": "double"
								},
								"type": "array"
							}
						]
					},
					"initiator": {
						"type": "string"
					},
					"role": {
						"type": "string"
					},
					"account": {
						"type": "string"
					},
					"initialDeposit": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "number",
								"format": "double"
							}
						]
					},
					"borrowAmount": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "number",
								"format": "double"
							}
						]
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"LendingPoolAPIResponse_any_": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"data": {}
				},
				"required": [
					"success",
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"LendingPoolAPIResponse_string-Array_": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"data": {
						"items": {
							"type": "string"
						},
						"type": "array"
					}
				},
				"required": [
					"success",
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"LendingPoolAPIResponse_string_": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"data": {
						"type": "string"
					}
				},
				"required": [
					"success",
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"LendingPoolAPIResponse_boolean_": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"data": {
						"type": "boolean"
					}
				},
				"required": [
					"success",
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"LeveragerAPIResponse_string_": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"data": {
						"type": "string"
					}
				},
				"required": [
					"success",
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"LeveragerAPIResponse_boolean_": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"data": {
						"type": "boolean"
					}
				},
				"required": [
					"success",
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"LeveragerTransaction": {
				"properties": {
					"data": {
						"type": "string"
					},
					"value": {
						"type": "string"
					},
					"to": {
						"type": "string"
					},
					"from": {
						"type": "string"
					},
					"gasPrice": {
						"type": "string"
					},
					"gasLimit": {
						"type": "string"
					},
					"maxPriorityFeePerGas": {
						"type": "string"
					},
					"maxFeePerGas": {
						"type": "string"
					},
					"nonce": {
						"type": "number",
						"format": "double"
					},
					"type": {
						"type": "number",
						"format": "double"
					},
					"chainId": {
						"type": "string"
					}
				},
				"required": [
					"data",
					"value",
					"to",
					"from",
					"nonce",
					"chainId"
				],
				"type": "object",
				"additionalProperties": false
			},
			"LeveragerExecuteFunctionResult": {
				"properties": {
					"broadcasted": {
						"$ref": "#/components/schemas/BroadCastRawTransactionResponse"
					},
					"message": {
						"type": "string"
					},
					"success": {
						"type": "boolean"
					},
					"user_op": {
						"type": "string"
					},
					"data": {
						"$ref": "#/components/schemas/Transaction"
					},
					"params": {
						"items": {},
						"type": "array"
					},
					"function": {
						"type": "string"
					},
					"transaction": {
						"$ref": "#/components/schemas/LeveragerTransaction"
					}
				},
				"required": [
					"params",
					"function",
					"transaction"
				],
				"type": "object"
			},
			"LeveragerAPIResponse_LeveragerExecuteFunctionResult_": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"data": {
						"$ref": "#/components/schemas/LeveragerExecuteFunctionResult"
					}
				},
				"required": [
					"success",
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"LeveragerInputBody": {
				"properties": {
					"to": {
						"type": "string"
					},
					"data": {
						"type": "string"
					},
					"value": {
						"type": "string"
					},
					"gasLimit": {
						"type": "string"
					},
					"nonce": {
						"type": "string"
					},
					"gas": {
						"type": "string"
					},
					"gasPrice": {
						"type": "string"
					},
					"maxFeePerGas": {
						"type": "string"
					},
					"maxPriorityFeePerGas": {
						"type": "string"
					},
					"chain_id": {
						"type": "string"
					},
					"encoding": {
						"type": "string"
					},
					"type": {
						"type": "number",
						"format": "double"
					},
					"accessList": {
						"items": {
							"$ref": "#/components/schemas/AccessTuple"
						},
						"type": "array"
					},
					"blobGas": {
						"type": "string"
					},
					"blobGasFeeCap": {
						"type": "string"
					},
					"blobHashes": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"dryrun": {
						"type": "boolean"
					},
					"input": {
						"type": "string"
					},
					"EOA": {
						"type": "boolean"
					},
					"contract_address": {
						"type": "string"
					},
					"token_id": {
						"type": "string"
					},
					"token_ids": {
						"type": "string"
					},
					"approved": {
						"type": "boolean"
					},
					"broadcast": {
						"type": "boolean"
					},
					"alwaysIncrementNonce": {
						"type": "boolean"
					},
					"asset": {
						"type": "string"
					},
					"amount": {
						"type": "string"
					},
					"interestRateMode": {
						"type": "number",
						"format": "double"
					},
					"referralCode": {
						"type": "number",
						"format": "double"
					},
					"onBehalfOf": {
						"type": "string"
					},
					"receiverAddress": {
						"type": "string"
					},
					"assets": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"amounts": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"modes": {
						"items": {
							"type": "number",
							"format": "double"
						},
						"type": "array"
					},
					"params": {
						"type": "string"
					},
					"rateMode": {
						"type": "number",
						"format": "double"
					},
					"useAsCollateral": {
						"type": "boolean"
					},
					"collateralAsset": {
						"type": "string"
					},
					"debtAsset": {
						"type": "string"
					},
					"user": {
						"type": "string"
					},
					"debtToCover": {
						"type": "string"
					},
					"receiveAToken": {
						"type": "boolean"
					},
					"inputTokens": {
						"items": {
							"$ref": "#/components/schemas/TokenAmount"
						},
						"type": "array"
					},
					"outputTokens": {
						"items": {
							"$ref": "#/components/schemas/TokenProportion"
						},
						"type": "array"
					},
					"slippageLimitPercent": {
						"type": "number",
						"format": "double"
					},
					"minHealthFactor": {
						"type": "string"
					},
					"premiums": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"initiator": {
						"type": "string"
					},
					"role": {
						"type": "string"
					},
					"account": {
						"type": "string"
					},
					"initialDeposit": {
						"type": "string"
					},
					"borrowAmount": {
						"type": "string"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"TokenDetails": {
				"properties": {
					"address": {
						"type": "string"
					},
					"chainId": {
						"type": "number",
						"format": "double"
					},
					"symbol": {
						"type": "string"
					},
					"decimals": {
						"type": "number",
						"format": "double"
					},
					"name": {
						"type": "string"
					},
					"coinKey": {
						"type": "string"
					},
					"logoURI": {
						"type": "string"
					},
					"priceUSD": {
						"type": "string"
					}
				},
				"required": [
					"address",
					"chainId",
					"symbol",
					"decimals",
					"name",
					"coinKey",
					"logoURI",
					"priceUSD"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Action": {
				"properties": {
					"fromChainId": {
						"type": "number",
						"format": "double"
					},
					"fromAmount": {
						"type": "string"
					},
					"fromToken": {
						"$ref": "#/components/schemas/TokenDetails"
					},
					"fromAddress": {
						"type": "string"
					},
					"toChainId": {
						"type": "number",
						"format": "double"
					},
					"toToken": {
						"$ref": "#/components/schemas/TokenDetails"
					},
					"toAddress": {
						"type": "string"
					},
					"slippage": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"fromChainId",
					"fromAmount",
					"fromToken",
					"fromAddress",
					"toChainId",
					"toToken",
					"toAddress",
					"slippage"
				],
				"type": "object",
				"additionalProperties": false
			},
			"TokenInfo": {
				"properties": {
					"address": {
						"type": "string"
					},
					"symbol": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"decimals": {
						"type": "number",
						"format": "double"
					},
					"logoURI": {
						"type": "string"
					}
				},
				"required": [
					"address",
					"symbol",
					"name",
					"decimals"
				],
				"type": "object",
				"additionalProperties": false
			},
			"GasCost": {
				"properties": {
					"type": {
						"type": "string"
					},
					"price": {
						"type": "string"
					},
					"estimate": {
						"type": "string"
					},
					"limit": {
						"type": "string"
					},
					"amount": {
						"type": "string"
					},
					"amountUSD": {
						"type": "string"
					},
					"token": {
						"$ref": "#/components/schemas/TokenInfo"
					}
				},
				"required": [
					"type",
					"price",
					"estimate",
					"limit",
					"amount",
					"amountUSD",
					"token"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Token": {
				"properties": {
					"name": {
						"type": "string"
					},
					"address": {
						"type": "string"
					},
					"symbol": {
						"type": "string"
					},
					"decimals": {
						"type": "number",
						"format": "double"
					},
					"logoURI": {
						"type": "string"
					},
					"chainId": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"name",
					"address",
					"symbol",
					"decimals",
					"logoURI",
					"chainId"
				],
				"type": "object",
				"additionalProperties": false
			},
			"FeeCost": {
				"properties": {
					"name": {
						"type": "string"
					},
					"percentage": {
						"type": "number",
						"format": "double"
					},
					"token": {
						"$ref": "#/components/schemas/Token"
					},
					"amount": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"name",
					"percentage",
					"token",
					"amount"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Estimate": {
				"properties": {
					"fromAmount": {
						"type": "string"
					},
					"toAmount": {
						"type": "string"
					},
					"toAmountMin": {
						"type": "string"
					},
					"approvalAddress": {
						"type": "string"
					},
					"gasCosts": {
						"items": {
							"$ref": "#/components/schemas/GasCost"
						},
						"type": "array"
					},
					"executionDuration": {
						"type": "number",
						"format": "double"
					},
					"feeCosts": {
						"items": {
							"$ref": "#/components/schemas/FeeCost"
						},
						"type": "array"
					},
					"fromAmountUSD": {
						"type": "string"
					},
					"toAmountUSD": {
						"type": "string"
					}
				},
				"required": [
					"fromAmount",
					"toAmount",
					"toAmountMin",
					"approvalAddress",
					"gasCosts",
					"executionDuration",
					"fromAmountUSD",
					"toAmountUSD"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Step": {
				"properties": {
					"id": {
						"type": "string"
					},
					"type": {
						"type": "string"
					},
					"tool": {
						"type": "string"
					},
					"action": {
						"$ref": "#/components/schemas/Action"
					},
					"estimate": {
						"$ref": "#/components/schemas/Estimate"
					}
				},
				"required": [
					"id",
					"type",
					"tool",
					"action",
					"estimate"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Quote": {
				"properties": {
					"id": {
						"type": "string"
					},
					"type": {
						"type": "string"
					},
					"tool": {
						"type": "string"
					},
					"action": {
						"$ref": "#/components/schemas/Action"
					},
					"estimate": {
						"$ref": "#/components/schemas/Estimate"
					},
					"includedSteps": {
						"items": {
							"$ref": "#/components/schemas/Step"
						},
						"type": "array"
					},
					"transactionRequest": {
						"$ref": "#/components/schemas/TransactionRequest"
					}
				},
				"required": [
					"id",
					"type",
					"tool",
					"action",
					"estimate",
					"includedSteps",
					"transactionRequest"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ApiResponse_Quote_": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"data": {
						"$ref": "#/components/schemas/Quote"
					}
				},
				"required": [
					"success",
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"PostQuote": {
				"properties": {
					"quote": {
						"$ref": "#/components/schemas/Quote"
					},
					"input": {
						"$ref": "#/components/schemas/InputBody"
					},
					"signed": {},
					"broadcast": {}
				},
				"required": [
					"quote",
					"input",
					"signed",
					"broadcast"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ApiResponse_PostQuote_": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"data": {
						"$ref": "#/components/schemas/PostQuote"
					}
				},
				"required": [
					"success",
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"TransactionStatus": {
				"properties": {
					"chainId": {
						"type": "number",
						"format": "double"
					},
					"txHash": {
						"type": "string"
					},
					"txLink": {
						"type": "string"
					},
					"amount": {
						"type": "string"
					},
					"token": {
						"$ref": "#/components/schemas/TokenInfo"
					},
					"gasPrice": {
						"type": "string"
					},
					"gasUsed": {
						"type": "string"
					}
				},
				"required": [
					"chainId",
					"txHash",
					"txLink",
					"amount",
					"token",
					"gasPrice",
					"gasUsed"
				],
				"type": "object",
				"additionalProperties": false
			},
			"StatusResponse": {
				"properties": {
					"sending": {
						"$ref": "#/components/schemas/TransactionStatus"
					},
					"receiving": {
						"$ref": "#/components/schemas/TransactionStatus"
					},
					"tool": {
						"type": "string"
					},
					"status": {
						"type": "string"
					},
					"substatus": {
						"type": "string"
					}
				},
				"required": [
					"sending",
					"receiving",
					"tool",
					"status",
					"substatus"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ApiResponse_StatusResponse_": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"data": {
						"$ref": "#/components/schemas/StatusResponse"
					}
				},
				"required": [
					"success",
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Chain": {
				"properties": {
					"key": {
						"type": "string"
					},
					"chainType": {
						"type": "string",
						"enum": [
							"EVM",
							"SOL"
						]
					},
					"name": {
						"type": "string"
					},
					"coin": {
						"type": "string"
					},
					"id": {
						"type": "number",
						"format": "double"
					},
					"mainnet": {
						"type": "boolean"
					},
					"logoURI": {
						"type": "string"
					},
					"tokenlistUrl": {
						"type": "string"
					},
					"multicallAddress": {
						"type": "string"
					},
					"metamask": {
						"properties": {
							"rpcUrls": {
								"items": {
									"type": "string"
								},
								"type": "array"
							},
							"nativeCurrency": {
								"properties": {
									"decimals": {
										"type": "number",
										"format": "double"
									},
									"symbol": {
										"type": "string"
									},
									"name": {
										"type": "string"
									}
								},
								"required": [
									"decimals",
									"symbol",
									"name"
								],
								"type": "object"
							},
							"chainName": {
								"type": "string"
							},
							"blockExplorerUrls": {
								"items": {
									"type": "string"
								},
								"type": "array"
							},
							"chainId": {
								"type": "string"
							}
						},
						"required": [
							"rpcUrls",
							"nativeCurrency",
							"chainName",
							"blockExplorerUrls",
							"chainId"
						],
						"type": "object"
					},
					"nativeToken": {
						"properties": {
							"priceUSD": {
								"type": "string"
							},
							"logoURI": {
								"type": "string"
							},
							"coinKey": {
								"type": "string"
							},
							"name": {
								"type": "string"
							},
							"decimals": {
								"type": "number",
								"format": "double"
							},
							"symbol": {
								"type": "string"
							},
							"chainId": {
								"type": "number",
								"format": "double"
							},
							"address": {
								"type": "string"
							}
						},
						"required": [
							"priceUSD",
							"logoURI",
							"coinKey",
							"name",
							"decimals",
							"symbol",
							"chainId",
							"address"
						],
						"type": "object"
					}
				},
				"required": [
					"key",
					"chainType",
					"name",
					"coin",
					"id",
					"mainnet",
					"logoURI",
					"tokenlistUrl",
					"multicallAddress",
					"metamask",
					"nativeToken"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ChainsResponse": {
				"properties": {
					"chains": {
						"items": {
							"$ref": "#/components/schemas/Chain"
						},
						"type": "array"
					}
				},
				"required": [
					"chains"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ApiResponse_ChainsResponse_": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"data": {
						"$ref": "#/components/schemas/ChainsResponse"
					}
				},
				"required": [
					"success",
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"BridgeSupportedChain": {
				"properties": {
					"fromChainId": {
						"type": "number",
						"format": "double"
					},
					"toChainId": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"fromChainId",
					"toChainId"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Bridge": {
				"properties": {
					"key": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"logoURI": {
						"type": "string"
					},
					"supportedChains": {
						"items": {
							"$ref": "#/components/schemas/BridgeSupportedChain"
						},
						"type": "array"
					}
				},
				"required": [
					"key",
					"name",
					"logoURI",
					"supportedChains"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Exchange": {
				"properties": {
					"key": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"logoURI": {
						"type": "string"
					},
					"supportedChains": {
						"items": {
							"type": "number",
							"format": "double"
						},
						"type": "array"
					}
				},
				"required": [
					"key",
					"name",
					"logoURI",
					"supportedChains"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ToolsResponse": {
				"properties": {
					"bridges": {
						"items": {
							"$ref": "#/components/schemas/Bridge"
						},
						"type": "array"
					},
					"exchanges": {
						"items": {
							"$ref": "#/components/schemas/Exchange"
						},
						"type": "array"
					}
				},
				"required": [
					"bridges",
					"exchanges"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ApiResponse_ToolsResponse_": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"data": {
						"$ref": "#/components/schemas/ToolsResponse"
					}
				},
				"required": [
					"success",
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"TokensResponse": {
				"properties": {
					"tokens": {
						"properties": {},
						"additionalProperties": {
							"items": {
								"$ref": "#/components/schemas/Token"
							},
							"type": "array"
						},
						"type": "object"
					}
				},
				"required": [
					"tokens"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ApiResponse_TokensResponse_": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"data": {
						"$ref": "#/components/schemas/TokensResponse"
					}
				},
				"required": [
					"success",
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ApiResponse_TokenDetails_": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"data": {
						"$ref": "#/components/schemas/TokenDetails"
					}
				},
				"required": [
					"success",
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Connection": {
				"properties": {
					"fromChainId": {
						"type": "number",
						"format": "double"
					},
					"toChainId": {
						"type": "number",
						"format": "double"
					},
					"fromTokens": {
						"items": {
							"$ref": "#/components/schemas/Token"
						},
						"type": "array"
					},
					"toTokens": {
						"items": {
							"$ref": "#/components/schemas/Token"
						},
						"type": "array"
					}
				},
				"required": [
					"fromChainId",
					"toChainId",
					"fromTokens",
					"toTokens"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ConnectionsResponse": {
				"properties": {
					"connections": {
						"items": {
							"$ref": "#/components/schemas/Connection"
						},
						"type": "array"
					}
				},
				"required": [
					"connections"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ApiResponse_ConnectionsResponse_": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"data": {
						"$ref": "#/components/schemas/ConnectionsResponse"
					}
				},
				"required": [
					"success",
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"TokenInfoByChainId": {
				"properties": {},
				"type": "object",
				"additionalProperties": {
					"items": {
						"$ref": "#/components/schemas/TokenInfo"
					},
					"type": "array"
				}
			},
			"ApiResponse_TokenInfoByChainId_": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"data": {
						"$ref": "#/components/schemas/TokenInfoByChainId"
					}
				},
				"required": [
					"success",
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"LitecoinInput": {
				"properties": {
					"network": {
						"type": "string"
					},
					"private_key": {
						"type": "string"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"LitecoinTransactionOutput": {
				"properties": {
					"signedTx": {
						"type": "string"
					},
					"transaction_hash": {
						"type": "string"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"LitecoinAPIResponse": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"body": {
						"$ref": "#/components/schemas/InputBody"
					},
					"address": {
						"type": "string"
					},
					"data": {
						"$ref": "#/components/schemas/LitecoinTransactionOutput"
					}
				},
				"required": [
					"success",
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"LitecoinTransactionInput": {
				"properties": {
					"to": {
						"type": "string"
					},
					"value": {
						"type": "number",
						"format": "double"
					},
					"network": {
						"type": "string"
					},
					"compress": {
						"type": "boolean"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"MultiCallAPIResponse_string_": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"data": {
						"type": "string"
					}
				},
				"required": [
					"success",
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"FlowNode": {
				"properties": {
					"id": {
						"type": "string"
					},
					"type": {
						"type": "string",
						"enum": [
							"action",
							"condition",
							"userFunction"
						]
					},
					"data": {
						"properties": {
							"userFunctionName": {
								"type": "string"
							},
							"condition": {
								"type": "string"
							},
							"params": {},
							"function": {
								"type": "string"
							},
							"wrapper": {
								"type": "string"
							}
						},
						"type": "object"
					}
				},
				"required": [
					"id",
					"type",
					"data"
				],
				"type": "object",
				"additionalProperties": false
			},
			"FlowEdge": {
				"properties": {
					"id": {
						"type": "string"
					},
					"source": {
						"type": "string"
					},
					"target": {
						"type": "string"
					},
					"label": {
						"type": "string"
					}
				},
				"required": [
					"id",
					"source",
					"target"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Record_string.any_": {
				"properties": {},
				"type": "object",
				"description": "Construct a type with a set of properties K of type T"
			},
			"MultiCallInputBody": {
				"properties": {
					"chain_id": {
						"type": "string"
					},
					"flow": {
						"properties": {
							"edges": {
								"items": {
									"$ref": "#/components/schemas/FlowEdge"
								},
								"type": "array"
							},
							"nodes": {
								"items": {
									"$ref": "#/components/schemas/FlowNode"
								},
								"type": "array"
							}
						},
						"required": [
							"edges",
							"nodes"
						],
						"type": "object"
					},
					"calls": {
						"items": {
							"properties": {
								"chainId": {
									"type": "string"
								},
								"params": {},
								"function": {
									"type": "string"
								},
								"wrapper": {
									"type": "string"
								},
								"from": {
									"type": "string"
								}
							},
							"required": [
								"chainId",
								"params",
								"function",
								"wrapper",
								"from"
							],
							"type": "object"
						},
						"type": "array"
					},
					"globalVariables": {
						"$ref": "#/components/schemas/Record_string.any_"
					}
				},
				"required": [
					"calls"
				],
				"type": "object",
				"additionalProperties": false
			},
			"MultiCallAPIResponse": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"data": {}
				},
				"required": [
					"success",
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"MultiCallResult": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"results": {
						"items": {},
						"type": "array"
					},
					"errors": {
						"items": {
							"type": "string"
						},
						"type": "array"
					}
				},
				"required": [
					"success",
					"results",
					"errors"
				],
				"type": "object",
				"additionalProperties": false
			},
			"MultiCallAPIResponse_MultiCallResult_": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"data": {
						"$ref": "#/components/schemas/MultiCallResult"
					}
				},
				"required": [
					"success",
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ScheduleJobBody": {
				"properties": {
					"jobId": {
						"type": "string"
					},
					"schedule": {
						"type": "string"
					}
				},
				"required": [
					"jobId",
					"schedule"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ScheduledJob": {
				"properties": {
					"job_name": {
						"type": "string"
					},
					"schedule": {
						"type": "string"
					},
					"job_id": {
						"type": "string"
					},
					"user_id": {
						"type": "string"
					}
				},
				"required": [
					"job_name",
					"schedule",
					"job_id",
					"user_id"
				],
				"type": "object",
				"additionalProperties": false
			},
			"MultiCallAPIResponse_ScheduledJob-Array_": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"data": {
						"items": {
							"$ref": "#/components/schemas/ScheduledJob"
						},
						"type": "array"
					}
				},
				"required": [
					"success",
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Json": {
				"anyOf": [
					{
						"type": "string"
					},
					{
						"type": "number",
						"format": "double"
					},
					{
						"type": "boolean"
					},
					{
						"properties": {},
						"additionalProperties": {
							"$ref": "#/components/schemas/Json"
						},
						"type": "object"
					},
					{
						"items": {
							"$ref": "#/components/schemas/Json"
						},
						"type": "array"
					}
				],
				"nullable": true
			},
			"Jobs": {
				"properties": {
					"user_id": {
						"type": "string"
					},
					"updated_at": {
						"type": "string"
					},
					"status": {
						"type": "string"
					},
					"id": {
						"type": "string"
					},
					"global_variables": {
						"allOf": [
							{
								"$ref": "#/components/schemas/Json"
							}
						],
						"nullable": true
					},
					"flow_id": {
						"type": "string",
						"nullable": true
					},
					"error": {
						"allOf": [
							{
								"$ref": "#/components/schemas/Json"
							}
						],
						"nullable": true
					},
					"created_at": {
						"type": "string"
					},
					"calls": {
						"$ref": "#/components/schemas/Json"
					}
				},
				"required": [
					"user_id",
					"updated_at",
					"status",
					"id",
					"global_variables",
					"flow_id",
					"error",
					"created_at",
					"calls"
				],
				"type": "object"
			},
			"MultiCallAPIResponse_Jobs-Array_": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"data": {
						"items": {
							"$ref": "#/components/schemas/Jobs"
						},
						"type": "array"
					}
				},
				"required": [
					"success",
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"MultiCallAPIResponse_Jobs_": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"data": {
						"$ref": "#/components/schemas/Jobs"
					}
				},
				"required": [
					"success",
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Partial_Jobs_": {
				"properties": {
					"calls": {
						"$ref": "#/components/schemas/Json"
					},
					"created_at": {
						"type": "string"
					},
					"error": {
						"allOf": [
							{
								"$ref": "#/components/schemas/Json"
							}
						],
						"nullable": true
					},
					"flow_id": {
						"type": "string",
						"nullable": true
					},
					"global_variables": {
						"allOf": [
							{
								"$ref": "#/components/schemas/Json"
							}
						],
						"nullable": true
					},
					"id": {
						"type": "string"
					},
					"status": {
						"type": "string"
					},
					"updated_at": {
						"type": "string"
					},
					"user_id": {
						"type": "string"
					}
				},
				"type": "object",
				"description": "Make all properties in T optional"
			},
			"History": {
				"properties": {
					"wrapper": {
						"type": "string"
					},
					"user_id": {
						"type": "string"
					},
					"updated_at": {
						"type": "string"
					},
					"status": {
						"type": "string"
					},
					"result": {
						"allOf": [
							{
								"$ref": "#/components/schemas/Json"
							}
						],
						"nullable": true
					},
					"params": {
						"$ref": "#/components/schemas/Json"
					},
					"job_id": {
						"type": "string"
					},
					"id": {
						"type": "string"
					},
					"function": {
						"type": "string"
					},
					"error": {
						"type": "string",
						"nullable": true
					},
					"created_at": {
						"type": "string"
					}
				},
				"required": [
					"wrapper",
					"user_id",
					"updated_at",
					"status",
					"result",
					"params",
					"job_id",
					"id",
					"function",
					"error",
					"created_at"
				],
				"type": "object"
			},
			"MultiCallAPIResponse_History-Array_": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"data": {
						"items": {
							"$ref": "#/components/schemas/History"
						},
						"type": "array"
					}
				},
				"required": [
					"success",
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"MultiCallAPIResponse_History_": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"data": {
						"$ref": "#/components/schemas/History"
					}
				},
				"required": [
					"success",
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Partial_History_": {
				"properties": {
					"created_at": {
						"type": "string"
					},
					"error": {
						"type": "string",
						"nullable": true
					},
					"function": {
						"type": "string"
					},
					"id": {
						"type": "string"
					},
					"job_id": {
						"type": "string"
					},
					"params": {
						"$ref": "#/components/schemas/Json"
					},
					"result": {
						"allOf": [
							{
								"$ref": "#/components/schemas/Json"
							}
						],
						"nullable": true
					},
					"status": {
						"type": "string"
					},
					"updated_at": {
						"type": "string"
					},
					"user_id": {
						"type": "string"
					},
					"wrapper": {
						"type": "string"
					}
				},
				"type": "object",
				"description": "Make all properties in T optional"
			},
			"MultiCallAPIResponse_any_": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"data": {}
				},
				"required": [
					"success",
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CreateFlowBody": {
				"properties": {
					"name": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"nodes": {
						"items": {
							"$ref": "#/components/schemas/FlowNode"
						},
						"type": "array"
					},
					"edges": {
						"items": {
							"$ref": "#/components/schemas/FlowEdge"
						},
						"type": "array"
					}
				},
				"required": [
					"name",
					"nodes",
					"edges"
				],
				"type": "object",
				"additionalProperties": false
			},
			"MultiCallAPIResponse_any-Array_": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"data": {
						"items": {},
						"type": "array"
					}
				},
				"required": [
					"success",
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"UpdateFlowBody": {
				"properties": {
					"name": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"nodes": {
						"items": {
							"$ref": "#/components/schemas/FlowNode"
						},
						"type": "array"
					},
					"edges": {
						"items": {
							"$ref": "#/components/schemas/FlowEdge"
						},
						"type": "array"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"CreateUserDefinedFunctionBody": {
				"properties": {
					"name": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"functionBody": {
						"type": "string"
					}
				},
				"required": [
					"name",
					"functionBody"
				],
				"type": "object",
				"additionalProperties": false
			},
			"UpdateUserDefinedFunctionBody": {
				"properties": {
					"name": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"functionBody": {
						"type": "string"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"Record_string.string-Array_": {
				"properties": {},
				"type": "object",
				"description": "Construct a type with a set of properties K of type T"
			},
			"MultiCallAPIResponse_Record_string.string-Array__": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"data": {
						"$ref": "#/components/schemas/Record_string.string-Array_"
					}
				},
				"required": [
					"success",
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"OdosTransaction": {
				"properties": {
					"data": {
						"type": "string"
					},
					"value": {
						"type": "string"
					},
					"to": {
						"type": "string"
					},
					"from": {
						"type": "string"
					},
					"gasPrice": {
						"type": "string"
					},
					"gasLimit": {
						"type": "string"
					},
					"nonce": {
						"type": "number",
						"format": "double"
					},
					"chainId": {
						"type": "string"
					},
					"maxPriorityFeePerGas": {
						"type": "string"
					},
					"maxFeePerGas": {
						"type": "string"
					},
					"type": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"data",
					"value",
					"to",
					"from",
					"nonce",
					"chainId"
				],
				"type": "object",
				"additionalProperties": false
			},
			"OdosExecuteFunctionResult": {
				"properties": {
					"broadcasted": {
						"$ref": "#/components/schemas/BroadCastRawTransactionResponse"
					},
					"odos": {},
					"message": {
						"type": "string"
					},
					"success": {
						"type": "boolean"
					},
					"user_op": {
						"type": "string"
					},
					"data": {},
					"params": {
						"items": {},
						"type": "array"
					},
					"function": {
						"type": "string"
					},
					"transaction": {
						"$ref": "#/components/schemas/OdosTransaction"
					}
				},
				"required": [
					"params",
					"function"
				],
				"type": "object"
			},
			"OdosAPIResponse_OdosExecuteFunctionResult_": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"data": {
						"$ref": "#/components/schemas/OdosExecuteFunctionResult"
					}
				},
				"required": [
					"success",
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"PathVizImageConfig": {
				"properties": {
					"linkColors": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"nodeColor": {
						"type": "string"
					},
					"nodeTextColor": {
						"type": "string"
					},
					"legendTextColor": {
						"type": "string"
					},
					"width": {
						"type": "number",
						"format": "double"
					},
					"height": {
						"type": "number",
						"format": "double"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"OdosSwapInputBody": {
				"properties": {
					"to": {
						"type": "string"
					},
					"data": {
						"type": "string"
					},
					"value": {
						"type": "string"
					},
					"gasLimit": {
						"type": "string"
					},
					"nonce": {
						"type": "string"
					},
					"gas": {
						"type": "string"
					},
					"gasPrice": {
						"type": "string"
					},
					"maxFeePerGas": {
						"type": "string"
					},
					"maxPriorityFeePerGas": {
						"type": "string"
					},
					"chain_id": {
						"type": "string"
					},
					"encoding": {
						"type": "string"
					},
					"type": {
						"type": "number",
						"format": "double"
					},
					"accessList": {
						"items": {
							"$ref": "#/components/schemas/AccessTuple"
						},
						"type": "array"
					},
					"blobGas": {
						"type": "string"
					},
					"blobGasFeeCap": {
						"type": "string"
					},
					"blobHashes": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"dryrun": {
						"type": "boolean"
					},
					"input": {
						"type": "string"
					},
					"EOA": {
						"type": "boolean"
					},
					"contract_address": {
						"type": "string"
					},
					"token_id": {
						"type": "string"
					},
					"token_ids": {
						"type": "string"
					},
					"approved": {
						"type": "boolean"
					},
					"broadcast": {
						"type": "boolean"
					},
					"alwaysIncrementNonce": {
						"type": "boolean"
					},
					"asset": {
						"type": "string"
					},
					"amount": {
						"type": "string"
					},
					"interestRateMode": {
						"type": "number",
						"format": "double"
					},
					"referralCode": {
						"type": "number",
						"format": "double"
					},
					"onBehalfOf": {
						"type": "string"
					},
					"receiverAddress": {
						"type": "string"
					},
					"assets": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"amounts": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"modes": {
						"items": {
							"type": "number",
							"format": "double"
						},
						"type": "array"
					},
					"params": {
						"type": "string"
					},
					"rateMode": {
						"type": "number",
						"format": "double"
					},
					"useAsCollateral": {
						"type": "boolean"
					},
					"collateralAsset": {
						"type": "string"
					},
					"debtAsset": {
						"type": "string"
					},
					"user": {
						"type": "string"
					},
					"debtToCover": {
						"type": "string"
					},
					"receiveAToken": {
						"type": "boolean"
					},
					"inputTokens": {
						"items": {
							"$ref": "#/components/schemas/TokenAmount"
						},
						"type": "array"
					},
					"outputTokens": {
						"items": {
							"$ref": "#/components/schemas/TokenProportion"
						},
						"type": "array"
					},
					"slippageLimitPercent": {
						"type": "number",
						"format": "double"
					},
					"minHealthFactor": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "number",
								"format": "double"
							}
						]
					},
					"premiums": {
						"anyOf": [
							{
								"items": {
									"type": "string"
								},
								"type": "array"
							},
							{
								"items": {
									"type": "number",
									"format": "double"
								},
								"type": "array"
							}
						]
					},
					"initiator": {
						"type": "string"
					},
					"role": {
						"type": "string"
					},
					"account": {
						"type": "string"
					},
					"initialDeposit": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "number",
								"format": "double"
							}
						]
					},
					"borrowAmount": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "number",
								"format": "double"
							}
						]
					},
					"sourceBlacklist": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"sourceWhitelist": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"poolBlacklist": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"pathViz": {
						"type": "boolean"
					},
					"pathVizImage": {
						"type": "boolean"
					},
					"pathVizImageConfig": {
						"$ref": "#/components/schemas/PathVizImageConfig"
					},
					"disableRFQs": {
						"type": "boolean"
					},
					"compact": {
						"type": "boolean"
					},
					"likeAsset": {
						"type": "boolean"
					},
					"simple": {
						"type": "boolean"
					}
				},
				"required": [
					"inputTokens",
					"outputTokens"
				],
				"type": "object",
				"additionalProperties": false
			},
			"AssembleRequest": {
				"properties": {
					"userAddr": {
						"type": "string"
					},
					"pathId": {
						"type": "string"
					},
					"simulate": {
						"type": "boolean"
					},
					"receiver": {
						"type": "string"
					}
				},
				"required": [
					"userAddr",
					"pathId"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CryptoCurrency": {
				"properties": {
					"networkDisplayName": {
						"type": "string"
					},
					"icon": {
						"type": "string"
					},
					"chainId": {
						"type": "number",
						"format": "double"
					},
					"address": {
						"type": "string"
					},
					"decimals": {
						"type": "number",
						"format": "double"
					},
					"network": {
						"type": "string"
					},
					"symbol": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"code": {
						"type": "string"
					},
					"id": {
						"type": "string"
					}
				},
				"required": [
					"networkDisplayName",
					"icon",
					"chainId",
					"address",
					"decimals",
					"network",
					"symbol",
					"name",
					"code",
					"id"
				],
				"type": "object"
			},
			"FiatCurrency": {
				"properties": {
					"icon": {
						"type": "string"
					},
					"symbol": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"code": {
						"type": "string"
					},
					"id": {
						"type": "string"
					}
				},
				"required": [
					"icon",
					"symbol",
					"name",
					"code",
					"id"
				],
				"type": "object"
			},
			"Message": {
				"properties": {
					"fiat": {
						"items": {
							"$ref": "#/components/schemas/FiatCurrency"
						},
						"type": "array"
					},
					"crypto": {
						"items": {
							"$ref": "#/components/schemas/CryptoCurrency"
						},
						"type": "array"
					}
				},
				"required": [
					"fiat",
					"crypto"
				],
				"type": "object"
			},
			"SupportedCurrenciesResponse": {
				"properties": {
					"message": {
						"$ref": "#/components/schemas/Message"
					}
				},
				"required": [
					"message"
				],
				"type": "object"
			},
			"PaymentType": {
				"properties": {
					"icon": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"paymentTypeId": {
						"type": "string"
					}
				},
				"required": [
					"icon",
					"name",
					"paymentTypeId"
				],
				"type": "object"
			},
			"SupportedPaymentTypesMessage": {
				"properties": {
					"googlepay": {
						"$ref": "#/components/schemas/PaymentType"
					},
					"applepay": {
						"$ref": "#/components/schemas/PaymentType"
					},
					"creditcard": {
						"$ref": "#/components/schemas/PaymentType"
					}
				},
				"required": [
					"googlepay",
					"applepay",
					"creditcard"
				],
				"type": "object"
			},
			"SupportedPaymentTypesCurrencyResponse": {
				"properties": {
					"message": {
						"$ref": "#/components/schemas/SupportedPaymentTypesMessage"
					}
				},
				"required": [
					"message"
				],
				"type": "object"
			},
			"SupportedDefaultResponse": {
				"properties": {
					"defaults": {
						"properties": {
							"id": {
								"properties": {
									"provider": {
										"type": "string"
									},
									"paymentMethod": {
										"type": "string"
									},
									"amount": {
										"type": "number",
										"format": "double"
									},
									"target": {
										"type": "string"
									},
									"source": {
										"type": "string"
									}
								},
								"required": [
									"provider",
									"paymentMethod",
									"amount",
									"target",
									"source"
								],
								"type": "object"
							}
						},
						"required": [
							"id"
						],
						"type": "object"
					},
					"recommended": {
						"properties": {
							"provider": {
								"type": "string"
							},
							"paymentMethod": {
								"type": "string"
							},
							"amount": {
								"type": "number",
								"format": "double"
							},
							"target": {
								"type": "string"
							},
							"source": {
								"type": "string"
							}
						},
						"required": [
							"provider",
							"paymentMethod",
							"amount",
							"target",
							"source"
						],
						"type": "object"
					}
				},
				"required": [
					"defaults",
					"recommended"
				],
				"type": "object"
			},
			"SupportedAssetResponse": {
				"properties": {
					"country": {
						"type": "string"
					},
					"assets": {
						"items": {
							"properties": {
								"crypto": {
									"items": {
										"type": "string"
									},
									"type": "array"
								},
								"paymentMethods": {
									"items": {
										"type": "string"
									},
									"type": "array"
								},
								"fiat": {
									"type": "string"
								}
							},
							"required": [
								"crypto",
								"paymentMethods",
								"fiat"
							],
							"type": "object"
						},
						"type": "array"
					}
				},
				"required": [
					"country",
					"assets"
				],
				"type": "object"
			},
			"GetSupportedOnRampsResponse": {
				"properties": {
					"message": {
						"items": {
							"properties": {
								"id": {
									"type": "string"
								},
								"displayName": {
									"type": "string"
								},
								"icons": {
									"properties": {
										"png": {
											"properties": {
												"160x160": {
													"type": "string"
												},
												"32x32": {
													"type": "string"
												}
											},
											"required": [
												"160x160",
												"32x32"
											],
											"type": "object"
										},
										"svg": {
											"type": "string"
										}
									},
									"required": [
										"png",
										"svg"
									],
									"type": "object"
								},
								"icon": {
									"type": "string"
								}
							},
							"required": [
								"id",
								"displayName",
								"icons",
								"icon"
							],
							"type": "object"
						},
						"type": "array"
					}
				},
				"required": [
					"message"
				],
				"type": "object"
			},
			"Quotes": {
				"items": {
					"$ref": "#/components/schemas/Quote"
				},
				"type": "array"
			},
			"SellQuote": {
				"properties": {
					"recommendations": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"quoteId": {
						"type": "string"
					},
					"paymentMethod": {
						"type": "string"
					},
					"ramp": {
						"type": "string"
					},
					"payout": {
						"type": "number",
						"format": "double"
					},
					"transactionFee": {
						"type": "number",
						"format": "double"
					},
					"networkFee": {
						"type": "number",
						"format": "double"
					},
					"rate": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"recommendations",
					"quoteId",
					"paymentMethod",
					"ramp",
					"payout",
					"transactionFee",
					"networkFee",
					"rate"
				],
				"type": "object"
			},
			"SellQuotes": {
				"items": {
					"$ref": "#/components/schemas/SellQuote"
				},
				"type": "array"
			},
			"TransactionInput": {
				"properties": {
					"supportedParams": {
						"properties": {
							"partnerData": {
								"properties": {
									"redirectUrl": {
										"properties": {
											"success": {
												"type": "string"
											}
										},
										"required": [
											"success"
										],
										"type": "object"
									}
								},
								"required": [
									"redirectUrl"
								],
								"type": "object"
							},
							"theme": {
								"properties": {
									"borderRadius": {
										"type": "number",
										"format": "double",
										"nullable": true
									},
									"cardColor": {
										"type": "string"
									},
									"secondaryTextColor": {
										"type": "string"
									},
									"primaryTextColor": {
										"type": "string"
									},
									"secondaryColor": {
										"type": "string"
									},
									"primaryColor": {
										"type": "string"
									},
									"themeName": {
										"type": "string"
									},
									"isDark": {
										"type": "boolean"
									}
								},
								"required": [
									"borderRadius",
									"cardColor",
									"secondaryTextColor",
									"primaryTextColor",
									"secondaryColor",
									"primaryColor",
									"themeName",
									"isDark"
								],
								"type": "object"
							}
						},
						"required": [
							"partnerData",
							"theme"
						],
						"type": "object"
					},
					"wallet": {
						"properties": {
							"address": {
								"type": "string"
							}
						},
						"required": [
							"address"
						],
						"type": "object"
					},
					"metaData": {
						"properties": {
							"quoteId": {
								"type": "string"
							}
						},
						"required": [
							"quoteId"
						],
						"type": "object"
					},
					"originatingHost": {
						"type": "string"
					},
					"partnerContext": {
						"type": "string"
					},
					"uuid": {
						"type": "string"
					},
					"network": {
						"type": "string"
					},
					"paymentMethod": {
						"type": "string"
					},
					"type": {
						"type": "string"
					},
					"amount": {
						"type": "number",
						"format": "double"
					},
					"destination": {
						"type": "string"
					},
					"source": {
						"type": "string"
					},
					"onramp": {
						"type": "string"
					}
				},
				"required": [
					"supportedParams",
					"wallet",
					"metaData",
					"originatingHost",
					"partnerContext",
					"uuid",
					"network",
					"paymentMethod",
					"type",
					"amount",
					"destination",
					"source",
					"onramp"
				],
				"type": "object"
			},
			"PingResponse": {
				"properties": {
					"message": {
						"type": "string"
					}
				},
				"required": [
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"RippleInput": {
				"properties": {
					"network": {
						"type": "string"
					},
					"private_key": {
						"type": "string"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"RippleTransactionOutput": {
				"properties": {
					"signedTx": {
						"type": "string"
					},
					"transaction_hash": {
						"type": "string"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"RippleAPIResponse": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"body": {
						"$ref": "#/components/schemas/InputBody"
					},
					"address": {
						"type": "string"
					},
					"data": {
						"$ref": "#/components/schemas/RippleTransactionOutput"
					}
				},
				"required": [
					"success",
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"RippleTransactionInput": {
				"properties": {
					"to": {
						"type": "string"
					},
					"value": {
						"type": "number",
						"format": "double"
					},
					"network": {
						"type": "string"
					},
					"compress": {
						"type": "boolean"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"SolanaInput": {
				"properties": {
					"network": {
						"type": "string"
					},
					"private_key": {
						"type": "string"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"SolanaTransactionOutput": {
				"properties": {
					"signedTx": {
						"type": "string"
					},
					"transaction_hash": {
						"type": "string"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"SolanaAPIResponse": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"body": {
						"$ref": "#/components/schemas/InputBody"
					},
					"address": {
						"type": "string"
					},
					"data": {
						"$ref": "#/components/schemas/SolanaTransactionOutput"
					}
				},
				"required": [
					"success",
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"SolanaSignTransactionInput": {
				"properties": {
					"unsigned_tx": {
						"type": "string"
					},
					"network": {
						"type": "string"
					}
				},
				"required": [
					"unsigned_tx"
				],
				"type": "object",
				"additionalProperties": false
			},
			"SolanaTransactionInput": {
				"properties": {
					"to": {
						"type": "string"
					},
					"value": {
						"type": "number",
						"format": "double"
					},
					"network": {
						"type": "string"
					},
					"compress": {
						"type": "boolean"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"ThenaAPIResponse": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"data": {}
				},
				"required": [
					"success",
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ThorSwapAPIResponse_Quote_": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"data": {
						"$ref": "#/components/schemas/Quote"
					}
				},
				"required": [
					"success",
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ThorSwapAPIResponse_string_": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"data": {
						"type": "string"
					}
				},
				"required": [
					"success",
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"GasPrice": {
				"properties": {
					"lastTimestamp": {
						"type": "number",
						"format": "double"
					},
					"chainId": {
						"type": "string"
					},
					"unitName": {
						"type": "string"
					},
					"history": {
						"items": {
							"properties": {
								"timestamp": {
									"type": "number",
									"format": "double"
								},
								"value": {
									"type": "number",
									"format": "double"
								}
							},
							"required": [
								"timestamp",
								"value"
							],
							"type": "object"
						},
						"type": "array"
					},
					"average24h": {
						"type": "number",
						"format": "double"
					},
					"average7d": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"lastTimestamp",
					"chainId",
					"unitName",
					"history",
					"average24h",
					"average7d"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ThorSwapAPIResponse_GasPrice_": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"data": {
						"$ref": "#/components/schemas/GasPrice"
					}
				},
				"required": [
					"success",
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ThorSwapAPIResponse_string-Array_": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"data": {
						"items": {
							"type": "string"
						},
						"type": "array"
					}
				},
				"required": [
					"success",
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"TronInput": {
				"properties": {
					"network": {
						"type": "string"
					},
					"private_key": {
						"type": "string"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"TronTransactionOutput": {
				"properties": {
					"signedTx": {
						"type": "string"
					},
					"transaction_hash": {
						"type": "string"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"TronAPIResponse": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"body": {
						"$ref": "#/components/schemas/InputBody"
					},
					"address": {
						"type": "string"
					},
					"data": {
						"$ref": "#/components/schemas/TronTransactionOutput"
					}
				},
				"required": [
					"success",
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"TronTransactionInput": {
				"properties": {
					"to": {
						"type": "string"
					},
					"value": {
						"type": "number",
						"format": "double"
					},
					"network": {
						"type": "string"
					},
					"compress": {
						"type": "boolean"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"VeTheNFTAPIResponse_string_": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"data": {
						"type": "string"
					}
				},
				"required": [
					"success",
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"VeTheNFTAPIResponse_boolean_": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"data": {
						"type": "boolean"
					}
				},
				"required": [
					"success",
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"LockedData": {
				"properties": {
					"amount": {
						"type": "string"
					},
					"end": {
						"type": "string"
					}
				},
				"required": [
					"amount",
					"end"
				],
				"type": "object",
				"additionalProperties": false
			},
			"VeTheNFTAPIResponse_LockedData_": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"data": {
						"$ref": "#/components/schemas/LockedData"
					}
				},
				"required": [
					"success",
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"VeNFTTransaction": {
				"properties": {
					"data": {
						"type": "string"
					},
					"value": {
						"type": "string"
					},
					"to": {
						"type": "string"
					},
					"from": {
						"type": "string"
					},
					"gasPrice": {
						"type": "string"
					},
					"gasLimit": {
						"type": "string"
					},
					"maxPriorityFeePerGas": {
						"type": "string"
					},
					"maxFeePerGas": {
						"type": "string"
					},
					"nonce": {
						"type": "number",
						"format": "double"
					},
					"type": {
						"type": "number",
						"format": "double"
					},
					"chainId": {
						"type": "string"
					}
				},
				"required": [
					"data",
					"value",
					"to",
					"from",
					"nonce",
					"chainId"
				],
				"type": "object",
				"additionalProperties": false
			},
			"VeNFTExecuteFunctionResult": {
				"properties": {
					"broadcasted": {
						"$ref": "#/components/schemas/BroadCastRawTransactionResponse"
					},
					"message": {
						"type": "string"
					},
					"success": {
						"type": "boolean"
					},
					"user_op": {
						"type": "string"
					},
					"data": {
						"$ref": "#/components/schemas/Transaction"
					},
					"params": {
						"items": {},
						"type": "array"
					},
					"function": {
						"type": "string"
					},
					"transaction": {
						"$ref": "#/components/schemas/VeNFTTransaction"
					}
				},
				"required": [
					"params",
					"function",
					"transaction"
				],
				"type": "object"
			},
			"VeTheNFTAPIResponse_VeNFTExecuteFunctionResult_": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"data": {
						"$ref": "#/components/schemas/VeNFTExecuteFunctionResult"
					}
				},
				"required": [
					"success",
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"VeNFTInputBody": {
				"properties": {
					"to": {
						"type": "string"
					},
					"data": {
						"type": "string"
					},
					"value": {
						"type": "string"
					},
					"gasLimit": {
						"type": "string"
					},
					"nonce": {
						"type": "string"
					},
					"gas": {
						"type": "string"
					},
					"gasPrice": {
						"type": "string"
					},
					"maxFeePerGas": {
						"type": "string"
					},
					"maxPriorityFeePerGas": {
						"type": "string"
					},
					"chain_id": {
						"type": "string"
					},
					"encoding": {
						"type": "string"
					},
					"type": {
						"type": "number",
						"format": "double"
					},
					"accessList": {
						"items": {
							"$ref": "#/components/schemas/AccessTuple"
						},
						"type": "array"
					},
					"blobGas": {
						"type": "string"
					},
					"blobGasFeeCap": {
						"type": "string"
					},
					"blobHashes": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"dryrun": {
						"type": "boolean"
					},
					"input": {
						"type": "string"
					},
					"EOA": {
						"type": "boolean"
					},
					"contract_address": {
						"type": "string"
					},
					"token_id": {
						"type": "string"
					},
					"token_ids": {
						"type": "string"
					},
					"approved": {
						"type": "boolean"
					},
					"broadcast": {
						"type": "boolean"
					},
					"alwaysIncrementNonce": {
						"type": "boolean"
					},
					"asset": {
						"type": "string"
					},
					"amount": {
						"type": "string"
					},
					"interestRateMode": {
						"type": "number",
						"format": "double"
					},
					"referralCode": {
						"type": "number",
						"format": "double"
					},
					"onBehalfOf": {
						"type": "string"
					},
					"receiverAddress": {
						"type": "string"
					},
					"assets": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"amounts": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"modes": {
						"items": {
							"type": "number",
							"format": "double"
						},
						"type": "array"
					},
					"params": {
						"type": "string"
					},
					"rateMode": {
						"type": "number",
						"format": "double"
					},
					"useAsCollateral": {
						"type": "boolean"
					},
					"collateralAsset": {
						"type": "string"
					},
					"debtAsset": {
						"type": "string"
					},
					"user": {
						"type": "string"
					},
					"debtToCover": {
						"type": "string"
					},
					"receiveAToken": {
						"type": "boolean"
					},
					"inputTokens": {
						"items": {
							"$ref": "#/components/schemas/TokenAmount"
						},
						"type": "array"
					},
					"outputTokens": {
						"items": {
							"$ref": "#/components/schemas/TokenProportion"
						},
						"type": "array"
					},
					"slippageLimitPercent": {
						"type": "number",
						"format": "double"
					},
					"minHealthFactor": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "number",
								"format": "double"
							}
						]
					},
					"premiums": {
						"anyOf": [
							{
								"items": {
									"type": "string"
								},
								"type": "array"
							},
							{
								"items": {
									"type": "number",
									"format": "double"
								},
								"type": "array"
							}
						]
					},
					"initiator": {
						"type": "string"
					},
					"role": {
						"type": "string"
					},
					"account": {
						"type": "string"
					},
					"initialDeposit": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "number",
								"format": "double"
							}
						]
					},
					"borrowAmount": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "number",
								"format": "double"
							}
						]
					},
					"lock_duration": {
						"type": "string"
					},
					"spender": {
						"type": "string"
					},
					"operator": {
						"type": "string"
					},
					"tokenId": {
						"type": "string"
					},
					"lock_value": {
						"type": "string"
					},
					"delegatee": {
						"type": "string"
					},
					"expiry": {
						"type": "string"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"UserPointHistoryData": {
				"properties": {
					"bias": {
						"type": "string"
					},
					"slope": {
						"type": "string"
					},
					"ts": {
						"type": "string"
					},
					"blk": {
						"type": "string"
					}
				},
				"required": [
					"bias",
					"slope",
					"ts",
					"blk"
				],
				"type": "object",
				"additionalProperties": false
			},
			"VeTheNFTAPIResponse_UserPointHistoryData_": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"data": {
						"$ref": "#/components/schemas/UserPointHistoryData"
					}
				},
				"required": [
					"success",
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"VeTheNftVoterAPIResponse_string_": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"data": {
						"type": "string"
					}
				},
				"required": [
					"success",
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"VeTheNftVoterAPIResponse_boolean_": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"data": {
						"type": "boolean"
					}
				},
				"required": [
					"success",
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"VeTheNftVoterTransaction": {
				"properties": {
					"data": {
						"type": "string"
					},
					"value": {
						"type": "string"
					},
					"to": {
						"type": "string"
					},
					"from": {
						"type": "string"
					},
					"gasPrice": {
						"type": "string"
					},
					"gasLimit": {
						"type": "string"
					},
					"maxPriorityFeePerGas": {
						"type": "string"
					},
					"maxFeePerGas": {
						"type": "string"
					},
					"nonce": {
						"type": "number",
						"format": "double"
					},
					"type": {
						"type": "number",
						"format": "double"
					},
					"chainId": {
						"type": "string"
					}
				},
				"required": [
					"data",
					"value",
					"to",
					"from",
					"nonce",
					"chainId"
				],
				"type": "object",
				"additionalProperties": false
			},
			"VeTheNftVoterExecuteFunctionResult": {
				"properties": {
					"broadcasted": {
						"$ref": "#/components/schemas/BroadCastRawTransactionResponse"
					},
					"message": {
						"type": "string"
					},
					"success": {
						"type": "boolean"
					},
					"user_op": {
						"type": "string"
					},
					"data": {
						"$ref": "#/components/schemas/Transaction"
					},
					"params": {
						"items": {},
						"type": "array"
					},
					"function": {
						"type": "string"
					},
					"transaction": {
						"$ref": "#/components/schemas/VeTheNftVoterTransaction"
					}
				},
				"required": [
					"params",
					"function",
					"transaction"
				],
				"type": "object"
			},
			"VeTheNftVoterAPIResponse_VeTheNftVoterExecuteFunctionResult_": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"data": {
						"$ref": "#/components/schemas/VeTheNftVoterExecuteFunctionResult"
					}
				},
				"required": [
					"success",
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"VeTheNftVoterInputBody": {
				"properties": {
					"to": {
						"type": "string"
					},
					"data": {
						"type": "string"
					},
					"value": {
						"type": "string"
					},
					"gasLimit": {
						"type": "string"
					},
					"nonce": {
						"type": "string"
					},
					"gas": {
						"type": "string"
					},
					"gasPrice": {
						"type": "string"
					},
					"maxFeePerGas": {
						"type": "string"
					},
					"maxPriorityFeePerGas": {
						"type": "string"
					},
					"chain_id": {
						"type": "string"
					},
					"encoding": {
						"type": "string"
					},
					"type": {
						"type": "number",
						"format": "double"
					},
					"accessList": {
						"items": {
							"$ref": "#/components/schemas/AccessTuple"
						},
						"type": "array"
					},
					"blobGas": {
						"type": "string"
					},
					"blobGasFeeCap": {
						"type": "string"
					},
					"blobHashes": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"dryrun": {
						"type": "boolean"
					},
					"input": {
						"type": "string"
					},
					"EOA": {
						"type": "boolean"
					},
					"contract_address": {
						"type": "string"
					},
					"token_id": {
						"type": "string"
					},
					"token_ids": {
						"type": "string"
					},
					"approved": {
						"type": "boolean"
					},
					"broadcast": {
						"type": "boolean"
					},
					"alwaysIncrementNonce": {
						"type": "boolean"
					},
					"asset": {
						"type": "string"
					},
					"amount": {
						"type": "string"
					},
					"interestRateMode": {
						"type": "number",
						"format": "double"
					},
					"referralCode": {
						"type": "number",
						"format": "double"
					},
					"onBehalfOf": {
						"type": "string"
					},
					"receiverAddress": {
						"type": "string"
					},
					"assets": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"amounts": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"modes": {
						"items": {
							"type": "number",
							"format": "double"
						},
						"type": "array"
					},
					"params": {
						"type": "string"
					},
					"rateMode": {
						"type": "number",
						"format": "double"
					},
					"useAsCollateral": {
						"type": "boolean"
					},
					"collateralAsset": {
						"type": "string"
					},
					"debtAsset": {
						"type": "string"
					},
					"user": {
						"type": "string"
					},
					"debtToCover": {
						"type": "string"
					},
					"receiveAToken": {
						"type": "boolean"
					},
					"inputTokens": {
						"items": {
							"$ref": "#/components/schemas/TokenAmount"
						},
						"type": "array"
					},
					"outputTokens": {
						"items": {
							"$ref": "#/components/schemas/TokenProportion"
						},
						"type": "array"
					},
					"slippageLimitPercent": {
						"type": "number",
						"format": "double"
					},
					"minHealthFactor": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "number",
								"format": "double"
							}
						]
					},
					"premiums": {
						"anyOf": [
							{
								"items": {
									"type": "string"
								},
								"type": "array"
							},
							{
								"items": {
									"type": "number",
									"format": "double"
								},
								"type": "array"
							}
						]
					},
					"initiator": {
						"type": "string"
					},
					"role": {
						"type": "string"
					},
					"account": {
						"type": "string"
					},
					"initialDeposit": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "number",
								"format": "double"
							}
						]
					},
					"borrowAmount": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "number",
								"format": "double"
							}
						]
					},
					"pool": {
						"type": "string"
					},
					"gauge": {
						"type": "string"
					},
					"weights": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"pool_vote": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"gauge_type": {
						"type": "string"
					},
					"bribes": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"tokens": {
						"items": {
							"items": {
								"type": "string"
							},
							"type": "array"
						},
						"type": "array"
					},
					"fees": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"gauges": {
						"items": {
							"type": "string"
						},
						"type": "array"
					}
				},
				"type": "object",
				"additionalProperties": false
			}
		},
		"securitySchemes": {
			"BearerAuth": {
				"type": "apiKey",
				"name": "Authorization",
				"in": "header"
			},
			"OAuth2": {
				"type": "oauth2",
				"flows": {
					"password": {
						"tokenUrl": "https://vault-api.usemoon.ai/auth/oauth/openai/oauth",
						"scopes": {
							"authorization_code": "grants authorization_code"
						}
					}
				}
			},
			"ApiKeyAuth": {
				"type": "apiKey",
				"name": "x-api-key",
				"in": "header"
			}
		}
	},
	"info": {
		"title": "moon-vault-api",
		"version": "1.0.0",
		"license": {
			"name": "ISC"
		},
		"contact": {}
	},
	"openapi": "3.0.0",
	"paths": {
		"/aave/v3/pool/{account}/getReserveData": {
			"get": {
				"operationId": "GetReserveData",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AavePoolAPIResponse_any_"
								}
							}
						}
					}
				},
				"tags": [
					"AAVEv3 Pool"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "account",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "chainId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "asset",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/aave/v3/pool/{account}/getUserAccountData": {
			"get": {
				"operationId": "GetUserAccountData",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AavePoolAPIResponse_any_"
								}
							}
						}
					}
				},
				"tags": [
					"AAVEv3 Pool"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "account",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "chainId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "user",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/aave/v3/pool/{address}/supply": {
			"post": {
				"operationId": "Supply",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AavePoolAPIResponse_AavePoolExecuteFunctionResult_"
								}
							}
						}
					}
				},
				"tags": [
					"AAVEv3 Pool"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/AavePoolInputBody"
							}
						}
					}
				}
			}
		},
		"/aave/v3/pool/{address}/withdraw": {
			"post": {
				"operationId": "Withdraw",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AavePoolAPIResponse_AavePoolExecuteFunctionResult_"
								}
							}
						}
					}
				},
				"tags": [
					"AAVEv3 Pool"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/AavePoolInputBody"
							}
						}
					}
				}
			}
		},
		"/aave/v3/pool/{address}/borrow": {
			"post": {
				"operationId": "Borrow",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AavePoolAPIResponse_AavePoolExecuteFunctionResult_"
								}
							}
						}
					}
				},
				"tags": [
					"AAVEv3 Pool"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/AavePoolInputBody"
							}
						}
					}
				}
			}
		},
		"/aave/v3/pool/{address}/repay": {
			"post": {
				"operationId": "Repay",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AavePoolAPIResponse_AavePoolExecuteFunctionResult_"
								}
							}
						}
					}
				},
				"tags": [
					"AAVEv3 Pool"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/AavePoolInputBody"
							}
						}
					}
				}
			}
		},
		"/aave/v3/pool/{address}/setUserUseReserveAsCollateral": {
			"post": {
				"operationId": "SetUserUseReserveAsCollateral",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AavePoolAPIResponse_AavePoolExecuteFunctionResult_"
								}
							}
						}
					}
				},
				"tags": [
					"AAVEv3 Pool"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/AavePoolInputBody"
							}
						}
					}
				}
			}
		},
		"/aave/v3/pool/{address}/liquidationCall": {
			"post": {
				"operationId": "LiquidationCall",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AavePoolAPIResponse_AavePoolExecuteFunctionResult_"
								}
							}
						}
					}
				},
				"tags": [
					"AAVEv3 Pool"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/AavePoolInputBody"
							}
						}
					}
				}
			}
		},
		"/aave/v3/poolAddressProvider/{account}/getACLAdmin": {
			"get": {
				"operationId": "GetACLAdmin",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PoolAddressProviderAPIResponse_string_"
								}
							}
						}
					}
				},
				"tags": [
					"Pool Address Provider"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "account",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "chainId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/aave/v3/poolAddressProvider/{account}/getACLManager": {
			"get": {
				"operationId": "GetACLManager",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PoolAddressProviderAPIResponse_string_"
								}
							}
						}
					}
				},
				"tags": [
					"Pool Address Provider"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "account",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "chainId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/aave/v3/poolAddressProvider/{account}/getAddress": {
			"get": {
				"operationId": "GetAddress",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PoolAddressProviderAPIResponse_string_"
								}
							}
						}
					}
				},
				"tags": [
					"Pool Address Provider"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "account",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "chainId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/aave/v3/poolAddressProvider/{account}/getMarketId": {
			"get": {
				"operationId": "GetMarketId",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PoolAddressProviderAPIResponse_string_"
								}
							}
						}
					}
				},
				"tags": [
					"Pool Address Provider"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "account",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "chainId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/aave/v3/poolAddressProvider/{account}/getPool": {
			"get": {
				"operationId": "GetPool",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PoolAddressProviderAPIResponse_string_"
								}
							}
						}
					}
				},
				"tags": [
					"Pool Address Provider"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "account",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "chainId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/aave/v3/poolAddressProvider/{account}/getPoolConfigurator": {
			"get": {
				"operationId": "GetPoolConfigurator",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PoolAddressProviderAPIResponse_string_"
								}
							}
						}
					}
				},
				"tags": [
					"Pool Address Provider"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "account",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "chainId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/aave/v3/poolAddressProvider/{account}/getPriceOracle": {
			"get": {
				"operationId": "GetPriceOracle",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PoolAddressProviderAPIResponse_string_"
								}
							}
						}
					}
				},
				"tags": [
					"Pool Address Provider"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "account",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "chainId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/aave/v3/poolAddressProvider/{address}/setACLAdmin": {
			"post": {
				"operationId": "SetACLAdmin",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PoolAddressProviderAPIResponse_PoolAddressProviderExecuteFunctionResult_"
								}
							}
						}
					}
				},
				"tags": [
					"Pool Address Provider"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/PoolAddressProviderInputBody"
							}
						}
					}
				}
			}
		},
		"/aave/v3/poolAddressProvider/{address}/setACLManager": {
			"post": {
				"operationId": "SetACLManager",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PoolAddressProviderAPIResponse_PoolAddressProviderExecuteFunctionResult_"
								}
							}
						}
					}
				},
				"tags": [
					"Pool Address Provider"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/PoolAddressProviderInputBody"
							}
						}
					}
				}
			}
		},
		"/aave/v3/poolAddressProvider/{address}/setAddress": {
			"post": {
				"operationId": "SetAddress",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PoolAddressProviderAPIResponse_PoolAddressProviderExecuteFunctionResult_"
								}
							}
						}
					}
				},
				"tags": [
					"Pool Address Provider"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/PoolAddressProviderInputBody"
							}
						}
					}
				}
			}
		},
		"/aave/v3/poolAddressProvider/{address}/setMarketId": {
			"post": {
				"operationId": "SetMarketId",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PoolAddressProviderAPIResponse_PoolAddressProviderExecuteFunctionResult_"
								}
							}
						}
					}
				},
				"tags": [
					"Pool Address Provider"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/PoolAddressProviderInputBody"
							}
						}
					}
				}
			}
		},
		"/aave/v3/poolAddressProvider/{address}/setPoolConfiguratorImpl": {
			"post": {
				"operationId": "SetPoolConfiguratorImpl",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PoolAddressProviderAPIResponse_PoolAddressProviderExecuteFunctionResult_"
								}
							}
						}
					}
				},
				"tags": [
					"Pool Address Provider"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/PoolAddressProviderInputBody"
							}
						}
					}
				}
			}
		},
		"/aave/v3/poolAddressProvider/{address}/setPoolImpl": {
			"post": {
				"operationId": "SetPoolImpl",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PoolAddressProviderAPIResponse_PoolAddressProviderExecuteFunctionResult_"
								}
							}
						}
					}
				},
				"tags": [
					"Pool Address Provider"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/PoolAddressProviderInputBody"
							}
						}
					}
				}
			}
		},
		"/aave/v3/poolAddressProviderRegistry/{account}/getAddressesProvider": {
			"get": {
				"operationId": "GetAddressesProvider",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PoolAddressProviderRegistryAPIResponse_string_"
								}
							}
						}
					}
				},
				"tags": [
					"PoolAddressProviderRegistry"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "account",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "chainId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/aave/v3/poolAddressProviderRegistry/{account}/getATokenTotalSupply": {
			"get": {
				"operationId": "GetATokenTotalSupply",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PoolAddressProviderRegistryAPIResponse_string_"
								}
							}
						}
					}
				},
				"tags": [
					"PoolAddressProviderRegistry"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "account",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "chainId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "asset",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/aave/v3/poolAddressProviderRegistry/{account}/getAllATokens": {
			"get": {
				"operationId": "GetAllATokens",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PoolAddressProviderRegistryAPIResponse_any-Array_"
								}
							}
						}
					}
				},
				"tags": [
					"PoolAddressProviderRegistry"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "account",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "chainId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/aave/v3/poolAddressProviderRegistry/{account}/getAllReservesTokens": {
			"get": {
				"operationId": "GetAllReservesTokens",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PoolAddressProviderRegistryAPIResponse_any-Array_"
								}
							}
						}
					}
				},
				"tags": [
					"PoolAddressProviderRegistry"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "account",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "chainId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/aave/v3/poolAddressProviderRegistry/{account}/getDebtCeiling": {
			"get": {
				"operationId": "GetDebtCeiling",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PoolAddressProviderRegistryAPIResponse_string_"
								}
							}
						}
					}
				},
				"tags": [
					"PoolAddressProviderRegistry"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "account",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "chainId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "asset",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/aave/v3/rewards/{account}/rewardsByAsset": {
			"get": {
				"operationId": "GetRewardsByAsset",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AAVEv3RewardsAPIResponse_string-Array_"
								}
							}
						}
					}
				},
				"tags": [
					"AAVEv3Rewards"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "account",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "chainId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "asset",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/aave/v3/rewards/{account}/userRewards": {
			"get": {
				"operationId": "GetUserRewards",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AAVEv3RewardsAPIResponse_string_"
								}
							}
						}
					}
				},
				"tags": [
					"AAVEv3Rewards"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "account",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "chainId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "assets",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"in": "query",
						"name": "user",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "reward",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/aave/v3/rewards/{account}/rewardsData": {
			"get": {
				"operationId": "GetRewardsData",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AAVEv3RewardsAPIResponse_string-Array_"
								}
							}
						}
					}
				},
				"tags": [
					"AAVEv3Rewards"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "account",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "chainId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "asset",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "reward",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/aave/v3/rewards/{address}/claimRewards": {
			"post": {
				"operationId": "ClaimRewards",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AAVEv3RewardsAPIResponse_AAVEv3RewardsExecuteFunctionResult_"
								}
							}
						}
					}
				},
				"tags": [
					"AAVEv3Rewards"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/AAVEv3RewardsInputBody"
							}
						}
					}
				}
			}
		},
		"/aave/v3/rewards/{address}/claimRewardsOnBehalf": {
			"post": {
				"operationId": "ClaimRewardsOnBehalf",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AAVEv3RewardsAPIResponse_AAVEv3RewardsExecuteFunctionResult_"
								}
							}
						}
					}
				},
				"tags": [
					"AAVEv3Rewards"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/AAVEv3RewardsInputBody"
							}
						}
					}
				}
			}
		},
		"/aave/v3/rewards/{address}/claimRewardsToSelf": {
			"post": {
				"operationId": "ClaimRewardsToSelf",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AAVEv3RewardsAPIResponse_AAVEv3RewardsExecuteFunctionResult_"
								}
							}
						}
					}
				},
				"tags": [
					"AAVEv3Rewards"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/AAVEv3RewardsInputBody"
							}
						}
					}
				}
			}
		},
		"/aave/v3/rewards/{address}/claimAllRewards": {
			"post": {
				"operationId": "ClaimAllRewards",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AAVEv3RewardsAPIResponse_AAVEv3RewardsExecuteFunctionResult_"
								}
							}
						}
					}
				},
				"tags": [
					"AAVEv3Rewards"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/AAVEv3RewardsInputBody"
							}
						}
					}
				}
			}
		},
		"/aave/v3/rewards/{address}/claimAllRewardsOnBehalf": {
			"post": {
				"operationId": "ClaimAllRewardsOnBehalf",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AAVEv3RewardsAPIResponse_AAVEv3RewardsExecuteFunctionResult_"
								}
							}
						}
					}
				},
				"tags": [
					"AAVEv3Rewards"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/AAVEv3RewardsInputBody"
							}
						}
					}
				}
			}
		},
		"/aave/v3/rewards/{address}/claimAllRewardsToSelf": {
			"post": {
				"operationId": "ClaimAllRewardsToSelf",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AAVEv3RewardsAPIResponse_AAVEv3RewardsExecuteFunctionResult_"
								}
							}
						}
					}
				},
				"tags": [
					"AAVEv3Rewards"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/AAVEv3RewardsInputBody"
							}
						}
					}
				}
			}
		},
		"/aave/v3/incentives/fullReservesIncentiveData": {
			"get": {
				"operationId": "GetFullReservesIncentiveData",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AAVEv3UiIncentiveDataProviderAPIResponse_FullReservesIncentiveData_"
								}
							}
						}
					}
				},
				"tags": [
					"AAVE v3 UI Incentive Data Provider"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "contract_address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "chain_id",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "provider",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "user",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/aave/v3/incentives/reservesIncentivesData": {
			"get": {
				"operationId": "GetReservesIncentivesData",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AAVEv3UiIncentiveDataProviderAPIResponse_AggregatedReserveIncentiveData-Array_"
								}
							}
						}
					}
				},
				"tags": [
					"AAVE v3 UI Incentive Data Provider"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "contract_address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "chain_id",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "provider",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/aave/v3/incentives/userReservesIncentivesData": {
			"get": {
				"operationId": "GetUserReservesIncentivesData",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AAVEv3UiIncentiveDataProviderAPIResponse_UserReserveIncentiveData-Array_"
								}
							}
						}
					}
				},
				"tags": [
					"AAVE v3 UI Incentive Data Provider"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "contract_address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "chain_id",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "provider",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "user",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/aave/v3/wallet-balance/balance-of": {
			"get": {
				"operationId": "BalanceOf",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AAVEv3WalletBalanceProviderAPIResponse_string_"
								}
							}
						}
					}
				},
				"tags": [
					"AAVE v3 Wallet Balance Provider"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "contract_address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "chain_id",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "user",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "token_address",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/aave/v3/wallet-balance/batch-balance-of": {
			"get": {
				"operationId": "BatchBalanceOf",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AAVEv3WalletBalanceProviderAPIResponse_string-Array_"
								}
							}
						}
					}
				},
				"tags": [
					"AAVE v3 Wallet Balance Provider"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "contract_address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "chain_id",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "users",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"in": "query",
						"name": "tokens",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					}
				]
			}
		},
		"/aave/v3/wallet-balance/user-wallet-balances": {
			"get": {
				"operationId": "GetUserWalletBalances",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AAVEv3WalletBalanceProviderAPIResponse__tokens-string-Array--balances-string-Array--__"
								}
							}
						}
					}
				},
				"tags": [
					"AAVE v3 Wallet Balance Provider"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "contract_address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "chain_id",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "provider",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "user",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/accounts/{accountName}/nonce": {
			"get": {
				"operationId": "GetNonce",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/NonceAPIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"Accounts"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "accountName",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/accounts/{accountName}/balance": {
			"get": {
				"operationId": "GetBalance",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/BalanceAPIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"Accounts"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "accountName",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "chainId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/accounts/{accountName}/suggest-gas": {
			"get": {
				"operationId": "SuggestGasPrice",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/TransactionAPIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"Accounts"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "accountName",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "chainId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/accounts/{accountName}/estimate": {
			"post": {
				"operationId": "EstimateGas",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/TransactionAPIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"Accounts"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "accountName",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/InputBody"
							}
						}
					}
				}
			}
		},
		"/accounts/{accountName}/transfer-eth": {
			"post": {
				"operationId": "TransferEth",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/TransactionAPIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"Accounts"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "accountName",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/InputBody"
							}
						}
					}
				}
			}
		},
		"/accounts/{accountName}/sign-message": {
			"post": {
				"operationId": "SignMessage",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SignMessageAPIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"Accounts"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "accountName",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/SignMessage"
							}
						}
					}
				}
			}
		},
		"/accounts/{accountName}/sign-transaction": {
			"post": {
				"operationId": "SignTransaction",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/TransactionAPIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"Accounts"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "accountName",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/InputBody"
							}
						}
					}
				}
			}
		},
		"/accounts/{accountName}/export": {
			"get": {
				"operationId": "ExportAccount",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ExportAccountAPIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"Accounts"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "accountName",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/accounts/{accountName}/sign-typed-data": {
			"post": {
				"operationId": "SignTypedData",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SignMessageAPIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"Accounts"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "accountName",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/SignTypedData"
							}
						}
					}
				}
			}
		},
		"/accounts": {
			"get": {
				"operationId": "ListAccounts",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AccountAPIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"Accounts"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"post": {
				"operationId": "CreateAccount",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AccountAPIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"Accounts"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateAccountInput"
							}
						}
					}
				}
			}
		},
		"/accounts/{accountName}": {
			"get": {
				"operationId": "GetAccount",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AccountAPIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"Accounts"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "accountName",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"delete": {
				"operationId": "DeleteAccount",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AccountAPIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"Accounts"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "accountName",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/accounts/{accountName}/deploy": {
			"post": {
				"operationId": "DeployContract",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/TransactionAPIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"Accounts"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "accountName",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/DeployInput"
							}
						}
					}
				}
			}
		},
		"/accounts/{accountName}/broadcast-tx": {
			"post": {
				"operationId": "BroadcastTx",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/BroadCastRawTransactionAPIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"Accounts"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "accountName",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/BroadcastInput"
							}
						}
					}
				}
			}
		},
		"/accounts/encode-data": {
			"post": {
				"operationId": "EncodeData",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AbiEncodeOutput"
								}
							}
						}
					}
				},
				"tags": [
					"Accounts"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/AbiEncodeInput"
							}
						}
					}
				}
			}
		},
		"/bitcoin": {
			"get": {
				"operationId": "ListBitcoinAccounts",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AccountAPIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"Bitcoin"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"post": {
				"operationId": "CreateBitcoinAccount",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AccountAPIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"Bitcoin"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/BitcoinInput"
							}
						}
					}
				}
			}
		},
		"/bitcoin/{accountName}": {
			"get": {
				"operationId": "GetBitcoinAccount",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AccountAPIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"Bitcoin"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "accountName",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/bitcoin/{accountName}/sign-tx": {
			"post": {
				"operationId": "SignBitcoinTransaction",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/BitcoinAPIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"Bitcoin"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "accountName",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/BitcoinTransactionInput"
							}
						}
					}
				}
			}
		},
		"/bitcoin/{accountName}/src20-inscription": {
			"post": {
				"operationId": "CreateSRC20Inscription",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/BitcoinAPIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"Bitcoin"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "accountName",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/SRC20InscriptionInput"
							}
						}
					}
				}
			}
		},
		"/bitcoin/{accountName}/brc20-tx": {
			"post": {
				"operationId": "CreateBRC20Transaction",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/BitcoinAPIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"Bitcoin"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "accountName",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/BRC20TransactionInput"
							}
						}
					}
				}
			}
		},
		"/bitcoin/{accountName}/generate-unsigned-psbt": {
			"post": {
				"operationId": "GenerateUnsignedPSBTHex",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/BitcoinAPIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"Bitcoin"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "accountName",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UnsignedPSBTInput"
							}
						}
					}
				}
			}
		},
		"/bitcoin/{accountName}/export": {
			"post": {
				"operationId": "ExportBitcoinAccount",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AccountAPIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"Bitcoin"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "accountName",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/bitcoin/{accountName}/delete": {
			"post": {
				"operationId": "DeleteBitcoinAccount",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AccountAPIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"Bitcoin"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "accountName",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/bitcoincash/accounts": {
			"get": {
				"operationId": "ListAccounts",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/BitcoinCashAPIResponse_AccountResponse_"
								}
							}
						}
					}
				},
				"tags": [
					"BitcoinCash"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"post": {
				"operationId": "CreateAccount",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/BitcoinCashAPIResponse_AccountResponse_"
								}
							}
						}
					}
				},
				"tags": [
					"BitcoinCash"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/BitcoinCashInput"
							}
						}
					}
				}
			}
		},
		"/bitcoincash/accounts/{accountName}": {
			"get": {
				"operationId": "ReadAccount",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/BitcoinCashAPIResponse_AccountResponse_"
								}
							}
						}
					}
				},
				"tags": [
					"BitcoinCash"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "accountName",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/bitcoincash/accounts/{accountName}/export": {
			"post": {
				"operationId": "ExportAccount",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/BitcoinCashAPIResponse_AccountResponse_"
								}
							}
						}
					}
				},
				"tags": [
					"BitcoinCash"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "accountName",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/bitcoincash/accounts/{accountName}/delete": {
			"post": {
				"operationId": "DeleteAccount",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/BitcoinCashAPIResponse_AccountResponse_"
								}
							}
						}
					}
				},
				"tags": [
					"BitcoinCash"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "accountName",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/bitcoincash/accounts/{accountName}/sign-tx": {
			"post": {
				"operationId": "SignTransaction",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/BitcoinCashAPIResponse_BitcoinCashTransactionOutput_"
								}
							}
						}
					}
				},
				"tags": [
					"BitcoinCash"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "accountName",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/BitcoinCashTransactionInput"
							}
						}
					}
				}
			}
		},
		"/bitcoincash/accounts/{accountName}/memo-sign-tx": {
			"post": {
				"operationId": "SignTransactionWithMemo",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/BitcoinCashAPIResponse_BitcoinCashTransactionOutput_"
								}
							}
						}
					}
				},
				"tags": [
					"BitcoinCash"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "accountName",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/BitcoinCashTransactionInput"
							}
						}
					}
				}
			}
		},
		"/bitcoincash/accounts/{accountName}/sign-btc-tx": {
			"post": {
				"operationId": "SignBitcoinTransaction",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/BitcoinCashAPIResponse__signed_tx-string__"
								}
							}
						}
					}
				},
				"tags": [
					"BitcoinCash"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "accountName",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"outputs": {
										"type": "string"
									},
									"inputs": {
										"type": "string"
									},
									"network": {
										"type": "string"
									}
								},
								"required": [
									"outputs",
									"inputs",
									"network"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/bitcoincash/accounts/{accountName}/generate-unsigned-psbt": {
			"post": {
				"operationId": "GenerateUnsignedPSBTHex",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/BitcoinCashAPIResponse__psbt_hex-string__"
								}
							}
						}
					}
				},
				"tags": [
					"BitcoinCash"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "accountName",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UnsignedPSBTInput"
							}
						}
					}
				}
			}
		},
		"/bitcoincash/accounts/{accountName}/sign-psbt-with-key-path-and-script-path": {
			"post": {
				"operationId": "SignPSBTWithKeyPathAndScriptPath",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/BitcoinCashAPIResponse__signed_psbt_hex-string__"
								}
							}
						}
					}
				},
				"tags": [
					"BitcoinCash"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "accountName",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"psbt_hex": {
										"type": "string"
									},
									"network": {
										"type": "string"
									}
								},
								"required": [
									"psbt_hex",
									"network"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/cosmos": {
			"get": {
				"operationId": "ListAccounts",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/CosmosAccountListAPIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"Cosmos"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"post": {
				"operationId": "CreateAccount",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/CosmosAccountAPIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"Cosmos"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"network": {
										"type": "string"
									}
								},
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/cosmos/{accountName}": {
			"get": {
				"operationId": "GetAccount",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/CosmosAccountAPIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"Cosmos"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "accountName",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"delete": {
				"operationId": "DeleteAccount",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/BaseCosmosAPIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"Cosmos"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "accountName",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/cosmos/{accountName}/export": {
			"post": {
				"operationId": "ExportAccount",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/BaseCosmosAPIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"Cosmos"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "accountName",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/cosmos/{accountName}/sign-transfer": {
			"post": {
				"operationId": "SignTransferTransaction",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/CosmosTransactionAPIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"Cosmos"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "accountName",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CosmosTransferInput"
							}
						}
					}
				}
			}
		},
		"/cosmos/{accountName}/sign-message": {
			"post": {
				"operationId": "SignMessage",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/CosmosSignedMessageAPIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"Cosmos"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "accountName",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CosmosSignMessageInput"
							}
						}
					}
				}
			}
		},
		"/cosmos/{accountName}/sign-ibc-transfer": {
			"post": {
				"operationId": "SignIBCTransferTransaction",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/CosmosTransactionAPIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"Cosmos"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "accountName",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CosmosIBCTransferInput"
							}
						}
					}
				}
			}
		},
		"/data/{address}/balance": {
			"get": {
				"operationId": "GetWalletBalance",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/WalletBalanceAPIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"Data"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "chain",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "excludeNative",
						"required": false,
						"schema": {
							"type": "boolean"
						}
					}
				]
			}
		},
		"/data/{address}/history": {
			"get": {
				"operationId": "GetWalletHistory",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/WalletHistoryAPIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"Data"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "chain",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/dogecoin": {
			"get": {
				"operationId": "ListDogeCoinAccounts",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AccountAPIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"DogeCoin"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"post": {
				"operationId": "CreateDogeCoinAccount",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AccountAPIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"DogeCoin"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/DogeCoinInput"
							}
						}
					}
				}
			}
		},
		"/dogecoin/{accountName}": {
			"get": {
				"operationId": "GetDogeCoinAccount",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AccountAPIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"DogeCoin"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "accountName",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/dogecoin/{accountName}/sign-tx": {
			"post": {
				"operationId": "SignDogeCoinTransaction",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/DogeCoinAPIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"DogeCoin"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "accountName",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/DogeCoinTransactionInput"
							}
						}
					}
				}
			}
		},
		"/dogecoin/{accountName}/export": {
			"post": {
				"operationId": "ExportDogeCoinAccount",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AccountAPIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"DogeCoin"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "accountName",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/dogecoin/{accountName}/delete": {
			"post": {
				"operationId": "DeleteDogeCoinAccount",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AccountAPIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"DogeCoin"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "accountName",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/dogecoin/{accountName}/memo-sign-tx": {
			"post": {
				"operationId": "SignDogeCoinTransactionWithMemo",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/DogeCoinAPIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"DogeCoin"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "accountName",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/DogeCoinTransactionInput"
							}
						}
					}
				}
			}
		},
		"/ens/resolve": {
			"post": {
				"operationId": "Resolve",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/EnsResolveAPIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"ENS"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/EnsResolveInput"
							}
						}
					}
				}
			}
		},
		"/eos": {
			"get": {
				"operationId": "ListEosAccounts",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AccountAPIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"eos"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"post": {
				"operationId": "CreateEosAccount",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AccountAPIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"eos"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/EosInput"
							}
						}
					}
				}
			}
		},
		"/eos/{accountName}": {
			"get": {
				"operationId": "GetEosAccount",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AccountAPIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"eos"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "accountName",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/eos/{accountName}/sign-tx": {
			"post": {
				"operationId": "SignEosTransaction",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/EosAPIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"eos"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "accountName",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/EosTransactionInput"
							}
						}
					}
				}
			}
		},
		"/eos/{accountName}/export": {
			"post": {
				"operationId": "ExportEosAccount",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AccountAPIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"eos"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "accountName",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/eos/{accountName}/delete": {
			"post": {
				"operationId": "DeleteEosAccount",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AccountAPIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"eos"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "accountName",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/erc1155/{name}/balance-of": {
			"post": {
				"operationId": "BalanceOf",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/TransactionAPIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"ERC1155"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "name",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Erc1155Request"
							}
						}
					}
				}
			}
		},
		"/erc1155/{name}/balance-of-batch": {
			"post": {
				"operationId": "BalanceOfBatch",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/TransactionAPIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"ERC1155"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "name",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Erc1155Request"
							}
						}
					}
				}
			}
		},
		"/erc1155/{name}/set-approval-for-all": {
			"post": {
				"operationId": "SetApprovalForAll",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/TransactionAPIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"ERC1155"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "name",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Erc1155Request"
							}
						}
					}
				}
			}
		},
		"/erc1155/{name}/is-approved-for-all": {
			"post": {
				"operationId": "IsApprovedForAll",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/TransactionAPIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"ERC1155"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "name",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Erc1155Request"
							}
						}
					}
				}
			}
		},
		"/erc1155/{name}/safe-transfer-from": {
			"post": {
				"operationId": "SafeTransferFrom",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/TransactionAPIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"ERC1155"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "name",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Erc1155Request"
							}
						}
					}
				}
			}
		},
		"/erc1155/{name}/safe-batch-transfer-from": {
			"post": {
				"operationId": "SafeBatchTransferFrom",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/TransactionAPIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"ERC1155"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "name",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Erc1155Request"
							}
						}
					}
				}
			}
		},
		"/erc20/{account}/decimals": {
			"get": {
				"operationId": "GetDecimals",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ERC20APIResponse_number_"
								}
							}
						}
					}
				},
				"tags": [
					"ERC20"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "account",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "chainId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/erc20/{account}/symbol": {
			"get": {
				"operationId": "GetSymbol",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ERC20APIResponse_string_"
								}
							}
						}
					}
				},
				"tags": [
					"ERC20"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "account",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "chainId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/erc20/{account}/name": {
			"get": {
				"operationId": "GetName",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ERC20APIResponse_string_"
								}
							}
						}
					}
				},
				"tags": [
					"ERC20"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "account",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "chainId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/erc20/{account}/totalSupply": {
			"get": {
				"operationId": "GetTotalSupply",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ERC20APIResponse_string_"
								}
							}
						}
					}
				},
				"tags": [
					"ERC20"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "account",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "chainId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/erc20/{account}/balanceOf": {
			"get": {
				"operationId": "GetBalanceOf",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ERC20APIResponse_string_"
								}
							}
						}
					}
				},
				"tags": [
					"ERC20"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "account",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "chainId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/erc20/{account}/allowance": {
			"get": {
				"operationId": "GetAllowance",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ERC20APIResponse_string_"
								}
							}
						}
					}
				},
				"tags": [
					"ERC20"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "account",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "chainId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "owner",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "spender",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/erc20/{address}/approve": {
			"post": {
				"operationId": "Approve",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ERC20APIResponse_ERC20ExecuteFunctionResult_"
								}
							}
						}
					}
				},
				"tags": [
					"ERC20"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ERC20InputBody"
							}
						}
					}
				}
			}
		},
		"/erc20/{address}/transfer": {
			"post": {
				"operationId": "Transfer",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ERC20APIResponse_ERC20ExecuteFunctionResult_"
								}
							}
						}
					}
				},
				"tags": [
					"ERC20"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ERC20InputBody"
							}
						}
					}
				}
			}
		},
		"/erc20/{address}/transferFrom": {
			"post": {
				"operationId": "TransferFrom",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ERC20APIResponse_ERC20ExecuteFunctionResult_"
								}
							}
						}
					}
				},
				"tags": [
					"ERC20"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ERC20InputBody"
							}
						}
					}
				}
			}
		},
		"/erc4626/{account}/asset": {
			"get": {
				"operationId": "GetAsset",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ERC4626APIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"ERC4626"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "account",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "chainId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/erc4626/{account}/totalAssets": {
			"get": {
				"operationId": "GetTotalAssets",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ERC4626APIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"ERC4626"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "account",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "chainId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/erc4626/{account}/convertToShares": {
			"get": {
				"operationId": "GetConvertToShares",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ERC4626APIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"ERC4626"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "account",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "chainId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "assets",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/erc4626/{account}/convertToAssets": {
			"get": {
				"operationId": "GetConvertToAssets",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ERC4626APIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"ERC4626"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "account",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "chainId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "shares",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/erc4626/{account}/maxDeposit": {
			"get": {
				"operationId": "GetMaxDeposit",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ERC4626APIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"ERC4626"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "account",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "chainId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "receiver",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/erc4626/{address}/deposit": {
			"post": {
				"operationId": "Deposit",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ERC4626APIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"ERC4626"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/InputBody"
							}
						}
					}
				}
			}
		},
		"/erc4626/{address}/withdraw": {
			"post": {
				"operationId": "Withdraw",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ERC4626APIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"ERC4626"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/InputBody"
							}
						}
					}
				}
			}
		},
		"/erc4626/{account}/maxMint": {
			"get": {
				"operationId": "GetMaxMint",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ERC4626APIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"ERC4626"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "account",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "chainId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "receiver",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/erc4626/{account}/maxWithdraw": {
			"get": {
				"operationId": "GetMaxWithdraw",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ERC4626APIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"ERC4626"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "account",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "chainId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "owner",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/erc4626/{account}/maxRedeem": {
			"get": {
				"operationId": "GetMaxRedeem",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ERC4626APIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"ERC4626"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "account",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "chainId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "owner",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/erc4626/{account}/previewDeposit": {
			"get": {
				"operationId": "GetPreviewDeposit",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ERC4626APIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"ERC4626"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "account",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "chainId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "assets",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/erc4626/{account}/previewMint": {
			"get": {
				"operationId": "GetPreviewMint",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ERC4626APIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"ERC4626"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "account",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "chainId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "shares",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/erc4626/{account}/previewWithdraw": {
			"get": {
				"operationId": "GetPreviewWithdraw",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ERC4626APIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"ERC4626"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "account",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "chainId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "assets",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/erc4626/{account}/previewRedeem": {
			"get": {
				"operationId": "GetPreviewRedeem",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ERC4626APIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"ERC4626"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "account",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "chainId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "shares",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/erc4626/{address}/mint": {
			"post": {
				"operationId": "Mint",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ERC4626APIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"ERC4626"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/InputBody"
							}
						}
					}
				}
			}
		},
		"/erc4626/{address}/redeem": {
			"post": {
				"operationId": "Redeem",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ERC4626APIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"ERC4626"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/InputBody"
							}
						}
					}
				}
			}
		},
		"/erc4626/{account}/totalSupply": {
			"get": {
				"operationId": "GetTotalSupply",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ERC4626APIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"ERC4626"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "account",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "chainId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/erc4626/{account}/balanceOf": {
			"get": {
				"operationId": "GetBalanceOf",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ERC4626APIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"ERC4626"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "account",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "chainId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/erc4626/{account}/allowance": {
			"get": {
				"operationId": "GetAllowance",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ERC4626APIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"ERC4626"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "account",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "chainId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "owner",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "spender",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/erc4626/{address}/approve": {
			"post": {
				"operationId": "Approve",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ERC4626APIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"ERC4626"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/InputBody"
							}
						}
					}
				}
			}
		},
		"/erc4626/{address}/transfer": {
			"post": {
				"operationId": "Transfer",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ERC4626APIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"ERC4626"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/InputBody"
							}
						}
					}
				}
			}
		},
		"/erc4626/{address}/transferFrom": {
			"post": {
				"operationId": "TransferFrom",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ERC4626APIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"ERC4626"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/InputBody"
							}
						}
					}
				}
			}
		},
		"/erc721/{account}/balanceOf": {
			"get": {
				"operationId": "getERC721BalanceOf",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ERC721APIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"ERC721"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "account",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "chainId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/erc721/{tokenId}/ownerOf": {
			"get": {
				"operationId": "getERC721OwnerOf",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ERC721APIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"ERC721"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "tokenId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "chainId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/erc721/name": {
			"get": {
				"operationId": "getERC721Name",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ERC721APIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"ERC721"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "chainId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/erc721/symbol": {
			"get": {
				"operationId": "getERC721Symbol",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ERC721APIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"ERC721"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "chainId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/erc721/{tokenId}/tokenURI": {
			"get": {
				"operationId": "getERC721TokenURI",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ERC721APIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"ERC721"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "tokenId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "chainId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/erc721/{tokenId}/getApproved": {
			"get": {
				"operationId": "getERC721Approved",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ERC721APIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"ERC721"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "tokenId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "chainId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/erc721/{owner}/{operator}/isApprovedForAll": {
			"get": {
				"operationId": "getERC721IsApprovedForAll",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ERC721APIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"ERC721"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "owner",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "operator",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "chainId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/erc721/{address}/approve": {
			"post": {
				"operationId": "approveERC721",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ERC721APIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"ERC721"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/InputBody"
							}
						}
					}
				}
			}
		},
		"/erc721/{address}/setApprovalForAll": {
			"post": {
				"operationId": "setApprovalForAllERC721",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ERC721APIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"ERC721"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/InputBody"
							}
						}
					}
				}
			}
		},
		"/erc721/{address}/transferFrom": {
			"post": {
				"operationId": "transferFromERC721",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ERC721APIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"ERC721"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/InputBody"
							}
						}
					}
				}
			}
		},
		"/erc721/{address}/safeTransferFrom": {
			"post": {
				"operationId": "safeTransferFromERC721",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ERC721APIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"ERC721"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/InputBody"
							}
						}
					}
				}
			}
		},
		"/erc721/{address}/safeTransferFromWithData": {
			"post": {
				"operationId": "safeTransferFromWithDataERC721",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ERC721APIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"ERC721"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/InputBody"
							}
						}
					}
				}
			}
		},
		"/jupiter/programIdToLabel": {
			"get": {
				"operationId": "GetProgramIdToLabel",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/JupiterAPIResponse_Record_string.string__"
								}
							}
						}
					}
				},
				"tags": [
					"Jupiter"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/jupiter/indexedRouteMap": {
			"get": {
				"operationId": "GetIndexedRouteMap",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/JupiterAPIResponse_any_"
								}
							}
						}
					}
				},
				"tags": [
					"Jupiter"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "onlyDirectRoutes",
						"required": false,
						"schema": {
							"type": "boolean"
						}
					}
				]
			}
		},
		"/jupiter/tokens": {
			"get": {
				"operationId": "GetTokens",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/JupiterAPIResponse_string-Array_"
								}
							}
						}
					}
				},
				"tags": [
					"Jupiter"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/jupiter/{accountName}/quote": {
			"post": {
				"operationId": "GetQuote",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/JupiterAPIResponse_JupiterExecuteFunctionResult_"
								}
							}
						}
					}
				},
				"tags": [
					"Jupiter"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "accountName",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Omit_JupiterInputBody.accountName_"
							}
						}
					}
				}
			}
		},
		"/jupiter/{accountName}/swap": {
			"post": {
				"operationId": "Swap",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/JupiterAPIResponse_JupiterExecuteFunctionResult_"
								}
							}
						}
					}
				},
				"tags": [
					"Jupiter"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "accountName",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Omit_JupiterInputBody.accountName_"
							}
						}
					}
				}
			}
		},
		"/jupiter/{accountName}/swapInstructions": {
			"post": {
				"operationId": "GetSwapInstructions",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/JupiterAPIResponse_JupiterExecuteFunctionResult_"
								}
							}
						}
					}
				},
				"tags": [
					"Jupiter"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "accountName",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Omit_JupiterInputBody.accountName_"
							}
						}
					}
				}
			}
		},
		"/lending-pool/flash-loan-premium": {
			"get": {
				"operationId": "getFlashLoanPremiumTotal",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/LendingPoolAPIResponse_number_"
								}
							}
						}
					}
				},
				"tags": [
					"LendingPool"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "chainId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/lending-pool/revision": {
			"get": {
				"operationId": "getLendingPoolRevision",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/LendingPoolAPIResponse_number_"
								}
							}
						}
					}
				},
				"tags": [
					"LendingPool"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "chainId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/lending-pool/max-reserves": {
			"get": {
				"operationId": "getMaxNumberReserves",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/LendingPoolAPIResponse_number_"
								}
							}
						}
					}
				},
				"tags": [
					"LendingPool"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "chainId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/lending-pool/max-stable-rate-borrow-size-percent": {
			"get": {
				"operationId": "getMaxStableRateBorrowSizePercent",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/LendingPoolAPIResponse_number_"
								}
							}
						}
					}
				},
				"tags": [
					"LendingPool"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "chainId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/lending-pool/{accountName}/borrow": {
			"post": {
				"operationId": "borrow",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/LendingPoolAPIResponse_LendingPoolExecuteFunctionResult_"
								}
							}
						}
					}
				},
				"tags": [
					"LendingPool"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "accountName",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/LendingPoolInputBody"
							}
						}
					}
				}
			}
		},
		"/lending-pool/{accountName}/deposit": {
			"post": {
				"operationId": "deposit",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/LendingPoolAPIResponse_LendingPoolExecuteFunctionResult_"
								}
							}
						}
					}
				},
				"tags": [
					"LendingPool"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "accountName",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/LendingPoolInputBody"
							}
						}
					}
				}
			}
		},
		"/lending-pool/{accountName}/flash-loan": {
			"post": {
				"operationId": "flashLoan",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/LendingPoolAPIResponse_LendingPoolExecuteFunctionResult_"
								}
							}
						}
					}
				},
				"tags": [
					"LendingPool"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "accountName",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/LendingPoolInputBody"
							}
						}
					}
				}
			}
		},
		"/lending-pool/{accountName}/repay": {
			"post": {
				"operationId": "repay",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/LendingPoolAPIResponse_LendingPoolExecuteFunctionResult_"
								}
							}
						}
					}
				},
				"tags": [
					"LendingPool"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "accountName",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/LendingPoolInputBody"
							}
						}
					}
				}
			}
		},
		"/lending-pool/{accountName}/swap-borrow-rate-mode": {
			"post": {
				"operationId": "swapBorrowRateMode",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/LendingPoolAPIResponse_LendingPoolExecuteFunctionResult_"
								}
							}
						}
					}
				},
				"tags": [
					"LendingPool"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "accountName",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/LendingPoolInputBody"
							}
						}
					}
				}
			}
		},
		"/lending-pool/{accountName}/set-user-use-reserve-as-collateral": {
			"post": {
				"operationId": "setUserUseReserveAsCollateral",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/LendingPoolAPIResponse_LendingPoolExecuteFunctionResult_"
								}
							}
						}
					}
				},
				"tags": [
					"LendingPool"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "accountName",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/LendingPoolInputBody"
							}
						}
					}
				}
			}
		},
		"/lending-pool/{accountName}/liquidation-call": {
			"post": {
				"operationId": "liquidationCall",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/LendingPoolAPIResponse_LendingPoolExecuteFunctionResult_"
								}
							}
						}
					}
				},
				"tags": [
					"LendingPool"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "accountName",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/LendingPoolInputBody"
							}
						}
					}
				}
			}
		},
		"/lending-pool/reserve-data": {
			"get": {
				"operationId": "getReserveData",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/LendingPoolAPIResponse_any_"
								}
							}
						}
					}
				},
				"tags": [
					"LendingPool"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "chainId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "asset",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/lending-pool/user-account-data": {
			"get": {
				"operationId": "getUserAccountData",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/LendingPoolAPIResponse_any_"
								}
							}
						}
					}
				},
				"tags": [
					"LendingPool"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "chainId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "user",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/lending-pool/reserves-list": {
			"get": {
				"operationId": "getReservesList",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/LendingPoolAPIResponse_string-Array_"
								}
							}
						}
					}
				},
				"tags": [
					"LendingPool"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "chainId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/lending-pool/addresses-provider": {
			"get": {
				"operationId": "getAddressesProvider",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/LendingPoolAPIResponse_string_"
								}
							}
						}
					}
				},
				"tags": [
					"LendingPool"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "chainId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/lending-pool/paused": {
			"get": {
				"operationId": "isPaused",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/LendingPoolAPIResponse_boolean_"
								}
							}
						}
					}
				},
				"tags": [
					"LendingPool"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "chainId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/leverager/addresses-provider": {
			"get": {
				"operationId": "getAddressesProvider",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/LeveragerAPIResponse_string_"
								}
							}
						}
					}
				},
				"tags": [
					"Leverager"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "chainId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/leverager/default-admin-role": {
			"get": {
				"operationId": "getDefaultAdminRole",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/LeveragerAPIResponse_string_"
								}
							}
						}
					}
				},
				"tags": [
					"Leverager"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "chainId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/leverager/lending-pool": {
			"get": {
				"operationId": "getLendingPool",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/LeveragerAPIResponse_string_"
								}
							}
						}
					}
				},
				"tags": [
					"Leverager"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "chainId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/leverager/min-hf": {
			"get": {
				"operationId": "getMinHF",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/LeveragerAPIResponse_string_"
								}
							}
						}
					}
				},
				"tags": [
					"Leverager"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "chainId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/leverager/paused": {
			"get": {
				"operationId": "isPaused",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/LeveragerAPIResponse_boolean_"
								}
							}
						}
					}
				},
				"tags": [
					"Leverager"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "chainId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/leverager/weth": {
			"get": {
				"operationId": "getWETH",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/LeveragerAPIResponse_string_"
								}
							}
						}
					}
				},
				"tags": [
					"Leverager"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "chainId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/leverager/role-admin": {
			"get": {
				"operationId": "getRoleAdmin",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/LeveragerAPIResponse_string_"
								}
							}
						}
					}
				},
				"tags": [
					"Leverager"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "chainId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "role",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/leverager/has-role": {
			"get": {
				"operationId": "hasRole",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/LeveragerAPIResponse_boolean_"
								}
							}
						}
					}
				},
				"tags": [
					"Leverager"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "chainId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "role",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "account",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/leverager/supports-interface": {
			"get": {
				"operationId": "supportsInterface",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/LeveragerAPIResponse_boolean_"
								}
							}
						}
					}
				},
				"tags": [
					"Leverager"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "chainId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "interfaceId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/leverager/{accountName}/deleverage-erc20": {
			"post": {
				"operationId": "deleverageERC20",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/LeveragerAPIResponse_LeveragerExecuteFunctionResult_"
								}
							}
						}
					}
				},
				"tags": [
					"Leverager"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "accountName",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/LeveragerInputBody"
							}
						}
					}
				}
			}
		},
		"/leverager/{accountName}/deleverage-native": {
			"post": {
				"operationId": "deleverageNative",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/LeveragerAPIResponse_LeveragerExecuteFunctionResult_"
								}
							}
						}
					}
				},
				"tags": [
					"Leverager"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "accountName",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/LeveragerInputBody"
							}
						}
					}
				}
			}
		},
		"/leverager/{accountName}/execute-operation": {
			"post": {
				"operationId": "executeOperation",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/LeveragerAPIResponse_LeveragerExecuteFunctionResult_"
								}
							}
						}
					}
				},
				"tags": [
					"Leverager"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "accountName",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/LeveragerInputBody"
							}
						}
					}
				}
			}
		},
		"/leverager/{accountName}/grant-role": {
			"post": {
				"operationId": "grantRole",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/LeveragerAPIResponse_LeveragerExecuteFunctionResult_"
								}
							}
						}
					}
				},
				"tags": [
					"Leverager"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "accountName",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/LeveragerInputBody"
							}
						}
					}
				}
			}
		},
		"/leverager/{accountName}/leverage-erc20": {
			"post": {
				"operationId": "leverageERC20",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/LeveragerAPIResponse_LeveragerExecuteFunctionResult_"
								}
							}
						}
					}
				},
				"tags": [
					"Leverager"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "accountName",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/LeveragerInputBody"
							}
						}
					}
				}
			}
		},
		"/leverager/{accountName}/leverage-native": {
			"post": {
				"operationId": "leverageNative",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/LeveragerAPIResponse_LeveragerExecuteFunctionResult_"
								}
							}
						}
					}
				},
				"tags": [
					"Leverager"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "accountName",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/LeveragerInputBody"
							}
						}
					}
				}
			}
		},
		"/leverager/{accountName}/pause": {
			"post": {
				"operationId": "pause",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/LeveragerAPIResponse_LeveragerExecuteFunctionResult_"
								}
							}
						}
					}
				},
				"tags": [
					"Leverager"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "accountName",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/LeveragerInputBody"
							}
						}
					}
				}
			}
		},
		"/leverager/{accountName}/renounce-role": {
			"post": {
				"operationId": "renounceRole",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/LeveragerAPIResponse_LeveragerExecuteFunctionResult_"
								}
							}
						}
					}
				},
				"tags": [
					"Leverager"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "accountName",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/LeveragerInputBody"
							}
						}
					}
				}
			}
		},
		"/leverager/{accountName}/revoke-role": {
			"post": {
				"operationId": "revokeRole",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/LeveragerAPIResponse_LeveragerExecuteFunctionResult_"
								}
							}
						}
					}
				},
				"tags": [
					"Leverager"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "accountName",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/LeveragerInputBody"
							}
						}
					}
				}
			}
		},
		"/leverager/{accountName}/unpause": {
			"post": {
				"operationId": "unpause",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/LeveragerAPIResponse_LeveragerExecuteFunctionResult_"
								}
							}
						}
					}
				},
				"tags": [
					"Leverager"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "accountName",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/LeveragerInputBody"
							}
						}
					}
				}
			}
		},
		"/lifi/quote": {
			"get": {
				"operationId": "GetQuote",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_Quote_"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "fromChain",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "toChain",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "fromToken",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "toToken",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "fromAmount",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "fromAddress",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "toAddress",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "order",
						"required": false,
						"schema": {
							"type": "string",
							"enum": [
								"BEST_VALUE",
								"BEST_FEE",
								"BEST_FEE_GAS"
							]
						}
					},
					{
						"in": "query",
						"name": "slippage",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "integrator",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "fee",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "referrer",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "allowBridges",
						"required": false,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"in": "query",
						"name": "allowExchanges",
						"required": false,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"in": "query",
						"name": "denyBridges",
						"required": false,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"in": "query",
						"name": "denyExchanges",
						"required": false,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"in": "query",
						"name": "preferBridges",
						"required": false,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"in": "query",
						"name": "preferExchanges",
						"required": false,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					}
				]
			}
		},
		"/lifi/{accountName}/quote": {
			"post": {
				"operationId": "PostQuote",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_PostQuote_"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "accountName",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "fromChain",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "toChain",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "fromToken",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "toToken",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "fromAmount",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "fromAddress",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "toAddress",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "order",
						"required": false,
						"schema": {
							"type": "string",
							"enum": [
								"BEST_VALUE",
								"BEST_FEE",
								"BEST_FEE_GAS"
							]
						}
					},
					{
						"in": "query",
						"name": "slippage",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "integrator",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "fee",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "referrer",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "allowBridges",
						"required": false,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"in": "query",
						"name": "allowExchanges",
						"required": false,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"in": "query",
						"name": "denyBridges",
						"required": false,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"in": "query",
						"name": "denyExchanges",
						"required": false,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"in": "query",
						"name": "preferBridges",
						"required": false,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"in": "query",
						"name": "preferExchanges",
						"required": false,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					}
				]
			}
		},
		"/lifi/status": {
			"get": {
				"operationId": "Getstatus",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_StatusResponse_"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "txHash",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/lifi/chains": {
			"get": {
				"operationId": "GetChains",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_ChainsResponse_"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "optionalChainTypes",
						"required": false,
						"schema": {
							"type": "string",
							"enum": [
								"EVM",
								"SOL"
							]
						}
					}
				]
			}
		},
		"/lifi/tools": {
			"get": {
				"operationId": "GetTools",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_ToolsResponse_"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "chains",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/lifi/tokens": {
			"get": {
				"operationId": "FetchTokens",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_TokensResponse_"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": []
			}
		},
		"/lifi/token": {
			"get": {
				"operationId": "FetchTokenDetails",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_TokenDetails_"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "chain",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "token",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/lifi/connections": {
			"get": {
				"operationId": "GetConnections",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_ConnectionsResponse_"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "fromChain",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "toChain",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "fromToken",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "toToken",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "chainTypes",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/lifi/allPossibleConnections": {
			"get": {
				"operationId": "GetAllPossibleConnections",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_TokenInfoByChainId_"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "toChain",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "toToken",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/litecoin": {
			"get": {
				"operationId": "ListLitecoinAccounts",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AccountAPIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"Litecoin"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"post": {
				"operationId": "CreateLitecoinAccount",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AccountAPIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"Litecoin"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/LitecoinInput"
							}
						}
					}
				}
			}
		},
		"/litecoin/{accountName}": {
			"get": {
				"operationId": "GetLitecoinAccount",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AccountAPIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"Litecoin"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "accountName",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/litecoin/{accountName}/sign-tx": {
			"post": {
				"operationId": "SignLitecoinTransaction",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/LitecoinAPIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"Litecoin"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "accountName",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/LitecoinTransactionInput"
							}
						}
					}
				}
			}
		},
		"/litecoin/{accountName}/export": {
			"post": {
				"operationId": "ExportLitecoinAccount",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AccountAPIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"Litecoin"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "accountName",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/litecoin/{accountName}/delete": {
			"post": {
				"operationId": "DeleteLitecoinAccount",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AccountAPIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"Litecoin"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "accountName",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/litecoin/{accountName}/memo-sign-tx": {
			"post": {
				"operationId": "SignLitecoinTransactionWithMemo",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/LitecoinAPIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"Litecoin"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "accountName",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/LitecoinTransactionInput"
							}
						}
					}
				}
			}
		},
		"/multicall/create-job": {
			"post": {
				"operationId": "CreateJob",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/MultiCallAPIResponse_string_"
								}
							}
						}
					}
				},
				"tags": [
					"MultiCall"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/MultiCallInputBody"
							}
						}
					}
				}
			}
		},
		"/multicall/execute-job/{jobId}": {
			"post": {
				"operationId": "ExecuteJob",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/MultiCallAPIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"MultiCall"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "jobId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/multicall/job-result/{jobId}": {
			"get": {
				"operationId": "GetJobResult",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/MultiCallAPIResponse_MultiCallResult_"
								}
							}
						}
					}
				},
				"tags": [
					"MultiCall"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "jobId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/multicall/monitor-job/{jobId}": {
			"post": {
				"operationId": "MonitorJob",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/MultiCallAPIResponse_MultiCallResult_"
								}
							}
						}
					}
				},
				"tags": [
					"MultiCall"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "jobId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/multicall/call-webhook/{jobId}": {
			"post": {
				"operationId": "CallWebhook",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/MultiCallAPIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"MultiCall"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "jobId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/multicall/schedule-job": {
			"post": {
				"operationId": "ScheduleJob",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/MultiCallAPIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"MultiCall"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ScheduleJobBody"
							}
						}
					}
				}
			}
		},
		"/multicall/delete-job/{jobId}": {
			"post": {
				"operationId": "DeleteJob",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/MultiCallAPIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"MultiCall"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "jobId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/multicall/scheduled-jobs": {
			"get": {
				"operationId": "GetScheduledJobs",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/MultiCallAPIResponse_ScheduledJob-Array_"
								}
							}
						}
					}
				},
				"tags": [
					"MultiCall"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": []
			}
		},
		"/multicall/jobs": {
			"get": {
				"operationId": "ListAllJobs",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/MultiCallAPIResponse_Jobs-Array_"
								}
							}
						}
					}
				},
				"tags": [
					"MultiCall"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/multicall/job/{jobId}": {
			"get": {
				"operationId": "GetJob",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/MultiCallAPIResponse_Jobs_"
								}
							}
						}
					}
				},
				"tags": [
					"MultiCall"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "jobId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"put": {
				"operationId": "EditJob",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/MultiCallAPIResponse_Jobs_"
								}
							}
						}
					}
				},
				"tags": [
					"MultiCall"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "jobId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Partial_Jobs_"
							}
						}
					}
				}
			}
		},
		"/multicall/history": {
			"get": {
				"operationId": "ListAllHistory",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/MultiCallAPIResponse_History-Array_"
								}
							}
						}
					}
				},
				"tags": [
					"MultiCall"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/multicall/history/{historyId}": {
			"get": {
				"operationId": "GetHistoryEntry",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/MultiCallAPIResponse_History_"
								}
							}
						}
					}
				},
				"tags": [
					"MultiCall"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "historyId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"delete": {
				"operationId": "DeleteHistoryEntry",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/MultiCallAPIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"MultiCall"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "historyId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"put": {
				"operationId": "EditHistoryEntry",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/MultiCallAPIResponse_History_"
								}
							}
						}
					}
				},
				"tags": [
					"MultiCall"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "historyId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Partial_History_"
							}
						}
					}
				}
			}
		},
		"/multicall/job/{jobId}/history": {
			"get": {
				"operationId": "GetJobHistory",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/MultiCallAPIResponse_History-Array_"
								}
							}
						}
					}
				},
				"tags": [
					"MultiCall"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "jobId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"delete": {
				"operationId": "DeleteJobHistory",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/MultiCallAPIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"MultiCall"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "jobId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/multicall/flows": {
			"post": {
				"operationId": "CreateFlow",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/MultiCallAPIResponse_any_"
								}
							}
						}
					}
				},
				"tags": [
					"MultiCall"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateFlowBody"
							}
						}
					}
				}
			},
			"get": {
				"operationId": "ListFlows",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/MultiCallAPIResponse_any-Array_"
								}
							}
						}
					}
				},
				"tags": [
					"MultiCall"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/multicall/flows/{flowId}": {
			"get": {
				"operationId": "GetFlow",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/MultiCallAPIResponse_any_"
								}
							}
						}
					}
				},
				"tags": [
					"MultiCall"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "flowId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"put": {
				"operationId": "UpdateFlow",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/MultiCallAPIResponse_any_"
								}
							}
						}
					}
				},
				"tags": [
					"MultiCall"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "flowId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UpdateFlowBody"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "DeleteFlow",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/MultiCallAPIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"MultiCall"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "flowId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/multicall/user-defined-functions": {
			"post": {
				"operationId": "CreateUserDefinedFunction",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/MultiCallAPIResponse_any_"
								}
							}
						}
					}
				},
				"tags": [
					"MultiCall"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateUserDefinedFunctionBody"
							}
						}
					}
				}
			},
			"get": {
				"operationId": "ListUserDefinedFunctions",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/MultiCallAPIResponse_any-Array_"
								}
							}
						}
					}
				},
				"tags": [
					"MultiCall"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/multicall/user-defined-functions/{functionId}": {
			"get": {
				"operationId": "GetUserDefinedFunction",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/MultiCallAPIResponse_any_"
								}
							}
						}
					}
				},
				"tags": [
					"MultiCall"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "functionId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"put": {
				"operationId": "UpdateUserDefinedFunction",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/MultiCallAPIResponse_any_"
								}
							}
						}
					}
				},
				"tags": [
					"MultiCall"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "functionId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UpdateUserDefinedFunctionBody"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "DeleteUserDefinedFunction",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/MultiCallAPIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"MultiCall"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "functionId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/multicall/execute-flow/{flowId}": {
			"post": {
				"operationId": "ExecuteFlow",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/MultiCallAPIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"MultiCall"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "flowId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/multicall/available-functions": {
			"get": {
				"operationId": "ListAvailableFunctions",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/MultiCallAPIResponse_Record_string.string-Array__"
								}
							}
						}
					}
				},
				"tags": [
					"MultiCall"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/odos/{accountName}/swap": {
			"post": {
				"operationId": "Swap",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/OdosAPIResponse_OdosExecuteFunctionResult_"
								}
							}
						}
					}
				},
				"tags": [
					"Odos"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "accountName",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/OdosSwapInputBody"
							}
						}
					}
				}
			}
		},
		"/odos/{accountName}/get-quote": {
			"post": {
				"operationId": "GetQuote",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/OdosAPIResponse_OdosExecuteFunctionResult_"
								}
							}
						}
					}
				},
				"tags": [
					"Odos"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "accountName",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/OdosSwapInputBody"
							}
						}
					}
				}
			}
		},
		"/odos/{accountName}/get-zap-quote": {
			"post": {
				"operationId": "GetZapQuote",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/OdosAPIResponse_OdosExecuteFunctionResult_"
								}
							}
						}
					}
				},
				"tags": [
					"Odos"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "accountName",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/OdosSwapInputBody"
							}
						}
					}
				}
			}
		},
		"/odos/{accountName}/zap": {
			"post": {
				"operationId": "Zap",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/OdosAPIResponse_OdosExecuteFunctionResult_"
								}
							}
						}
					}
				},
				"tags": [
					"Odos"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "accountName",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/OdosSwapInputBody"
							}
						}
					}
				}
			}
		},
		"/odos/assemble-transaction": {
			"post": {
				"operationId": "AssembleTransaction",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/OdosAPIResponse_OdosExecuteFunctionResult_"
								}
							}
						}
					}
				},
				"tags": [
					"Odos"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/AssembleRequest"
							}
						}
					}
				}
			}
		},
		"/odos/supported-chains": {
			"get": {
				"operationId": "GetSupportedChains",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/OdosAPIResponse_OdosExecuteFunctionResult_"
								}
							}
						}
					}
				},
				"tags": [
					"Odos"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/odos/contract-info": {
			"get": {
				"operationId": "GetContractInfo",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/OdosAPIResponse_OdosExecuteFunctionResult_"
								}
							}
						}
					}
				},
				"tags": [
					"Odos"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "version",
						"required": true,
						"schema": {
							"type": "string",
							"enum": [
								"v2"
							]
						}
					},
					{
						"in": "query",
						"name": "chainId",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/odos/router-address": {
			"get": {
				"operationId": "GetRouterAddress",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/OdosAPIResponse_OdosExecuteFunctionResult_"
								}
							}
						}
					}
				},
				"tags": [
					"Odos"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "version",
						"required": true,
						"schema": {
							"type": "string",
							"enum": [
								"v2"
							]
						}
					},
					{
						"in": "query",
						"name": "chainId",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/odos/executor-address": {
			"get": {
				"operationId": "GetExecutorAddress",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/OdosAPIResponse_OdosExecuteFunctionResult_"
								}
							}
						}
					}
				},
				"tags": [
					"Odos"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "version",
						"required": true,
						"schema": {
							"type": "string",
							"enum": [
								"v2"
							]
						}
					},
					{
						"in": "query",
						"name": "chainId",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/odos/liquidity-sources": {
			"get": {
				"operationId": "GetLiquiditySources",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/OdosAPIResponse_OdosExecuteFunctionResult_"
								}
							}
						}
					}
				},
				"tags": [
					"Odos"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "chainId",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/odos/supported-tokens": {
			"get": {
				"operationId": "GetSupportedTokens",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/OdosAPIResponse_OdosExecuteFunctionResult_"
								}
							}
						}
					}
				},
				"tags": [
					"Odos"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "chainId",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/odos/current-block": {
			"get": {
				"operationId": "GetCurrentBlock",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/OdosAPIResponse_OdosExecuteFunctionResult_"
								}
							}
						}
					}
				},
				"tags": [
					"Odos"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "chainId",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/onramper/currencies": {
			"get": {
				"operationId": "OnRamperGetSupportedCurrencies",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SupportedCurrenciesResponse"
								}
							}
						}
					}
				},
				"tags": [
					"onramper"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "type",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/onramper/payment-types": {
			"get": {
				"operationId": "OnRamperGetSupportedPaymentTypes",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SupportedPaymentTypesCurrencyResponse"
								}
							}
						}
					}
				},
				"tags": [
					"onramper"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "fiat",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "country",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "type",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/onramper/payment-types/fiat": {
			"get": {
				"operationId": "OnRamperGetSupportedPaymentTypesFiat",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SupportedPaymentTypesCurrencyResponse"
								}
							}
						}
					}
				},
				"tags": [
					"onramper"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "fiat",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "country",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/onramper/defaults": {
			"get": {
				"operationId": "OnRamperGetSupportedDefaultsAll",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SupportedDefaultResponse"
								}
							}
						}
					}
				},
				"tags": [
					"onramper"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "country",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "type",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/onramper/assets": {
			"get": {
				"operationId": "OnRamperGetSupportedAssets",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SupportedAssetResponse"
								}
							}
						}
					}
				},
				"tags": [
					"onramper"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "source",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "country",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/onramper/onramps": {
			"get": {
				"operationId": "OnRamperGetSupportedOnRampsAll",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/GetSupportedOnRampsResponse"
								}
							}
						}
					}
				},
				"tags": [
					"onramper"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/onramper/quotes/buy": {
			"get": {
				"operationId": "OnRamperGetQuotesBuy",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Quotes"
								}
							}
						}
					}
				},
				"tags": [
					"onramper"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "fiat",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "crypto",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "amount",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "paymentMethod",
						"required": false,
						"schema": {
							"default": "creditcard",
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "uuid",
						"required": false,
						"schema": {
							"default": "",
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "clientName",
						"required": false,
						"schema": {
							"default": "",
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "country",
						"required": false,
						"schema": {
							"default": "",
							"type": "string"
						}
					}
				]
			}
		},
		"/onramper/quotes/sell": {
			"get": {
				"operationId": "OnRamperGetQuotesSell",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SellQuotes"
								}
							}
						}
					}
				},
				"tags": [
					"onramper"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "fiat",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "crypto",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "amount",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "paymentMethod",
						"required": false,
						"schema": {
							"default": "creditcard",
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "uuid",
						"required": false,
						"schema": {
							"default": "",
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "clientName",
						"required": false,
						"schema": {
							"default": "",
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "country",
						"required": false,
						"schema": {
							"default": "",
							"type": "string"
						}
					}
				]
			}
		},
		"/onramper/fund/${accountName}": {
			"post": {
				"operationId": "OnRamperCheckout",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"tags": [
					"onramper"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "accountName",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/TransactionInput"
							}
						}
					}
				}
			}
		},
		"/ping": {
			"get": {
				"operationId": "GetMessage",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PingResponse"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": []
			}
		},
		"/ripple": {
			"get": {
				"operationId": "ListRippleAccounts",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AccountAPIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"ripple"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"post": {
				"operationId": "CreateRippleAccount",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AccountAPIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"ripple"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/RippleInput"
							}
						}
					}
				}
			}
		},
		"/ripple/{accountName}": {
			"get": {
				"operationId": "GetRippleAccount",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AccountAPIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"ripple"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "accountName",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/ripple/{accountName}/sign-tx": {
			"post": {
				"operationId": "SignRippleTransaction",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/RippleAPIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"ripple"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "accountName",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/RippleTransactionInput"
							}
						}
					}
				}
			}
		},
		"/ripple/{accountName}/export": {
			"post": {
				"operationId": "ExportRippleAccount",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AccountAPIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"ripple"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "accountName",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/ripple/{accountName}/delete": {
			"post": {
				"operationId": "DeleteRippleAccount",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AccountAPIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"ripple"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "accountName",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/solana": {
			"get": {
				"operationId": "ListSolanaAccounts",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AccountAPIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"Solana"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"post": {
				"operationId": "CreateSolanaAccount",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AccountAPIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"Solana"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/SolanaInput"
							}
						}
					}
				}
			}
		},
		"/solana/{accountName}": {
			"get": {
				"operationId": "GetSolanaAccount",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AccountAPIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"Solana"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "accountName",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/solana/{accountName}/sign-tx": {
			"post": {
				"operationId": "SignSolanaTransaction",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SolanaAPIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"Solana"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "accountName",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/SolanaSignTransactionInput"
							}
						}
					}
				}
			}
		},
		"/solana/{accountName}/multi-sign-tx": {
			"post": {
				"operationId": "MultiSignSolanaTransaction",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SolanaAPIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"Solana"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "accountName",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/SolanaSignTransactionInput"
							}
						}
					}
				}
			}
		},
		"/solana/{accountName}/transfer": {
			"post": {
				"operationId": "TransferSolanaTransaction",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SolanaAPIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"Solana"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "accountName",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/SolanaTransactionInput"
							}
						}
					}
				}
			}
		},
		"/solana/{accountName}/transfer-tokens": {
			"post": {
				"operationId": "TransferTokensSignSolanaTransaction",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SolanaAPIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"Solana"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "accountName",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/SolanaTransactionInput"
							}
						}
					}
				}
			}
		},
		"/solana/{accountName}/export": {
			"post": {
				"operationId": "ExportSolanaAccount",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AccountAPIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"Solana"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "accountName",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/solana/{accountName}/delete": {
			"post": {
				"operationId": "DeleteSolanaAccount",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AccountAPIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"Solana"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "accountName",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/thena/data/fusions": {
			"get": {
				"operationId": "GetFusions",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ThenaAPIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"Thena"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/thena/data/fusions/{address}": {
			"get": {
				"operationId": "GetFusionByAddress",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ThenaAPIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"Thena"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/thena/data/fusions/type/{type}": {
			"get": {
				"operationId": "GetFusionsByType",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ThenaAPIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"Thena"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "type",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/thena/data/fusions/top-apr": {
			"get": {
				"operationId": "GetTopAPRFusions",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ThenaAPIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"Thena"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "limit",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/thena/data/tvl": {
			"get": {
				"operationId": "GetTotalValueLocked",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ThenaAPIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"Thena"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/thena/data/tokens/top": {
			"get": {
				"operationId": "GetTopTokens",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ThenaAPIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"Thena"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "limit",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/thena/data/pairs/top": {
			"get": {
				"operationId": "GetTopPairs",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ThenaAPIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"Thena"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "limit",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/thena/data/vote-distribution": {
			"get": {
				"operationId": "CalculateOptimalVoteDistribution",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ThenaAPIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"Thena"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "totalVotes",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "maxFusions",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/thorswap/quote": {
			"get": {
				"operationId": "GetQuote",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ThorSwapAPIResponse_Quote_"
								}
							}
						}
					}
				},
				"tags": [
					"ThorSwap"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "sellAsset",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "buyAsset",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "sellAmount",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "senderAddress",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "recipientAddress",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "chainId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "slippage",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "limit",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "providers",
						"required": false,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"in": "query",
						"name": "preferredProvider",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "affiliateAddress",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "affiliateBasisPoints",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "allowSmartContractRecipient",
						"required": false,
						"schema": {
							"type": "boolean"
						}
					}
				]
			}
		},
		"/thorswap/swap": {
			"post": {
				"operationId": "Swap",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ThorSwapAPIResponse_string_"
								}
							}
						}
					}
				},
				"tags": [
					"ThorSwap"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"chainId": {
										"type": "string"
									},
									"accountName": {
										"type": "string"
									},
									"provider": {
										"type": "string"
									},
									"recipientAddress": {
										"type": "string"
									},
									"senderAddress": {
										"type": "string"
									},
									"toAsset": {
										"type": "string"
									},
									"fromAsset": {
										"type": "string"
									},
									"amount": {
										"type": "number",
										"format": "double"
									}
								},
								"required": [
									"chainId",
									"accountName",
									"recipientAddress",
									"senderAddress",
									"toAsset",
									"fromAsset",
									"amount"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/thorswap/gasPrice": {
			"get": {
				"operationId": "GetGasPrice",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ThorSwapAPIResponse_GasPrice_"
								}
							}
						}
					}
				},
				"tags": [
					"ThorSwap"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "chainId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/thorswap/supportedChains": {
			"get": {
				"operationId": "GetSupportedChains",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ThorSwapAPIResponse_string-Array_"
								}
							}
						}
					}
				},
				"tags": [
					"ThorSwap"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "chainId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/thorswap/supportedProviders": {
			"get": {
				"operationId": "GetSupportedProviders",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ThorSwapAPIResponse_string-Array_"
								}
							}
						}
					}
				},
				"tags": [
					"ThorSwap"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "chainId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/tron": {
			"get": {
				"operationId": "ListTronAccounts",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AccountAPIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"Tron"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"post": {
				"operationId": "CreateTronAccount",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AccountAPIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"Tron"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/TronInput"
							}
						}
					}
				}
			}
		},
		"/tron/{accountName}": {
			"get": {
				"operationId": "GetTronAccount",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AccountAPIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"Tron"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "accountName",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/tron/{accountName}/sign-tx": {
			"post": {
				"operationId": "SignTronTransaction",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/TronAPIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"Tron"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "accountName",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/TronTransactionInput"
							}
						}
					}
				}
			}
		},
		"/tron/{accountName}/export": {
			"post": {
				"operationId": "ExportTronAccount",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AccountAPIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"Tron"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "accountName",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/tron/{accountName}/delete": {
			"post": {
				"operationId": "DeleteTronAccount",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AccountAPIResponse"
								}
							}
						}
					}
				},
				"tags": [
					"Tron"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "accountName",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/thena/nft/{account}/balanceOf": {
			"get": {
				"operationId": "GetBalanceOf",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/VeTheNFTAPIResponse_string_"
								}
							}
						}
					}
				},
				"tags": [
					"VeTheNFT"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "account",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "chainId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/thena/nft/{tokenId}/ownerOf": {
			"get": {
				"operationId": "GetOwnerOf",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/VeTheNFTAPIResponse_string_"
								}
							}
						}
					}
				},
				"tags": [
					"VeTheNFT"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "tokenId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "chainId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/thena/nft/{tokenId}/tokenURI": {
			"get": {
				"operationId": "GetTokenURI",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/VeTheNFTAPIResponse_string_"
								}
							}
						}
					}
				},
				"tags": [
					"VeTheNFT"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "tokenId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "chainId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/thena/nft/{tokenId}/getApproved": {
			"get": {
				"operationId": "GetApproved",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/VeTheNFTAPIResponse_string_"
								}
							}
						}
					}
				},
				"tags": [
					"VeTheNFT"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "tokenId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "chainId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/thena/nft/{owner}/isApprovedForAll": {
			"get": {
				"operationId": "IsApprovedForAll",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/VeTheNFTAPIResponse_boolean_"
								}
							}
						}
					}
				},
				"tags": [
					"VeTheNFT"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "owner",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "chainId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "operator",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/thena/nft/{tokenId}/balanceOfNFT": {
			"get": {
				"operationId": "GetBalanceOfNFT",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/VeTheNFTAPIResponse_string_"
								}
							}
						}
					}
				},
				"tags": [
					"VeTheNFT"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "tokenId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "chainId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/thena/nft/totalSupply": {
			"get": {
				"operationId": "GetTotalSupply",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/VeTheNFTAPIResponse_string_"
								}
							}
						}
					}
				},
				"tags": [
					"VeTheNFT"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "chainId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/thena/nft/{tokenId}/locked": {
			"get": {
				"operationId": "GetLocked",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/VeTheNFTAPIResponse_LockedData_"
								}
							}
						}
					}
				},
				"tags": [
					"VeTheNFT"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "tokenId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "chainId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/thena/nft/{tokenId}/lockedEnd": {
			"get": {
				"operationId": "GetLockedEnd",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/VeTheNFTAPIResponse_string_"
								}
							}
						}
					}
				},
				"tags": [
					"VeTheNFT"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "tokenId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "chainId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/thena/nft/{address}/createLock": {
			"post": {
				"operationId": "CreateLock",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/VeTheNFTAPIResponse_VeNFTExecuteFunctionResult_"
								}
							}
						}
					}
				},
				"tags": [
					"VeTheNFT"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/VeNFTInputBody"
							}
						}
					}
				}
			}
		},
		"/thena/nft/{address}/createLockFor": {
			"post": {
				"operationId": "CreateLockFor",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/VeTheNFTAPIResponse_VeNFTExecuteFunctionResult_"
								}
							}
						}
					}
				},
				"tags": [
					"VeTheNFT"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/VeNFTInputBody"
							}
						}
					}
				}
			}
		},
		"/thena/nft/{address}/increaseLockAmount": {
			"post": {
				"operationId": "IncreaseLockAmount",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/VeTheNFTAPIResponse_VeNFTExecuteFunctionResult_"
								}
							}
						}
					}
				},
				"tags": [
					"VeTheNFT"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/VeNFTInputBody"
							}
						}
					}
				}
			}
		},
		"/thena/nft/{address}/increaseUnlockTime": {
			"post": {
				"operationId": "IncreaseUnlockTime",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/VeTheNFTAPIResponse_VeNFTExecuteFunctionResult_"
								}
							}
						}
					}
				},
				"tags": [
					"VeTheNFT"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/VeNFTInputBody"
							}
						}
					}
				}
			}
		},
		"/thena/nft/{address}/withdraw": {
			"post": {
				"operationId": "Withdraw",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/VeTheNFTAPIResponse_VeNFTExecuteFunctionResult_"
								}
							}
						}
					}
				},
				"tags": [
					"VeTheNFT"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/VeNFTInputBody"
							}
						}
					}
				}
			}
		},
		"/thena/nft/{address}/approve": {
			"post": {
				"operationId": "Approve",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/VeTheNFTAPIResponse_VeNFTExecuteFunctionResult_"
								}
							}
						}
					}
				},
				"tags": [
					"VeTheNFT"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/VeNFTInputBody"
							}
						}
					}
				}
			}
		},
		"/thena/nft/{address}/setApprovalForAll": {
			"post": {
				"operationId": "SetApprovalForAll",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/VeTheNFTAPIResponse_VeNFTExecuteFunctionResult_"
								}
							}
						}
					}
				},
				"tags": [
					"VeTheNFT"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/VeNFTInputBody"
							}
						}
					}
				}
			}
		},
		"/thena/nft/{address}/transferFrom": {
			"post": {
				"operationId": "TransferFrom",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/VeTheNFTAPIResponse_VeNFTExecuteFunctionResult_"
								}
							}
						}
					}
				},
				"tags": [
					"VeTheNFT"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/VeNFTInputBody"
							}
						}
					}
				}
			}
		},
		"/thena/nft/{address}/safeTransferFrom": {
			"post": {
				"operationId": "SafeTransferFrom",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/VeTheNFTAPIResponse_VeNFTExecuteFunctionResult_"
								}
							}
						}
					}
				},
				"tags": [
					"VeTheNFT"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/VeNFTInputBody"
							}
						}
					}
				}
			}
		},
		"/thena/nft/{address}/merge": {
			"post": {
				"operationId": "Merge",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/VeTheNFTAPIResponse_VeNFTExecuteFunctionResult_"
								}
							}
						}
					}
				},
				"tags": [
					"VeTheNFT"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/VeNFTInputBody"
							}
						}
					}
				}
			}
		},
		"/thena/nft/{address}/split": {
			"post": {
				"operationId": "Split",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/VeTheNFTAPIResponse_VeNFTExecuteFunctionResult_"
								}
							}
						}
					}
				},
				"tags": [
					"VeTheNFT"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/VeNFTInputBody"
							}
						}
					}
				}
			}
		},
		"/thena/nft/{address}/voting": {
			"post": {
				"operationId": "Voting",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/VeTheNFTAPIResponse_VeNFTExecuteFunctionResult_"
								}
							}
						}
					}
				},
				"tags": [
					"VeTheNFT"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/VeNFTInputBody"
							}
						}
					}
				}
			}
		},
		"/thena/nft/{address}/abstain": {
			"post": {
				"operationId": "Abstain",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/VeTheNFTAPIResponse_VeNFTExecuteFunctionResult_"
								}
							}
						}
					}
				},
				"tags": [
					"VeTheNFT"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/VeNFTInputBody"
							}
						}
					}
				}
			}
		},
		"/thena/nft/{address}/attach": {
			"post": {
				"operationId": "Attach",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/VeTheNFTAPIResponse_VeNFTExecuteFunctionResult_"
								}
							}
						}
					}
				},
				"tags": [
					"VeTheNFT"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/VeNFTInputBody"
							}
						}
					}
				}
			}
		},
		"/thena/nft/{address}/detach": {
			"post": {
				"operationId": "Detach",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/VeTheNFTAPIResponse_VeNFTExecuteFunctionResult_"
								}
							}
						}
					}
				},
				"tags": [
					"VeTheNFT"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/VeNFTInputBody"
							}
						}
					}
				}
			}
		},
		"/thena/nft/{address}/depositFor": {
			"post": {
				"operationId": "DepositFor",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/VeTheNFTAPIResponse_VeNFTExecuteFunctionResult_"
								}
							}
						}
					}
				},
				"tags": [
					"VeTheNFT"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/VeNFTInputBody"
							}
						}
					}
				}
			}
		},
		"/thena/nft/{address}/checkpoint": {
			"post": {
				"operationId": "Checkpoint",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/VeTheNFTAPIResponse_VeNFTExecuteFunctionResult_"
								}
							}
						}
					}
				},
				"tags": [
					"VeTheNFT"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/VeNFTInputBody"
							}
						}
					}
				}
			}
		},
		"/thena/nft/{address}/delegate": {
			"post": {
				"operationId": "Delegate",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/VeTheNFTAPIResponse_VeNFTExecuteFunctionResult_"
								}
							}
						}
					}
				},
				"tags": [
					"VeTheNFT"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/VeNFTInputBody"
							}
						}
					}
				}
			}
		},
		"/thena/nft/{address}/delegateBySig": {
			"post": {
				"operationId": "DelegateBySig",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/VeTheNFTAPIResponse_VeNFTExecuteFunctionResult_"
								}
							}
						}
					}
				},
				"tags": [
					"VeTheNFT"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/VeNFTInputBody"
							}
						}
					}
				}
			}
		},
		"/thena/nft/{tokenId}/getLastUserSlope": {
			"get": {
				"operationId": "GetLastUserSlope",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/VeTheNFTAPIResponse_string_"
								}
							}
						}
					}
				},
				"tags": [
					"VeTheNFT"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "tokenId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "chainId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/thena/nft/{tokenId}/userPointHistory": {
			"get": {
				"operationId": "GetUserPointHistory",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/VeTheNFTAPIResponse_UserPointHistoryData_"
								}
							}
						}
					}
				},
				"tags": [
					"VeTheNFT"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "tokenId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "chainId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "loc",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/thena/nft/{tokenId}/userPointHistoryTS": {
			"get": {
				"operationId": "GetUserPointHistoryTS",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/VeTheNFTAPIResponse_string_"
								}
							}
						}
					}
				},
				"tags": [
					"VeTheNFT"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "tokenId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "chainId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "idx",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/thena/nft/{tokenId}/balanceOfAtNFT": {
			"get": {
				"operationId": "GetBalanceOfAtNFT",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/VeTheNFTAPIResponse_string_"
								}
							}
						}
					}
				},
				"tags": [
					"VeTheNFT"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "tokenId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "chainId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "block",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/thena/nft/totalSupplyAt": {
			"get": {
				"operationId": "GetTotalSupplyAt",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/VeTheNFTAPIResponse_string_"
								}
							}
						}
					}
				},
				"tags": [
					"VeTheNFT"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "chainId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "block",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/thena/nft/totalSupplyAtT": {
			"get": {
				"operationId": "GetTotalSupplyAtT",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/VeTheNFTAPIResponse_string_"
								}
							}
						}
					}
				},
				"tags": [
					"VeTheNFT"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "chainId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "t",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/thena/nft/{account}/getPastVotes": {
			"get": {
				"operationId": "GetPastVotes",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/VeTheNFTAPIResponse_string_"
								}
							}
						}
					}
				},
				"tags": [
					"VeTheNFT"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "account",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "chainId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "timestamp",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/thena/nft/getPastTotalSupply": {
			"get": {
				"operationId": "GetPastTotalSupply",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/VeTheNFTAPIResponse_string_"
								}
							}
						}
					}
				},
				"tags": [
					"VeTheNFT"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "chainId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "timestamp",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/thena/nft/{account}/getVotes": {
			"get": {
				"operationId": "GetVotes",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/VeTheNFTAPIResponse_string_"
								}
							}
						}
					}
				},
				"tags": [
					"VeTheNFT"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "account",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "chainId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/thena/nft/{delegator}/delegates": {
			"get": {
				"operationId": "GetDelegates",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/VeTheNFTAPIResponse_string_"
								}
							}
						}
					}
				},
				"tags": [
					"VeTheNFT"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "delegator",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "chainId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/thena/voter/totalWeight": {
			"get": {
				"operationId": "GetTotalWeight",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/VeTheNftVoterAPIResponse_string_"
								}
							}
						}
					}
				},
				"tags": [
					"VeTheNftVoter"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "chainId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/thena/voter/weights": {
			"get": {
				"operationId": "GetWeights",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/VeTheNftVoterAPIResponse_string_"
								}
							}
						}
					}
				},
				"tags": [
					"VeTheNftVoter"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "chainId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "pool",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/thena/voter/isGauge": {
			"get": {
				"operationId": "IsGauge",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/VeTheNftVoterAPIResponse_boolean_"
								}
							}
						}
					}
				},
				"tags": [
					"VeTheNftVoter"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "chainId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "gauge",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/thena/voter/{address}/vote": {
			"post": {
				"operationId": "Vote",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/VeTheNftVoterAPIResponse_VeTheNftVoterExecuteFunctionResult_"
								}
							}
						}
					}
				},
				"tags": [
					"VeTheNftVoter"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/VeTheNftVoterInputBody"
							}
						}
					}
				}
			}
		},
		"/thena/voter/{address}/reset": {
			"post": {
				"operationId": "Reset",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/VeTheNftVoterAPIResponse_VeTheNftVoterExecuteFunctionResult_"
								}
							}
						}
					}
				},
				"tags": [
					"VeTheNftVoter"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/VeTheNftVoterInputBody"
							}
						}
					}
				}
			}
		},
		"/thena/voter/{address}/poke": {
			"post": {
				"operationId": "Poke",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/VeTheNftVoterAPIResponse_VeTheNftVoterExecuteFunctionResult_"
								}
							}
						}
					}
				},
				"tags": [
					"VeTheNftVoter"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/VeTheNftVoterInputBody"
							}
						}
					}
				}
			}
		},
		"/thena/voter/{address}/createGauge": {
			"post": {
				"operationId": "CreateGauge",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/VeTheNftVoterAPIResponse_VeTheNftVoterExecuteFunctionResult_"
								}
							}
						}
					}
				},
				"tags": [
					"VeTheNftVoter"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/VeTheNftVoterInputBody"
							}
						}
					}
				}
			}
		},
		"/thena/voter/{address}/voteWithOptimalDistribution": {
			"post": {
				"operationId": "VoteWithOptimalDistribution",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/VeTheNftVoterAPIResponse_VeTheNftVoterExecuteFunctionResult_"
								}
							}
						}
					}
				},
				"tags": [
					"VeTheNftVoter"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"allOf": [
									{
										"$ref": "#/components/schemas/VeTheNftVoterInputBody"
									},
									{
										"properties": {
											"maxFusions": {
												"type": "number",
												"format": "double"
											},
											"totalVotes": {
												"type": "number",
												"format": "double"
											}
										},
										"required": [
											"totalVotes"
										],
										"type": "object"
									}
								]
							}
						}
					}
				}
			}
		},
		"/thena/voter/isWhitelisted": {
			"get": {
				"operationId": "IsWhitelisted",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/VeTheNftVoterAPIResponse_boolean_"
								}
							}
						}
					}
				},
				"tags": [
					"VeTheNftVoter"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "chainId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "tokenAddress",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/thena/voter/lastVoted": {
			"get": {
				"operationId": "LastVoted",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/VeTheNftVoterAPIResponse_string_"
								}
							}
						}
					}
				},
				"tags": [
					"VeTheNftVoter"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "chainId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "tokenId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/thena/voter/poolVoteLength": {
			"get": {
				"operationId": "PoolVoteLength",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/VeTheNftVoterAPIResponse_string_"
								}
							}
						}
					}
				},
				"tags": [
					"VeTheNftVoter"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "chainId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "tokenId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/thena/voter/{address}/attachTokenToGauge": {
			"post": {
				"operationId": "AttachTokenToGauge",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/VeTheNftVoterAPIResponse_VeTheNftVoterExecuteFunctionResult_"
								}
							}
						}
					}
				},
				"tags": [
					"VeTheNftVoter"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/VeTheNftVoterInputBody"
							}
						}
					}
				}
			}
		},
		"/thena/voter/{address}/detachTokenFromGauge": {
			"post": {
				"operationId": "DetachTokenFromGauge",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/VeTheNftVoterAPIResponse_VeTheNftVoterExecuteFunctionResult_"
								}
							}
						}
					}
				},
				"tags": [
					"VeTheNftVoter"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/VeTheNftVoterInputBody"
							}
						}
					}
				}
			}
		},
		"/thena/voter/{address}/killGauge": {
			"post": {
				"operationId": "KillGauge",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/VeTheNftVoterAPIResponse_VeTheNftVoterExecuteFunctionResult_"
								}
							}
						}
					}
				},
				"tags": [
					"VeTheNftVoter"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/VeTheNftVoterInputBody"
							}
						}
					}
				}
			}
		},
		"/thena/voter/{address}/reviveGauge": {
			"post": {
				"operationId": "ReviveGauge",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/VeTheNftVoterAPIResponse_VeTheNftVoterExecuteFunctionResult_"
								}
							}
						}
					}
				},
				"tags": [
					"VeTheNftVoter"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/VeTheNftVoterInputBody"
							}
						}
					}
				}
			}
		},
		"/thena/voter/{address}/notifyRewardAmount": {
			"post": {
				"operationId": "NotifyRewardAmount",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/VeTheNftVoterAPIResponse_VeTheNftVoterExecuteFunctionResult_"
								}
							}
						}
					}
				},
				"tags": [
					"VeTheNftVoter"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/VeTheNftVoterInputBody"
							}
						}
					}
				}
			}
		},
		"/thena/voter/{address}/distribute": {
			"post": {
				"operationId": "Distribute",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/VeTheNftVoterAPIResponse_VeTheNftVoterExecuteFunctionResult_"
								}
							}
						}
					}
				},
				"tags": [
					"VeTheNftVoter"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/VeTheNftVoterInputBody"
							}
						}
					}
				}
			}
		},
		"/thena/voter/{address}/claimBribes": {
			"post": {
				"operationId": "ClaimBribes",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/VeTheNftVoterAPIResponse_VeTheNftVoterExecuteFunctionResult_"
								}
							}
						}
					}
				},
				"tags": [
					"VeTheNftVoter"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/VeTheNftVoterInputBody"
							}
						}
					}
				}
			}
		},
		"/thena/voter/{address}/claimFees": {
			"post": {
				"operationId": "ClaimFees",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/VeTheNftVoterAPIResponse_VeTheNftVoterExecuteFunctionResult_"
								}
							}
						}
					}
				},
				"tags": [
					"VeTheNftVoter"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/VeTheNftVoterInputBody"
							}
						}
					}
				}
			}
		},
		"/thena/voter/{address}/claimRewards": {
			"post": {
				"operationId": "ClaimRewards",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/VeTheNftVoterAPIResponse_VeTheNftVoterExecuteFunctionResult_"
								}
							}
						}
					}
				},
				"tags": [
					"VeTheNftVoter"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/VeTheNftVoterInputBody"
							}
						}
					}
				}
			}
		},
		"/thena/voter/{address}/whitelist": {
			"post": {
				"operationId": "Whitelist",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/VeTheNftVoterAPIResponse_VeTheNftVoterExecuteFunctionResult_"
								}
							}
						}
					}
				},
				"tags": [
					"VeTheNftVoter"
				],
				"security": [
					{
						"BearerAuth": []
					},
					{
						"Oauth2": []
					},
					{
						"ApiKeyAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "address",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "Authorization",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/VeTheNftVoterInputBody"
							}
						}
					}
				}
			}
		}
	},
	"servers": [
		{
			"url": "https://beta.usemoon.ai/"
		}
	]
}