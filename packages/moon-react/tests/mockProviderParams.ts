import { MoonSDK } from '@moonup/moon-sdk';
import { supabase } from '../src/supabase';

export const mockProvider = {
  // Add mock values for the MoonSDKContext here
  moon: new MoonSDK({
    authInstance: supabase,
  }),
  session: {
    access_token: 'mock-access-token',
    refresh_token: '<PASSWORD>-refresh-token',
    expires_in: 3600,
    token_type: 'Bearer',
    user: {
      id: 'mock-user-id',
      app_metadata: {},
      user_metadata: {},
      aud: '',
      created_at: '',
    },
  },
  authConfig: {
    enabled: false,
    socialLogins: [],
    walletConnectEnabled: false,
    anonymousLoginEnabled: false,
    appearance: {
      logo: undefined,
      welcomeMessage: undefined,
      signupMessage: undefined,
      modal: {
        backdropColor: undefined,
        backgroundColor: undefined,
        borderRadius: undefined,
        padding: undefined,
        width: undefined,
        className: undefined,
      },
      input: {
        borderRadius: undefined,
        placeholders: {
          email: '',
          password: '',
        },
        className: undefined,
      },
      button: {
        borderRadius: undefined,
        padding: undefined,
        height: undefined,
        className: undefined,
      },
      splashImage: undefined,
      font: undefined,
    },
    theming: {
      accentColor: '',
      successColor: '',
      errorColor: '',
      infoColor: '',
      warningColor: '',
      backgroundColor: '',
      backgroundColorSecondary: '',
      textColor: '',
      textColorSecondary: '',
      buttonColor: '',
      buttonColorSecondary: '',
    },
  },
  dbAdapter: () => {},
  loading: false,
  supabase: null,
  chatOpen: false,
  wallets: [],
  aliases: [],
  chains: [],
  chain: null,
  wallet: '',
  transactionHistory: [],
  wagmiConfig: null,

  connect: async () => {},
  disconnect: async () => {},
  getUserSession: async () => {},
  connectEthers: async () => {},
  disconnectEthers: async () => {},
  request: async () => {},
  signOut: async () => {},
  createWallet: async () => {},
  listWallets: async () => {},
  fetchAliases: async () => {},
  setWallet: async () => {},
  listChains: async () => {},
  setChain: async () => {},
  setChatOpen: async () => {},
  addTransactionResult: async () => {},
  // ... other necessary mock values
};
